
RECEIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006984  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000278  00800060  00006984  00006a18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c9  008002d8  008002d8  00006c90  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006c90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006cec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000540  00000000  00000000  00006d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000ed45  00000000  00000000  00007268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000185a  00000000  00000000  00015fad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000054f1  00000000  00000000  00017807  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001788  00000000  00000000  0001ccf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001390  00000000  00000000  0001e480  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00008b2e  00000000  00000000  0001f810  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000518  00000000  00000000  0002833e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
       4:	0c 94 67 15 	jmp	0x2ace	; 0x2ace <__vector_1>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 a5 10 	jmp	0x214a	; 0x214a <__vector_7>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      28:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__vector_10>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	5d 2b       	or	r21, r29
      56:	67 2b       	or	r22, r23
      58:	71 2b       	or	r23, r17
      5a:	7b 2b       	or	r23, r27
      5c:	85 2b       	or	r24, r21
      5e:	8f 2b       	or	r24, r31
      60:	99 2b       	or	r25, r25
      62:	b0 2b       	or	r27, r16
      64:	b8 2b       	or	r27, r24
      66:	c0 2b       	or	r28, r16
      68:	c8 2b       	or	r28, r24
      6a:	d0 2b       	or	r29, r16
      6c:	d8 2b       	or	r29, r24
      6e:	e0 2b       	or	r30, r16
      70:	e8 2b       	or	r30, r24
      72:	f0 2b       	or	r31, r16
      74:	f8 2b       	or	r31, r24
      76:	00 2c       	mov	r0, r0
      78:	08 2c       	mov	r0, r8

0000007a <__trampolines_end>:
      7a:	63 64       	ori	r22, 0x43	; 67
      7c:	69 6e       	ori	r22, 0xE9	; 233
      7e:	6f 70       	andi	r22, 0x0F	; 15
      80:	73 75       	andi	r23, 0x53	; 83
      82:	78 58       	subi	r23, 0x88	; 136
      84:	5b 00       	.word	0x005b	; ????

00000086 <__ctors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf e5       	ldi	r28, 0x5F	; 95
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	12 e0       	ldi	r17, 0x02	; 2
      94:	a0 e6       	ldi	r26, 0x60	; 96
      96:	b0 e0       	ldi	r27, 0x00	; 0
      98:	e4 e8       	ldi	r30, 0x84	; 132
      9a:	f9 e6       	ldi	r31, 0x69	; 105
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a8 3d       	cpi	r26, 0xD8	; 216
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	23 e0       	ldi	r18, 0x03	; 3
      aa:	a8 ed       	ldi	r26, 0xD8	; 216
      ac:	b2 e0       	ldi	r27, 0x02	; 2
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	a1 3a       	cpi	r26, 0xA1	; 161
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <main>
      bc:	0c 94 c0 34 	jmp	0x6980	; 0x6980 <_exit>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <dt_testdevice>:
  return tt;
}
//функци€ определени€ датчика на шине
char dt_testdevice(void) //dt Ч digital termomether | определим, есть ли устройство на шине
{
  char stektemp=SREG;// сохраним значение стека
      c4:	9f b7       	in	r25, 0x3f	; 63
  cli(); //запрещаем прерывани€
      c6:	f8 94       	cli
  char dt;
  DDRTEMP |= 1<<BITTEMP; //прит€гиваем шину
      c8:	87 b3       	in	r24, 0x17	; 23
      ca:	82 60       	ori	r24, 0x02	; 2
      cc:	87 bb       	out	0x17, r24	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ce:	e3 e9       	ldi	r30, 0x93	; 147
      d0:	f7 e0       	ldi	r31, 0x07	; 7
      d2:	31 97       	sbiw	r30, 0x01	; 1
      d4:	f1 f7       	brne	.-4      	; 0xd2 <dt_testdevice+0xe>
      d6:	00 c0       	rjmp	.+0      	; 0xd8 <dt_testdevice+0x14>
      d8:	00 00       	nop
  _delay_us(485); //задержка как минимум на 480 микросекунд
  DDRTEMP &= ~(1<<BITTEMP); //отпускаем шину
      da:	87 b3       	in	r24, 0x17	; 23
      dc:	8d 7f       	andi	r24, 0xFD	; 253
      de:	87 bb       	out	0x17, r24	; 23
      e0:	e3 e0       	ldi	r30, 0x03	; 3
      e2:	f1 e0       	ldi	r31, 0x01	; 1
      e4:	31 97       	sbiw	r30, 0x01	; 1
      e6:	f1 f7       	brne	.-4      	; 0xe4 <dt_testdevice+0x20>
      e8:	00 c0       	rjmp	.+0      	; 0xea <dt_testdevice+0x26>
      ea:	00 00       	nop
  _delay_us(65); //задержка как минимум на 60 микросекунд
  if ((PINTEMP & (1<<BITTEMP))==0)//провер€ем, ответит ли устройство
      ec:	b1 99       	sbic	0x16, 1	; 22
      ee:	02 c0       	rjmp	.+4      	; 0xf4 <dt_testdevice+0x30>
  {
	  dt=1;//устройство есть
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	01 c0       	rjmp	.+2      	; 0xf6 <dt_testdevice+0x32>
  }
  else dt=0;//устройства нет
      f4:	80 e0       	ldi	r24, 0x00	; 0
  SREG = stektemp;// вернем значение стека
      f6:	9f bf       	out	0x3f, r25	; 63
      f8:	ef e8       	ldi	r30, 0x8F	; 143
      fa:	f6 e0       	ldi	r31, 0x06	; 6
      fc:	31 97       	sbiw	r30, 0x01	; 1
      fe:	f1 f7       	brne	.-4      	; 0xfc <dt_testdevice+0x38>
     100:	00 c0       	rjmp	.+0      	; 0x102 <dt_testdevice+0x3e>
     102:	00 00       	nop
  _delay_us(420); //задержка как минимум на 480 микросекунд, но хватит и 420, тк это с учетом времени прошедших команд
  return dt; //вернем результат
}
     104:	08 95       	ret

00000106 <dt_readbit>:
	return c;
}
//функци€ чтени€ бита с устройства
char dt_readbit(void)
{
  char stektemp=SREG;// сохраним значение стека
     106:	2f b7       	in	r18, 0x3f	; 63
  cli(); //запрещаем прерывание
     108:	f8 94       	cli
  char bt; //переменна€ хранени€ бита
  DDRTEMP |= 1<<BITTEMP; //прит€гиваем шину
     10a:	87 b3       	in	r24, 0x17	; 23
     10c:	82 60       	ori	r24, 0x02	; 2
     10e:	87 bb       	out	0x17, r24	; 23
     110:	3a e0       	ldi	r19, 0x0A	; 10
     112:	3a 95       	dec	r19
     114:	f1 f7       	brne	.-4      	; 0x112 <dt_readbit+0xc>
     116:	00 c0       	rjmp	.+0      	; 0x118 <dt_readbit+0x12>
  _delay_us(2); //задержка как минимум на 2 микросекунды
  DDRTEMP &= ~(1<<BITTEMP); //отпускаем шину
     118:	87 b3       	in	r24, 0x17	; 23
     11a:	8d 7f       	andi	r24, 0xFD	; 253
     11c:	87 bb       	out	0x17, r24	; 23
     11e:	85 e4       	ldi	r24, 0x45	; 69
     120:	8a 95       	dec	r24
     122:	f1 f7       	brne	.-4      	; 0x120 <dt_readbit+0x1a>
     124:	00 00       	nop
  _delay_us(13);
  bt = (PINTEMP & (1<<BITTEMP))>>BITTEMP; //читаем бит
     126:	86 b3       	in	r24, 0x16	; 22
     128:	82 70       	andi	r24, 0x02	; 2
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	95 95       	asr	r25
     12e:	87 95       	ror	r24
     130:	30 ef       	ldi	r19, 0xF0	; 240
     132:	3a 95       	dec	r19
     134:	f1 f7       	brne	.-4      	; 0x132 <dt_readbit+0x2c>
  _delay_us(45);
  SREG = stektemp;// вернем значение стека
     136:	2f bf       	out	0x3f, r18	; 63
  return bt; //вернем результат
}
     138:	08 95       	ret

0000013a <dt_readbyte>:
  _delay_us(420); //задержка как минимум на 480 микросекунд, но хватит и 420, тк это с учетом времени прошедших команд
  return dt; //вернем результат
}
//функци€ чтени€ байта с устройства
unsigned char dt_readbyte(void)
{
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
	char c=0;
	char i;
	for(i=0;i<8;i++)
     13e:	c0 e0       	ldi	r28, 0x00	; 0
  return dt; //вернем результат
}
//функци€ чтени€ байта с устройства
unsigned char dt_readbyte(void)
{
	char c=0;
     140:	d0 e0       	ldi	r29, 0x00	; 0
	char i;
	for(i=0;i<8;i++)
     142:	0b c0       	rjmp	.+22     	; 0x15a <dt_readbyte+0x20>
	{
	  c|=dt_readbit()<<i; //читаем бит
     144:	0e 94 83 00 	call	0x106	; 0x106 <dt_readbit>
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	0c 2e       	mov	r0, r28
     14c:	02 c0       	rjmp	.+4      	; 0x152 <dt_readbyte+0x18>
     14e:	88 0f       	add	r24, r24
     150:	99 1f       	adc	r25, r25
     152:	0a 94       	dec	r0
     154:	e2 f7       	brpl	.-8      	; 0x14e <dt_readbyte+0x14>
     156:	d8 2b       	or	r29, r24
//функци€ чтени€ байта с устройства
unsigned char dt_readbyte(void)
{
	char c=0;
	char i;
	for(i=0;i<8;i++)
     158:	cf 5f       	subi	r28, 0xFF	; 255
     15a:	c8 30       	cpi	r28, 0x08	; 8
     15c:	98 f3       	brcs	.-26     	; 0x144 <dt_readbyte+0xa>
	{
	  c|=dt_readbit()<<i; //читаем бит
	}
	return c;
}
     15e:	8d 2f       	mov	r24, r29
     160:	df 91       	pop	r29
     162:	cf 91       	pop	r28
     164:	08 95       	ret

00000166 <dt_sendbit>:
	}
}
//функци€ записи бита на устройство
void dt_sendbit(char bt)
{
	char stektemp=SREG;// сохраним значение стека
     166:	2f b7       	in	r18, 0x3f	; 63
	cli(); //запрещаем прерывание
     168:	f8 94       	cli
	DDRTEMP |= 1<<BITTEMP; //прит€гиваем шину
     16a:	97 b3       	in	r25, 0x17	; 23
     16c:	92 60       	ori	r25, 0x02	; 2
     16e:	97 bb       	out	0x17, r25	; 23
     170:	9a e0       	ldi	r25, 0x0A	; 10
     172:	9a 95       	dec	r25
     174:	f1 f7       	brne	.-4      	; 0x172 <dt_sendbit+0xc>
     176:	00 c0       	rjmp	.+0      	; 0x178 <dt_sendbit+0x12>
	_delay_us(2); //задержка как минимум на 2 микросекунды
	if(bt)
     178:	88 23       	and	r24, r24
     17a:	19 f0       	breq	.+6      	; 0x182 <dt_sendbit+0x1c>
    {
	  DDRTEMP &= ~(1<<BITTEMP); //отпускаем шину
     17c:	87 b3       	in	r24, 0x17	; 23
     17e:	8d 7f       	andi	r24, 0xFD	; 253
     180:	87 bb       	out	0x17, r24	; 23
     182:	83 e0       	ldi	r24, 0x03	; 3
     184:	91 e0       	ldi	r25, 0x01	; 1
     186:	01 97       	sbiw	r24, 0x01	; 1
     188:	f1 f7       	brne	.-4      	; 0x186 <dt_sendbit+0x20>
     18a:	00 c0       	rjmp	.+0      	; 0x18c <dt_sendbit+0x26>
     18c:	00 00       	nop
	}
	_delay_us(65); //задержка как минимум на 60 микросекунд
	DDRTEMP &= ~(1<<BITTEMP); //отпускаем шину
     18e:	87 b3       	in	r24, 0x17	; 23
     190:	8d 7f       	andi	r24, 0xFD	; 253
     192:	87 bb       	out	0x17, r24	; 23
	SREG = stektemp;// вернем значение стека
     194:	2f bf       	out	0x3f, r18	; 63
     196:	08 95       	ret

00000198 <dt_sendbyte>:
  SREG = stektemp;// вернем значение стека
  return bt; //вернем результат
}
//функци€ записи байта на устройство
void dt_sendbyte(unsigned char bt)
{
     198:	cf 93       	push	r28
     19a:	df 93       	push	r29
     19c:	d8 2f       	mov	r29, r24
	char i;
	for(i=0;i<8;i++)//посылаем отдельно каждый бит на устройство
     19e:	c0 e0       	ldi	r28, 0x00	; 0
     1a0:	17 c0       	rjmp	.+46     	; 0x1d0 <dt_sendbyte+0x38>
	{
		if((bt & (1<<i)) == 1<<i)//посылаем 1
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	0c 2e       	mov	r0, r28
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <dt_sendbyte+0x16>
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	0a 94       	dec	r0
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <dt_sendbyte+0x12>
     1b2:	2d 2f       	mov	r18, r29
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	28 23       	and	r18, r24
     1b8:	39 23       	and	r19, r25
     1ba:	82 17       	cp	r24, r18
     1bc:	93 07       	cpc	r25, r19
     1be:	21 f4       	brne	.+8      	; 0x1c8 <dt_sendbyte+0x30>
		dt_sendbit(1);
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 b3 00 	call	0x166	; 0x166 <dt_sendbit>
     1c6:	03 c0       	rjmp	.+6      	; 0x1ce <dt_sendbyte+0x36>
		else //посылаем 0
		dt_sendbit(0);
     1c8:	80 e0       	ldi	r24, 0x00	; 0
     1ca:	0e 94 b3 00 	call	0x166	; 0x166 <dt_sendbit>
}
//функци€ записи байта на устройство
void dt_sendbyte(unsigned char bt)
{
	char i;
	for(i=0;i<8;i++)//посылаем отдельно каждый бит на устройство
     1ce:	cf 5f       	subi	r28, 0xFF	; 255
     1d0:	c8 30       	cpi	r28, 0x08	; 8
     1d2:	38 f3       	brcs	.-50     	; 0x1a2 <dt_sendbyte+0xa>
		if((bt & (1<<i)) == 1<<i)//посылаем 1
		dt_sendbit(1);
		else //посылаем 0
		dt_sendbit(0);
	}
}
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	08 95       	ret

000001da <dt_check>:

#include "DS18B20.h"

//функци€ преобразовани€ показаний датчика в температуру
int dt_check(void)
{
     1da:	cf 93       	push	r28
  unsigned char bt;//переменна€ дл€ считывани€ байта
  unsigned int tt=0;
  if(dt_testdevice()==1) //если устройство нашлось
     1dc:	0e 94 62 00 	call	0xc4	; 0xc4 <dt_testdevice>
     1e0:	81 30       	cpi	r24, 0x01	; 1
     1e2:	09 f5       	brne	.+66     	; 0x226 <dt_check+0x4c>
  {
   dt_sendbyte(NOID); //пропустить идентификацию, тк у нас только одно устройство на шине
     1e4:	8c ec       	ldi	r24, 0xCC	; 204
     1e6:	0e 94 cc 00 	call	0x198	; 0x198 <dt_sendbyte>
   dt_sendbyte(T_CONVERT); //измер€ем температуру
     1ea:	84 e4       	ldi	r24, 0x44	; 68
     1ec:	0e 94 cc 00 	call	0x198	; 0x198 <dt_sendbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1f0:	2f ef       	ldi	r18, 0xFF	; 255
     1f2:	8e e9       	ldi	r24, 0x9E	; 158
     1f4:	94 e2       	ldi	r25, 0x24	; 36
     1f6:	21 50       	subi	r18, 0x01	; 1
     1f8:	80 40       	sbci	r24, 0x00	; 0
     1fa:	90 40       	sbci	r25, 0x00	; 0
     1fc:	e1 f7       	brne	.-8      	; 0x1f6 <dt_check+0x1c>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <dt_check+0x26>
     200:	00 00       	nop
   _delay_ms(750); //в 12 битном режиме преобразовани€ Ч 100 милисекунд
   dt_testdevice(); //снова используем те же манипул€ции с шиной что и при проверке ее присутстви€
     202:	0e 94 62 00 	call	0xc4	; 0xc4 <dt_testdevice>
   dt_sendbyte(NOID); //пропустить идентификацию, тк у нас только одно устройство на шине
     206:	8c ec       	ldi	r24, 0xCC	; 204
     208:	0e 94 cc 00 	call	0x198	; 0x198 <dt_sendbyte>
   dt_sendbyte(READ_DATA); //даем команду на чтение данных с устройства
     20c:	8e eb       	ldi	r24, 0xBE	; 190
     20e:	0e 94 cc 00 	call	0x198	; 0x198 <dt_sendbyte>
   bt = dt_readbyte(); //читаем младший бит
     212:	0e 94 9d 00 	call	0x13a	; 0x13a <dt_readbyte>
     216:	c8 2f       	mov	r28, r24
   tt = dt_readbyte(); //читаем старший бит MS
     218:	0e 94 9d 00 	call	0x13a	; 0x13a <dt_readbyte>
     21c:	90 e0       	ldi	r25, 0x00	; 0
   tt = (tt<<8)|bt;//сдвигаем старший влево, младший пишем на его место, тем самым получаем общий результат
     21e:	98 2f       	mov	r25, r24
     220:	88 27       	eor	r24, r24
     222:	8c 2b       	or	r24, r28
     224:	02 c0       	rjmp	.+4      	; 0x22a <dt_check+0x50>

//функци€ преобразовани€ показаний датчика в температуру
int dt_check(void)
{
  unsigned char bt;//переменна€ дл€ считывани€ байта
  unsigned int tt=0;
     226:	80 e0       	ldi	r24, 0x00	; 0
     228:	90 e0       	ldi	r25, 0x00	; 0
   bt = dt_readbyte(); //читаем младший бит
   tt = dt_readbyte(); //читаем старший бит MS
   tt = (tt<<8)|bt;//сдвигаем старший влево, младший пишем на его место, тем самым получаем общий результат
  }
  return tt;
}
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <ILI9486_Write8>:
	cursor_x = y;
	cursor_y = x;
}
void ILI9486_SetTextSize(uint8_t s)
{
	textsize = s ;
     22e:	8b bb       	out	0x1b, r24	; 27
     230:	85 b3       	in	r24, 0x15	; 21
     232:	8f 7e       	andi	r24, 0xEF	; 239
     234:	85 bb       	out	0x15, r24	; 21
     236:	85 b3       	in	r24, 0x15	; 21
     238:	80 61       	ori	r24, 0x10	; 16
     23a:	85 bb       	out	0x15, r24	; 21
     23c:	08 95       	ret

0000023e <ILI9486_Write16>:
     23e:	cf 93       	push	r28
     240:	c8 2f       	mov	r28, r24
     242:	89 2f       	mov	r24, r25
     244:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     248:	8c 2f       	mov	r24, r28
     24a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     24e:	cf 91       	pop	r28
     250:	08 95       	ret

00000252 <ILI9486_SendCommand>:
     252:	25 b3       	in	r18, 0x15	; 21
     254:	2f 7d       	andi	r18, 0xDF	; 223
     256:	25 bb       	out	0x15, r18	; 21
     258:	0e 94 1f 01 	call	0x23e	; 0x23e <ILI9486_Write16>
     25c:	85 b3       	in	r24, 0x15	; 21
     25e:	80 62       	ori	r24, 0x20	; 32
     260:	85 bb       	out	0x15, r24	; 21
     262:	08 95       	ret

00000264 <ILI9486_SendData>:
     264:	25 b3       	in	r18, 0x15	; 21
     266:	20 62       	ori	r18, 0x20	; 32
     268:	25 bb       	out	0x15, r18	; 21
     26a:	0e 94 1f 01 	call	0x23e	; 0x23e <ILI9486_Write16>
     26e:	08 95       	ret

00000270 <ILI9486_Write_Cmd_Data>:
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	eb 01       	movw	r28, r22
     276:	25 b3       	in	r18, 0x15	; 21
     278:	2f 7b       	andi	r18, 0xBF	; 191
     27a:	25 bb       	out	0x15, r18	; 21
     27c:	0e 94 29 01 	call	0x252	; 0x252 <ILI9486_SendCommand>
     280:	ce 01       	movw	r24, r28
     282:	0e 94 32 01 	call	0x264	; 0x264 <ILI9486_SendData>
     286:	85 b3       	in	r24, 0x15	; 21
     288:	80 64       	ori	r24, 0x40	; 64
     28a:	85 bb       	out	0x15, r24	; 21
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	08 95       	ret

00000292 <ILI9486_reset>:
     292:	8f ef       	ldi	r24, 0xFF	; 255
     294:	8a bb       	out	0x1a, r24	; 26
     296:	85 b3       	in	r24, 0x15	; 21
     298:	80 64       	ori	r24, 0x40	; 64
     29a:	85 bb       	out	0x15, r24	; 21
     29c:	85 b3       	in	r24, 0x15	; 21
     29e:	88 60       	ori	r24, 0x08	; 8
     2a0:	85 bb       	out	0x15, r24	; 21
     2a2:	85 b3       	in	r24, 0x15	; 21
     2a4:	80 61       	ori	r24, 0x10	; 16
     2a6:	85 bb       	out	0x15, r24	; 21
     2a8:	85 b3       	in	r24, 0x15	; 21
     2aa:	80 68       	ori	r24, 0x80	; 128
     2ac:	85 bb       	out	0x15, r24	; 21
     2ae:	2f ef       	ldi	r18, 0xFF	; 255
     2b0:	80 e7       	ldi	r24, 0x70	; 112
     2b2:	92 e0       	ldi	r25, 0x02	; 2
     2b4:	21 50       	subi	r18, 0x01	; 1
     2b6:	80 40       	sbci	r24, 0x00	; 0
     2b8:	90 40       	sbci	r25, 0x00	; 0
     2ba:	e1 f7       	brne	.-8      	; 0x2b4 <ILI9486_reset+0x22>
     2bc:	00 c0       	rjmp	.+0      	; 0x2be <ILI9486_reset+0x2c>
     2be:	00 00       	nop
     2c0:	85 b3       	in	r24, 0x15	; 21
     2c2:	8f 77       	andi	r24, 0x7F	; 127
     2c4:	85 bb       	out	0x15, r24	; 21
     2c6:	2f ef       	ldi	r18, 0xFF	; 255
     2c8:	81 ee       	ldi	r24, 0xE1	; 225
     2ca:	94 e0       	ldi	r25, 0x04	; 4
     2cc:	21 50       	subi	r18, 0x01	; 1
     2ce:	80 40       	sbci	r24, 0x00	; 0
     2d0:	90 40       	sbci	r25, 0x00	; 0
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <ILI9486_reset+0x3a>
     2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <ILI9486_reset+0x44>
     2d6:	00 00       	nop
     2d8:	85 b3       	in	r24, 0x15	; 21
     2da:	80 68       	ori	r24, 0x80	; 128
     2dc:	85 bb       	out	0x15, r24	; 21
     2de:	2f ef       	ldi	r18, 0xFF	; 255
     2e0:	81 ee       	ldi	r24, 0xE1	; 225
     2e2:	94 e0       	ldi	r25, 0x04	; 4
     2e4:	21 50       	subi	r18, 0x01	; 1
     2e6:	80 40       	sbci	r24, 0x00	; 0
     2e8:	90 40       	sbci	r25, 0x00	; 0
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <ILI9486_reset+0x52>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <ILI9486_reset+0x5c>
     2ee:	00 00       	nop
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	80 eb       	ldi	r24, 0xB0	; 176
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	0e 94 38 01 	call	0x270	; 0x270 <ILI9486_Write_Cmd_Data>
     2fc:	08 95       	ret

000002fe <ILI9486_SetRotation>:
     2fe:	cf 93       	push	r28
     300:	c8 2f       	mov	r28, r24
     302:	85 b3       	in	r24, 0x15	; 21
     304:	8f 7b       	andi	r24, 0xBF	; 191
     306:	85 bb       	out	0x15, r24	; 21
     308:	86 e3       	ldi	r24, 0x36	; 54
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	0e 94 29 01 	call	0x252	; 0x252 <ILI9486_SendCommand>
     310:	c1 30       	cpi	r28, 0x01	; 1
     312:	b1 f0       	breq	.+44     	; 0x340 <ILI9486_SetRotation+0x42>
     314:	28 f0       	brcs	.+10     	; 0x320 <ILI9486_SetRotation+0x22>
     316:	c2 30       	cpi	r28, 0x02	; 2
     318:	19 f1       	breq	.+70     	; 0x360 <ILI9486_SetRotation+0x62>
     31a:	c3 30       	cpi	r28, 0x03	; 3
     31c:	89 f1       	breq	.+98     	; 0x380 <ILI9486_SetRotation+0x82>
     31e:	3f c0       	rjmp	.+126    	; 0x39e <ILI9486_SetRotation+0xa0>
     320:	88 e4       	ldi	r24, 0x48	; 72
     322:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     326:	80 e4       	ldi	r24, 0x40	; 64
     328:	91 e0       	ldi	r25, 0x01	; 1
     32a:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <X_SIZE+0x1>
     32e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <X_SIZE>
     332:	80 ee       	ldi	r24, 0xE0	; 224
     334:	91 e0       	ldi	r25, 0x01	; 1
     336:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     33a:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
     33e:	2f c0       	rjmp	.+94     	; 0x39e <ILI9486_SetRotation+0xa0>
     340:	88 e2       	ldi	r24, 0x28	; 40
     342:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     346:	80 ee       	ldi	r24, 0xE0	; 224
     348:	91 e0       	ldi	r25, 0x01	; 1
     34a:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <X_SIZE+0x1>
     34e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <X_SIZE>
     352:	80 e4       	ldi	r24, 0x40	; 64
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     35a:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
     35e:	1f c0       	rjmp	.+62     	; 0x39e <ILI9486_SetRotation+0xa0>
     360:	88 e9       	ldi	r24, 0x98	; 152
     362:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     366:	80 e4       	ldi	r24, 0x40	; 64
     368:	91 e0       	ldi	r25, 0x01	; 1
     36a:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <X_SIZE+0x1>
     36e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <X_SIZE>
     372:	80 ee       	ldi	r24, 0xE0	; 224
     374:	91 e0       	ldi	r25, 0x01	; 1
     376:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     37a:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
     37e:	0f c0       	rjmp	.+30     	; 0x39e <ILI9486_SetRotation+0xa0>
     380:	88 ef       	ldi	r24, 0xF8	; 248
     382:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     386:	80 ee       	ldi	r24, 0xE0	; 224
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <X_SIZE+0x1>
     38e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <X_SIZE>
     392:	80 e4       	ldi	r24, 0x40	; 64
     394:	91 e0       	ldi	r25, 0x01	; 1
     396:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     39a:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
     39e:	85 b3       	in	r24, 0x15	; 21
     3a0:	80 64       	ori	r24, 0x40	; 64
     3a2:	85 bb       	out	0x15, r24	; 21
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <ILI9486_ini>:
     3a8:	0e 94 49 01 	call	0x292	; 0x292 <ILI9486_reset>
     3ac:	2f ef       	ldi	r18, 0xFF	; 255
     3ae:	85 ea       	ldi	r24, 0xA5	; 165
     3b0:	9e e0       	ldi	r25, 0x0E	; 14
     3b2:	21 50       	subi	r18, 0x01	; 1
     3b4:	80 40       	sbci	r24, 0x00	; 0
     3b6:	90 40       	sbci	r25, 0x00	; 0
     3b8:	e1 f7       	brne	.-8      	; 0x3b2 <ILI9486_ini+0xa>
     3ba:	00 c0       	rjmp	.+0      	; 0x3bc <ILI9486_ini+0x14>
     3bc:	00 00       	nop
     3be:	a8 95       	wdr
     3c0:	85 b3       	in	r24, 0x15	; 21
     3c2:	8f 7b       	andi	r24, 0xBF	; 191
     3c4:	85 bb       	out	0x15, r24	; 21
     3c6:	85 b3       	in	r24, 0x15	; 21
     3c8:	8f 7d       	andi	r24, 0xDF	; 223
     3ca:	85 bb       	out	0x15, r24	; 21
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     3d2:	85 b3       	in	r24, 0x15	; 21
     3d4:	80 64       	ori	r24, 0x40	; 64
     3d6:	85 bb       	out	0x15, r24	; 21
     3d8:	2f ef       	ldi	r18, 0xFF	; 255
     3da:	82 e5       	ldi	r24, 0x52	; 82
     3dc:	97 e0       	ldi	r25, 0x07	; 7
     3de:	21 50       	subi	r18, 0x01	; 1
     3e0:	80 40       	sbci	r24, 0x00	; 0
     3e2:	90 40       	sbci	r25, 0x00	; 0
     3e4:	e1 f7       	brne	.-8      	; 0x3de <ILI9486_ini+0x36>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <ILI9486_ini+0x40>
     3e8:	00 00       	nop
     3ea:	a8 95       	wdr
     3ec:	85 b3       	in	r24, 0x15	; 21
     3ee:	8f 7b       	andi	r24, 0xBF	; 191
     3f0:	85 bb       	out	0x15, r24	; 21
     3f2:	85 b3       	in	r24, 0x15	; 21
     3f4:	8f 7d       	andi	r24, 0xDF	; 223
     3f6:	85 bb       	out	0x15, r24	; 21
     3f8:	88 e2       	ldi	r24, 0x28	; 40
     3fa:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     3fe:	85 b3       	in	r24, 0x15	; 21
     400:	80 64       	ori	r24, 0x40	; 64
     402:	85 bb       	out	0x15, r24	; 21
     404:	85 b3       	in	r24, 0x15	; 21
     406:	8f 7b       	andi	r24, 0xBF	; 191
     408:	85 bb       	out	0x15, r24	; 21
     40a:	85 b3       	in	r24, 0x15	; 21
     40c:	8f 7d       	andi	r24, 0xDF	; 223
     40e:	85 bb       	out	0x15, r24	; 21
     410:	8a e3       	ldi	r24, 0x3A	; 58
     412:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     416:	85 b3       	in	r24, 0x15	; 21
     418:	80 62       	ori	r24, 0x20	; 32
     41a:	85 bb       	out	0x15, r24	; 21
     41c:	85 e5       	ldi	r24, 0x55	; 85
     41e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     422:	85 b3       	in	r24, 0x15	; 21
     424:	80 64       	ori	r24, 0x40	; 64
     426:	85 bb       	out	0x15, r24	; 21
     428:	85 b3       	in	r24, 0x15	; 21
     42a:	8f 7b       	andi	r24, 0xBF	; 191
     42c:	85 bb       	out	0x15, r24	; 21
     42e:	85 b3       	in	r24, 0x15	; 21
     430:	8f 7d       	andi	r24, 0xDF	; 223
     432:	85 bb       	out	0x15, r24	; 21
     434:	80 ec       	ldi	r24, 0xC0	; 192
     436:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     43a:	85 b3       	in	r24, 0x15	; 21
     43c:	80 62       	ori	r24, 0x20	; 32
     43e:	85 bb       	out	0x15, r24	; 21
     440:	8d e0       	ldi	r24, 0x0D	; 13
     442:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     446:	85 b3       	in	r24, 0x15	; 21
     448:	80 62       	ori	r24, 0x20	; 32
     44a:	85 bb       	out	0x15, r24	; 21
     44c:	8d e0       	ldi	r24, 0x0D	; 13
     44e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     452:	85 b3       	in	r24, 0x15	; 21
     454:	80 64       	ori	r24, 0x40	; 64
     456:	85 bb       	out	0x15, r24	; 21
     458:	85 b3       	in	r24, 0x15	; 21
     45a:	8f 7b       	andi	r24, 0xBF	; 191
     45c:	85 bb       	out	0x15, r24	; 21
     45e:	85 b3       	in	r24, 0x15	; 21
     460:	8f 7d       	andi	r24, 0xDF	; 223
     462:	85 bb       	out	0x15, r24	; 21
     464:	81 ec       	ldi	r24, 0xC1	; 193
     466:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     46a:	85 b3       	in	r24, 0x15	; 21
     46c:	80 62       	ori	r24, 0x20	; 32
     46e:	85 bb       	out	0x15, r24	; 21
     470:	83 e4       	ldi	r24, 0x43	; 67
     472:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     476:	85 b3       	in	r24, 0x15	; 21
     478:	80 62       	ori	r24, 0x20	; 32
     47a:	85 bb       	out	0x15, r24	; 21
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     482:	85 b3       	in	r24, 0x15	; 21
     484:	80 64       	ori	r24, 0x40	; 64
     486:	85 bb       	out	0x15, r24	; 21
     488:	85 b3       	in	r24, 0x15	; 21
     48a:	8f 7b       	andi	r24, 0xBF	; 191
     48c:	85 bb       	out	0x15, r24	; 21
     48e:	85 b3       	in	r24, 0x15	; 21
     490:	8f 7d       	andi	r24, 0xDF	; 223
     492:	85 bb       	out	0x15, r24	; 21
     494:	82 ec       	ldi	r24, 0xC2	; 194
     496:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     49a:	85 b3       	in	r24, 0x15	; 21
     49c:	80 62       	ori	r24, 0x20	; 32
     49e:	85 bb       	out	0x15, r24	; 21
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4a6:	85 b3       	in	r24, 0x15	; 21
     4a8:	80 64       	ori	r24, 0x40	; 64
     4aa:	85 bb       	out	0x15, r24	; 21
     4ac:	85 b3       	in	r24, 0x15	; 21
     4ae:	8f 7b       	andi	r24, 0xBF	; 191
     4b0:	85 bb       	out	0x15, r24	; 21
     4b2:	85 b3       	in	r24, 0x15	; 21
     4b4:	8f 7d       	andi	r24, 0xDF	; 223
     4b6:	85 bb       	out	0x15, r24	; 21
     4b8:	85 ec       	ldi	r24, 0xC5	; 197
     4ba:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4be:	85 b3       	in	r24, 0x15	; 21
     4c0:	80 62       	ori	r24, 0x20	; 32
     4c2:	85 bb       	out	0x15, r24	; 21
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4ca:	85 b3       	in	r24, 0x15	; 21
     4cc:	80 62       	ori	r24, 0x20	; 32
     4ce:	85 bb       	out	0x15, r24	; 21
     4d0:	88 e4       	ldi	r24, 0x48	; 72
     4d2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4d6:	85 b3       	in	r24, 0x15	; 21
     4d8:	80 62       	ori	r24, 0x20	; 32
     4da:	85 bb       	out	0x15, r24	; 21
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4e2:	85 b3       	in	r24, 0x15	; 21
     4e4:	80 62       	ori	r24, 0x20	; 32
     4e6:	85 bb       	out	0x15, r24	; 21
     4e8:	88 e4       	ldi	r24, 0x48	; 72
     4ea:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     4ee:	85 b3       	in	r24, 0x15	; 21
     4f0:	80 64       	ori	r24, 0x40	; 64
     4f2:	85 bb       	out	0x15, r24	; 21
     4f4:	85 b3       	in	r24, 0x15	; 21
     4f6:	8f 7b       	andi	r24, 0xBF	; 191
     4f8:	85 bb       	out	0x15, r24	; 21
     4fa:	85 b3       	in	r24, 0x15	; 21
     4fc:	8f 7d       	andi	r24, 0xDF	; 223
     4fe:	85 bb       	out	0x15, r24	; 21
     500:	84 eb       	ldi	r24, 0xB4	; 180
     502:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     506:	85 b3       	in	r24, 0x15	; 21
     508:	80 62       	ori	r24, 0x20	; 32
     50a:	85 bb       	out	0x15, r24	; 21
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     512:	85 b3       	in	r24, 0x15	; 21
     514:	80 64       	ori	r24, 0x40	; 64
     516:	85 bb       	out	0x15, r24	; 21
     518:	85 b3       	in	r24, 0x15	; 21
     51a:	8f 7b       	andi	r24, 0xBF	; 191
     51c:	85 bb       	out	0x15, r24	; 21
     51e:	85 b3       	in	r24, 0x15	; 21
     520:	8f 7d       	andi	r24, 0xDF	; 223
     522:	85 bb       	out	0x15, r24	; 21
     524:	86 eb       	ldi	r24, 0xB6	; 182
     526:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     52a:	85 b3       	in	r24, 0x15	; 21
     52c:	80 62       	ori	r24, 0x20	; 32
     52e:	85 bb       	out	0x15, r24	; 21
     530:	82 e0       	ldi	r24, 0x02	; 2
     532:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     536:	85 b3       	in	r24, 0x15	; 21
     538:	80 62       	ori	r24, 0x20	; 32
     53a:	85 bb       	out	0x15, r24	; 21
     53c:	82 e0       	ldi	r24, 0x02	; 2
     53e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     542:	85 b3       	in	r24, 0x15	; 21
     544:	80 62       	ori	r24, 0x20	; 32
     546:	85 bb       	out	0x15, r24	; 21
     548:	8b e3       	ldi	r24, 0x3B	; 59
     54a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     54e:	85 b3       	in	r24, 0x15	; 21
     550:	80 64       	ori	r24, 0x40	; 64
     552:	85 bb       	out	0x15, r24	; 21
     554:	85 b3       	in	r24, 0x15	; 21
     556:	8f 7b       	andi	r24, 0xBF	; 191
     558:	85 bb       	out	0x15, r24	; 21
     55a:	85 b3       	in	r24, 0x15	; 21
     55c:	8f 7d       	andi	r24, 0xDF	; 223
     55e:	85 bb       	out	0x15, r24	; 21
     560:	80 ee       	ldi	r24, 0xE0	; 224
     562:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     566:	85 b3       	in	r24, 0x15	; 21
     568:	80 62       	ori	r24, 0x20	; 32
     56a:	85 bb       	out	0x15, r24	; 21
     56c:	8f e0       	ldi	r24, 0x0F	; 15
     56e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     572:	85 b3       	in	r24, 0x15	; 21
     574:	80 62       	ori	r24, 0x20	; 32
     576:	85 bb       	out	0x15, r24	; 21
     578:	81 e2       	ldi	r24, 0x21	; 33
     57a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     57e:	85 b3       	in	r24, 0x15	; 21
     580:	80 62       	ori	r24, 0x20	; 32
     582:	85 bb       	out	0x15, r24	; 21
     584:	8c e1       	ldi	r24, 0x1C	; 28
     586:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     58a:	85 b3       	in	r24, 0x15	; 21
     58c:	80 62       	ori	r24, 0x20	; 32
     58e:	85 bb       	out	0x15, r24	; 21
     590:	8b e0       	ldi	r24, 0x0B	; 11
     592:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     596:	85 b3       	in	r24, 0x15	; 21
     598:	80 62       	ori	r24, 0x20	; 32
     59a:	85 bb       	out	0x15, r24	; 21
     59c:	8e e0       	ldi	r24, 0x0E	; 14
     59e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5a2:	85 b3       	in	r24, 0x15	; 21
     5a4:	80 62       	ori	r24, 0x20	; 32
     5a6:	85 bb       	out	0x15, r24	; 21
     5a8:	88 e0       	ldi	r24, 0x08	; 8
     5aa:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5ae:	85 b3       	in	r24, 0x15	; 21
     5b0:	80 62       	ori	r24, 0x20	; 32
     5b2:	85 bb       	out	0x15, r24	; 21
     5b4:	89 e4       	ldi	r24, 0x49	; 73
     5b6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5ba:	85 b3       	in	r24, 0x15	; 21
     5bc:	80 62       	ori	r24, 0x20	; 32
     5be:	85 bb       	out	0x15, r24	; 21
     5c0:	88 e9       	ldi	r24, 0x98	; 152
     5c2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5c6:	85 b3       	in	r24, 0x15	; 21
     5c8:	80 62       	ori	r24, 0x20	; 32
     5ca:	85 bb       	out	0x15, r24	; 21
     5cc:	88 e3       	ldi	r24, 0x38	; 56
     5ce:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5d2:	85 b3       	in	r24, 0x15	; 21
     5d4:	80 62       	ori	r24, 0x20	; 32
     5d6:	85 bb       	out	0x15, r24	; 21
     5d8:	89 e0       	ldi	r24, 0x09	; 9
     5da:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5de:	85 b3       	in	r24, 0x15	; 21
     5e0:	80 62       	ori	r24, 0x20	; 32
     5e2:	85 bb       	out	0x15, r24	; 21
     5e4:	81 e1       	ldi	r24, 0x11	; 17
     5e6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5ea:	85 b3       	in	r24, 0x15	; 21
     5ec:	80 62       	ori	r24, 0x20	; 32
     5ee:	85 bb       	out	0x15, r24	; 21
     5f0:	83 e0       	ldi	r24, 0x03	; 3
     5f2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     5f6:	85 b3       	in	r24, 0x15	; 21
     5f8:	80 62       	ori	r24, 0x20	; 32
     5fa:	85 bb       	out	0x15, r24	; 21
     5fc:	84 e1       	ldi	r24, 0x14	; 20
     5fe:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     602:	85 b3       	in	r24, 0x15	; 21
     604:	80 62       	ori	r24, 0x20	; 32
     606:	85 bb       	out	0x15, r24	; 21
     608:	80 e1       	ldi	r24, 0x10	; 16
     60a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     60e:	85 b3       	in	r24, 0x15	; 21
     610:	80 62       	ori	r24, 0x20	; 32
     612:	85 bb       	out	0x15, r24	; 21
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     61a:	85 b3       	in	r24, 0x15	; 21
     61c:	80 64       	ori	r24, 0x40	; 64
     61e:	85 bb       	out	0x15, r24	; 21
     620:	85 b3       	in	r24, 0x15	; 21
     622:	8f 7b       	andi	r24, 0xBF	; 191
     624:	85 bb       	out	0x15, r24	; 21
     626:	85 b3       	in	r24, 0x15	; 21
     628:	8f 7d       	andi	r24, 0xDF	; 223
     62a:	85 bb       	out	0x15, r24	; 21
     62c:	81 ee       	ldi	r24, 0xE1	; 225
     62e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     632:	85 b3       	in	r24, 0x15	; 21
     634:	80 62       	ori	r24, 0x20	; 32
     636:	85 bb       	out	0x15, r24	; 21
     638:	8f e0       	ldi	r24, 0x0F	; 15
     63a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     63e:	85 b3       	in	r24, 0x15	; 21
     640:	80 62       	ori	r24, 0x20	; 32
     642:	85 bb       	out	0x15, r24	; 21
     644:	8f e2       	ldi	r24, 0x2F	; 47
     646:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     64a:	85 b3       	in	r24, 0x15	; 21
     64c:	80 62       	ori	r24, 0x20	; 32
     64e:	85 bb       	out	0x15, r24	; 21
     650:	8b e2       	ldi	r24, 0x2B	; 43
     652:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     656:	85 b3       	in	r24, 0x15	; 21
     658:	80 62       	ori	r24, 0x20	; 32
     65a:	85 bb       	out	0x15, r24	; 21
     65c:	8c e0       	ldi	r24, 0x0C	; 12
     65e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     662:	85 b3       	in	r24, 0x15	; 21
     664:	80 62       	ori	r24, 0x20	; 32
     666:	85 bb       	out	0x15, r24	; 21
     668:	8e e0       	ldi	r24, 0x0E	; 14
     66a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     66e:	85 b3       	in	r24, 0x15	; 21
     670:	80 62       	ori	r24, 0x20	; 32
     672:	85 bb       	out	0x15, r24	; 21
     674:	86 e0       	ldi	r24, 0x06	; 6
     676:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     67a:	85 b3       	in	r24, 0x15	; 21
     67c:	80 62       	ori	r24, 0x20	; 32
     67e:	85 bb       	out	0x15, r24	; 21
     680:	87 e4       	ldi	r24, 0x47	; 71
     682:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     686:	85 b3       	in	r24, 0x15	; 21
     688:	80 62       	ori	r24, 0x20	; 32
     68a:	85 bb       	out	0x15, r24	; 21
     68c:	86 e7       	ldi	r24, 0x76	; 118
     68e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     692:	85 b3       	in	r24, 0x15	; 21
     694:	80 62       	ori	r24, 0x20	; 32
     696:	85 bb       	out	0x15, r24	; 21
     698:	87 e3       	ldi	r24, 0x37	; 55
     69a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     69e:	85 b3       	in	r24, 0x15	; 21
     6a0:	80 62       	ori	r24, 0x20	; 32
     6a2:	85 bb       	out	0x15, r24	; 21
     6a4:	87 e0       	ldi	r24, 0x07	; 7
     6a6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6aa:	85 b3       	in	r24, 0x15	; 21
     6ac:	80 62       	ori	r24, 0x20	; 32
     6ae:	85 bb       	out	0x15, r24	; 21
     6b0:	81 e1       	ldi	r24, 0x11	; 17
     6b2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6b6:	85 b3       	in	r24, 0x15	; 21
     6b8:	80 62       	ori	r24, 0x20	; 32
     6ba:	85 bb       	out	0x15, r24	; 21
     6bc:	84 e0       	ldi	r24, 0x04	; 4
     6be:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6c2:	85 b3       	in	r24, 0x15	; 21
     6c4:	80 62       	ori	r24, 0x20	; 32
     6c6:	85 bb       	out	0x15, r24	; 21
     6c8:	83 e2       	ldi	r24, 0x23	; 35
     6ca:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6ce:	85 b3       	in	r24, 0x15	; 21
     6d0:	80 62       	ori	r24, 0x20	; 32
     6d2:	85 bb       	out	0x15, r24	; 21
     6d4:	8e e1       	ldi	r24, 0x1E	; 30
     6d6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6da:	85 b3       	in	r24, 0x15	; 21
     6dc:	80 62       	ori	r24, 0x20	; 32
     6de:	85 bb       	out	0x15, r24	; 21
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6e6:	85 b3       	in	r24, 0x15	; 21
     6e8:	80 64       	ori	r24, 0x40	; 64
     6ea:	85 bb       	out	0x15, r24	; 21
     6ec:	85 b3       	in	r24, 0x15	; 21
     6ee:	8f 7b       	andi	r24, 0xBF	; 191
     6f0:	85 bb       	out	0x15, r24	; 21
     6f2:	85 b3       	in	r24, 0x15	; 21
     6f4:	8f 7d       	andi	r24, 0xDF	; 223
     6f6:	85 bb       	out	0x15, r24	; 21
     6f8:	81 e1       	ldi	r24, 0x11	; 17
     6fa:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     6fe:	85 b3       	in	r24, 0x15	; 21
     700:	80 64       	ori	r24, 0x40	; 64
     702:	85 bb       	out	0x15, r24	; 21
     704:	2f ef       	ldi	r18, 0xFF	; 255
     706:	82 e5       	ldi	r24, 0x52	; 82
     708:	97 e0       	ldi	r25, 0x07	; 7
     70a:	21 50       	subi	r18, 0x01	; 1
     70c:	80 40       	sbci	r24, 0x00	; 0
     70e:	90 40       	sbci	r25, 0x00	; 0
     710:	e1 f7       	brne	.-8      	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
     712:	00 c0       	rjmp	.+0      	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
     714:	00 00       	nop
     716:	a8 95       	wdr
     718:	85 b3       	in	r24, 0x15	; 21
     71a:	8f 7b       	andi	r24, 0xBF	; 191
     71c:	85 bb       	out	0x15, r24	; 21
     71e:	85 b3       	in	r24, 0x15	; 21
     720:	8f 7d       	andi	r24, 0xDF	; 223
     722:	85 bb       	out	0x15, r24	; 21
     724:	89 e2       	ldi	r24, 0x29	; 41
     726:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     72a:	85 b3       	in	r24, 0x15	; 21
     72c:	80 64       	ori	r24, 0x40	; 64
     72e:	85 bb       	out	0x15, r24	; 21
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	0e 94 7f 01 	call	0x2fe	; 0x2fe <ILI9486_SetRotation>
     736:	08 95       	ret

00000738 <ILI9486_SetAddrWindow>:
     738:	cf 92       	push	r12
     73a:	df 92       	push	r13
     73c:	ef 92       	push	r14
     73e:	ff 92       	push	r15
     740:	0f 93       	push	r16
     742:	1f 93       	push	r17
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	d8 2e       	mov	r13, r24
     74a:	c9 2e       	mov	r12, r25
     74c:	16 2f       	mov	r17, r22
     74e:	07 2f       	mov	r16, r23
     750:	f4 2e       	mov	r15, r20
     752:	e5 2e       	mov	r14, r21
     754:	c2 2f       	mov	r28, r18
     756:	d3 2f       	mov	r29, r19
     758:	85 b3       	in	r24, 0x15	; 21
     75a:	8f 7b       	andi	r24, 0xBF	; 191
     75c:	85 bb       	out	0x15, r24	; 21
     75e:	85 b3       	in	r24, 0x15	; 21
     760:	8f 7d       	andi	r24, 0xDF	; 223
     762:	85 bb       	out	0x15, r24	; 21
     764:	8a e2       	ldi	r24, 0x2A	; 42
     766:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     76a:	85 b3       	in	r24, 0x15	; 21
     76c:	80 62       	ori	r24, 0x20	; 32
     76e:	85 bb       	out	0x15, r24	; 21
     770:	8c 2d       	mov	r24, r12
     772:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     776:	85 b3       	in	r24, 0x15	; 21
     778:	80 62       	ori	r24, 0x20	; 32
     77a:	85 bb       	out	0x15, r24	; 21
     77c:	8d 2d       	mov	r24, r13
     77e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     782:	85 b3       	in	r24, 0x15	; 21
     784:	80 62       	ori	r24, 0x20	; 32
     786:	85 bb       	out	0x15, r24	; 21
     788:	8e 2d       	mov	r24, r14
     78a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     78e:	85 b3       	in	r24, 0x15	; 21
     790:	80 62       	ori	r24, 0x20	; 32
     792:	85 bb       	out	0x15, r24	; 21
     794:	8f 2d       	mov	r24, r15
     796:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     79a:	85 b3       	in	r24, 0x15	; 21
     79c:	80 64       	ori	r24, 0x40	; 64
     79e:	85 bb       	out	0x15, r24	; 21
     7a0:	85 b3       	in	r24, 0x15	; 21
     7a2:	8f 7b       	andi	r24, 0xBF	; 191
     7a4:	85 bb       	out	0x15, r24	; 21
     7a6:	85 b3       	in	r24, 0x15	; 21
     7a8:	8f 7d       	andi	r24, 0xDF	; 223
     7aa:	85 bb       	out	0x15, r24	; 21
     7ac:	8b e2       	ldi	r24, 0x2B	; 43
     7ae:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     7b2:	85 b3       	in	r24, 0x15	; 21
     7b4:	80 62       	ori	r24, 0x20	; 32
     7b6:	85 bb       	out	0x15, r24	; 21
     7b8:	80 2f       	mov	r24, r16
     7ba:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     7be:	85 b3       	in	r24, 0x15	; 21
     7c0:	80 62       	ori	r24, 0x20	; 32
     7c2:	85 bb       	out	0x15, r24	; 21
     7c4:	81 2f       	mov	r24, r17
     7c6:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     7ca:	85 b3       	in	r24, 0x15	; 21
     7cc:	80 62       	ori	r24, 0x20	; 32
     7ce:	85 bb       	out	0x15, r24	; 21
     7d0:	8d 2f       	mov	r24, r29
     7d2:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     7d6:	85 b3       	in	r24, 0x15	; 21
     7d8:	80 62       	ori	r24, 0x20	; 32
     7da:	85 bb       	out	0x15, r24	; 21
     7dc:	8c 2f       	mov	r24, r28
     7de:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     7e2:	85 b3       	in	r24, 0x15	; 21
     7e4:	80 64       	ori	r24, 0x40	; 64
     7e6:	85 bb       	out	0x15, r24	; 21
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	1f 91       	pop	r17
     7ee:	0f 91       	pop	r16
     7f0:	ff 90       	pop	r15
     7f2:	ef 90       	pop	r14
     7f4:	df 90       	pop	r13
     7f6:	cf 90       	pop	r12
     7f8:	08 95       	ret

000007fa <ILI9486_drawPixel>:
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	ea 01       	movw	r28, r20
     800:	9b 01       	movw	r18, r22
     802:	ac 01       	movw	r20, r24
     804:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
     808:	be 01       	movw	r22, r28
     80a:	8c e2       	ldi	r24, 0x2C	; 44
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 38 01 	call	0x270	; 0x270 <ILI9486_Write_Cmd_Data>
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	08 95       	ret

00000818 <ILI9486_FillScreen>:
     818:	ef 92       	push	r14
     81a:	ff 92       	push	r15
     81c:	0f 93       	push	r16
     81e:	1f 93       	push	r17
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	e8 2e       	mov	r14, r24
     826:	f9 2e       	mov	r15, r25
     828:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
     82c:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
     830:	21 50       	subi	r18, 0x01	; 1
     832:	31 09       	sbc	r19, r1
     834:	40 91 da 02 	lds	r20, 0x02DA	; 0x8002da <X_SIZE>
     838:	50 91 db 02 	lds	r21, 0x02DB	; 0x8002db <X_SIZE+0x1>
     83c:	41 50       	subi	r20, 0x01	; 1
     83e:	51 09       	sbc	r21, r1
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
     84c:	85 b3       	in	r24, 0x15	; 21
     84e:	8f 7b       	andi	r24, 0xBF	; 191
     850:	85 bb       	out	0x15, r24	; 21
     852:	85 b3       	in	r24, 0x15	; 21
     854:	8f 7d       	andi	r24, 0xDF	; 223
     856:	85 bb       	out	0x15, r24	; 21
     858:	8c e2       	ldi	r24, 0x2C	; 44
     85a:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     85e:	85 b3       	in	r24, 0x15	; 21
     860:	80 62       	ori	r24, 0x20	; 32
     862:	85 bb       	out	0x15, r24	; 21
     864:	00 e0       	ldi	r16, 0x00	; 0
     866:	10 e0       	ldi	r17, 0x00	; 0
     868:	19 c0       	rjmp	.+50     	; 0x89c <__stack+0x3d>
     86a:	85 b3       	in	r24, 0x15	; 21
     86c:	80 62       	ori	r24, 0x20	; 32
     86e:	85 bb       	out	0x15, r24	; 21
     870:	8f 2d       	mov	r24, r15
     872:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     876:	85 b3       	in	r24, 0x15	; 21
     878:	80 62       	ori	r24, 0x20	; 32
     87a:	85 bb       	out	0x15, r24	; 21
     87c:	8e 2d       	mov	r24, r14
     87e:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     882:	21 96       	adiw	r28, 0x01	; 1
     884:	02 c0       	rjmp	.+4      	; 0x88a <__stack+0x2b>
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
     88e:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
     892:	c8 17       	cp	r28, r24
     894:	d9 07       	cpc	r29, r25
     896:	48 f3       	brcs	.-46     	; 0x86a <__stack+0xb>
     898:	0f 5f       	subi	r16, 0xFF	; 255
     89a:	1f 4f       	sbci	r17, 0xFF	; 255
     89c:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <X_SIZE>
     8a0:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <X_SIZE+0x1>
     8a4:	08 17       	cp	r16, r24
     8a6:	19 07       	cpc	r17, r25
     8a8:	70 f3       	brcs	.-36     	; 0x886 <__stack+0x27>
     8aa:	85 b3       	in	r24, 0x15	; 21
     8ac:	80 64       	ori	r24, 0x40	; 64
     8ae:	85 bb       	out	0x15, r24	; 21
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	1f 91       	pop	r17
     8b6:	0f 91       	pop	r16
     8b8:	ff 90       	pop	r15
     8ba:	ef 90       	pop	r14
     8bc:	08 95       	ret

000008be <ILI9486_fillRect>:
     8be:	cf 92       	push	r12
     8c0:	df 92       	push	r13
     8c2:	ef 92       	push	r14
     8c4:	ff 92       	push	r15
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	fc 01       	movw	r30, r24
     8d0:	e4 0f       	add	r30, r20
     8d2:	f5 1f       	adc	r31, r21
     8d4:	40 91 da 02 	lds	r20, 0x02DA	; 0x8002da <X_SIZE>
     8d8:	50 91 db 02 	lds	r21, 0x02DB	; 0x8002db <X_SIZE+0x1>
     8dc:	4e 17       	cp	r20, r30
     8de:	5f 07       	cpc	r21, r31
     8e0:	08 f0       	brcs	.+2      	; 0x8e4 <ILI9486_fillRect+0x26>
     8e2:	af 01       	movw	r20, r30
     8e4:	6a 01       	movw	r12, r20
     8e6:	c8 1a       	sub	r12, r24
     8e8:	d9 0a       	sbc	r13, r25
     8ea:	fb 01       	movw	r30, r22
     8ec:	e2 0f       	add	r30, r18
     8ee:	f3 1f       	adc	r31, r19
     8f0:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
     8f4:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
     8f8:	2e 17       	cp	r18, r30
     8fa:	3f 07       	cpc	r19, r31
     8fc:	08 f0       	brcs	.+2      	; 0x900 <ILI9486_fillRect+0x42>
     8fe:	9f 01       	movw	r18, r30
     900:	e9 01       	movw	r28, r18
     902:	c6 1b       	sub	r28, r22
     904:	d7 0b       	sbc	r29, r23
     906:	21 50       	subi	r18, 0x01	; 1
     908:	31 09       	sbc	r19, r1
     90a:	41 50       	subi	r20, 0x01	; 1
     90c:	51 09       	sbc	r21, r1
     90e:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
     912:	85 b3       	in	r24, 0x15	; 21
     914:	8f 7b       	andi	r24, 0xBF	; 191
     916:	85 bb       	out	0x15, r24	; 21
     918:	85 b3       	in	r24, 0x15	; 21
     91a:	8f 7d       	andi	r24, 0xDF	; 223
     91c:	85 bb       	out	0x15, r24	; 21
     91e:	8c e2       	ldi	r24, 0x2C	; 44
     920:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     924:	85 b3       	in	r24, 0x15	; 21
     926:	80 62       	ori	r24, 0x20	; 32
     928:	85 bb       	out	0x15, r24	; 21
     92a:	cc 16       	cp	r12, r28
     92c:	dd 06       	cpc	r13, r29
     92e:	90 f0       	brcs	.+36     	; 0x954 <ILI9486_fillRect+0x96>
     930:	16 c0       	rjmp	.+44     	; 0x95e <ILI9486_fillRect+0xa0>
     932:	e6 01       	movw	r28, r12
     934:	85 b3       	in	r24, 0x15	; 21
     936:	80 62       	ori	r24, 0x20	; 32
     938:	85 bb       	out	0x15, r24	; 21
     93a:	81 2f       	mov	r24, r17
     93c:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     940:	85 b3       	in	r24, 0x15	; 21
     942:	80 62       	ori	r24, 0x20	; 32
     944:	85 bb       	out	0x15, r24	; 21
     946:	80 2f       	mov	r24, r16
     948:	0e 94 17 01 	call	0x22e	; 0x22e <ILI9486_Write8>
     94c:	21 97       	sbiw	r28, 0x01	; 1
     94e:	91 f7       	brne	.-28     	; 0x934 <ILI9486_fillRect+0x76>
     950:	e7 01       	movw	r28, r14
     952:	05 c0       	rjmp	.+10     	; 0x95e <ILI9486_fillRect+0xa0>
     954:	9c 2d       	mov	r25, r12
     956:	8d 2d       	mov	r24, r13
     958:	6e 01       	movw	r12, r28
     95a:	c9 2f       	mov	r28, r25
     95c:	d8 2f       	mov	r29, r24
     95e:	7e 01       	movw	r14, r28
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	e8 1a       	sub	r14, r24
     964:	f1 08       	sbc	r15, r1
     966:	cd 2b       	or	r28, r29
     968:	21 f7       	brne	.-56     	; 0x932 <ILI9486_fillRect+0x74>
     96a:	85 b3       	in	r24, 0x15	; 21
     96c:	80 64       	ori	r24, 0x40	; 64
     96e:	85 bb       	out	0x15, r24	; 21
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	ff 90       	pop	r15
     97a:	ef 90       	pop	r14
     97c:	df 90       	pop	r13
     97e:	cf 90       	pop	r12
     980:	08 95       	ret

00000982 <ILI9486_DrawFastVLine>:
     982:	0f 93       	push	r16
     984:	1f 93       	push	r17
     986:	e0 91 da 02 	lds	r30, 0x02DA	; 0x8002da <X_SIZE>
     98a:	f0 91 db 02 	lds	r31, 0x02DB	; 0x8002db <X_SIZE+0x1>
     98e:	8e 17       	cp	r24, r30
     990:	9f 07       	cpc	r25, r31
     992:	d0 f4       	brcc	.+52     	; 0x9c8 <ILI9486_DrawFastVLine+0x46>
     994:	e0 91 d8 02 	lds	r30, 0x02D8	; 0x8002d8 <__data_end>
     998:	f0 91 d9 02 	lds	r31, 0x02D9	; 0x8002d9 <__data_end+0x1>
     99c:	6e 17       	cp	r22, r30
     99e:	7f 07       	cpc	r23, r31
     9a0:	98 f4       	brcc	.+38     	; 0x9c8 <ILI9486_DrawFastVLine+0x46>
     9a2:	41 15       	cp	r20, r1
     9a4:	51 05       	cpc	r21, r1
     9a6:	81 f0       	breq	.+32     	; 0x9c8 <ILI9486_DrawFastVLine+0x46>
     9a8:	db 01       	movw	r26, r22
     9aa:	a4 0f       	add	r26, r20
     9ac:	b5 1f       	adc	r27, r21
     9ae:	11 97       	sbiw	r26, 0x01	; 1
     9b0:	ae 17       	cp	r26, r30
     9b2:	bf 07       	cpc	r27, r31
     9b4:	18 f0       	brcs	.+6      	; 0x9bc <ILI9486_DrawFastVLine+0x3a>
     9b6:	af 01       	movw	r20, r30
     9b8:	46 1b       	sub	r20, r22
     9ba:	57 0b       	sbc	r21, r23
     9bc:	89 01       	movw	r16, r18
     9be:	9a 01       	movw	r18, r20
     9c0:	41 e0       	ldi	r20, 0x01	; 1
     9c2:	50 e0       	ldi	r21, 0x00	; 0
     9c4:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
     9c8:	1f 91       	pop	r17
     9ca:	0f 91       	pop	r16
     9cc:	08 95       	ret

000009ce <ILI9486_DrawFastHLine>:
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
     9d2:	e0 91 da 02 	lds	r30, 0x02DA	; 0x8002da <X_SIZE>
     9d6:	f0 91 db 02 	lds	r31, 0x02DB	; 0x8002db <X_SIZE+0x1>
     9da:	8e 17       	cp	r24, r30
     9dc:	9f 07       	cpc	r25, r31
     9de:	c8 f4       	brcc	.+50     	; 0xa12 <ILI9486_DrawFastHLine+0x44>
     9e0:	a0 91 d8 02 	lds	r26, 0x02D8	; 0x8002d8 <__data_end>
     9e4:	b0 91 d9 02 	lds	r27, 0x02D9	; 0x8002d9 <__data_end+0x1>
     9e8:	6a 17       	cp	r22, r26
     9ea:	7b 07       	cpc	r23, r27
     9ec:	90 f4       	brcc	.+36     	; 0xa12 <ILI9486_DrawFastHLine+0x44>
     9ee:	41 15       	cp	r20, r1
     9f0:	51 05       	cpc	r21, r1
     9f2:	79 f0       	breq	.+30     	; 0xa12 <ILI9486_DrawFastHLine+0x44>
     9f4:	dc 01       	movw	r26, r24
     9f6:	a4 0f       	add	r26, r20
     9f8:	b5 1f       	adc	r27, r21
     9fa:	11 97       	sbiw	r26, 0x01	; 1
     9fc:	ae 17       	cp	r26, r30
     9fe:	bf 07       	cpc	r27, r31
     a00:	18 f0       	brcs	.+6      	; 0xa08 <ILI9486_DrawFastHLine+0x3a>
     a02:	af 01       	movw	r20, r30
     a04:	48 1b       	sub	r20, r24
     a06:	59 0b       	sbc	r21, r25
     a08:	89 01       	movw	r16, r18
     a0a:	21 e0       	ldi	r18, 0x01	; 1
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
     a12:	1f 91       	pop	r17
     a14:	0f 91       	pop	r16
     a16:	08 95       	ret

00000a18 <ILI9486_writeLine>:
     a18:	2f 92       	push	r2
     a1a:	3f 92       	push	r3
     a1c:	4f 92       	push	r4
     a1e:	5f 92       	push	r5
     a20:	6f 92       	push	r6
     a22:	7f 92       	push	r7
     a24:	8f 92       	push	r8
     a26:	9f 92       	push	r9
     a28:	af 92       	push	r10
     a2a:	bf 92       	push	r11
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	00 d0       	rcall	.+0      	; 0xa3e <ILI9486_writeLine+0x26>
     a3e:	00 d0       	rcall	.+0      	; 0xa40 <ILI9486_writeLine+0x28>
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
     a44:	9c 83       	std	Y+4, r25	; 0x04
     a46:	8b 83       	std	Y+3, r24	; 0x03
     a48:	7b 01       	movw	r14, r22
     a4a:	6a 01       	movw	r12, r20
     a4c:	1a 83       	std	Y+2, r17	; 0x02
     a4e:	09 83       	std	Y+1, r16	; 0x01
     a50:	c9 01       	movw	r24, r18
     a52:	86 1b       	sub	r24, r22
     a54:	97 0b       	sbc	r25, r23
     a56:	8c 01       	movw	r16, r24
     a58:	22 f4       	brpl	.+8      	; 0xa62 <ILI9486_writeLine+0x4a>
     a5a:	00 27       	eor	r16, r16
     a5c:	11 27       	eor	r17, r17
     a5e:	08 1b       	sub	r16, r24
     a60:	19 0b       	sbc	r17, r25
     a62:	c6 01       	movw	r24, r12
     a64:	4b 81       	ldd	r20, Y+3	; 0x03
     a66:	5c 81       	ldd	r21, Y+4	; 0x04
     a68:	84 1b       	sub	r24, r20
     a6a:	95 0b       	sbc	r25, r21
     a6c:	5c 01       	movw	r10, r24
     a6e:	22 f4       	brpl	.+8      	; 0xa78 <ILI9486_writeLine+0x60>
     a70:	aa 24       	eor	r10, r10
     a72:	bb 24       	eor	r11, r11
     a74:	a8 1a       	sub	r10, r24
     a76:	b9 0a       	sbc	r11, r25
     a78:	a0 16       	cp	r10, r16
     a7a:	b1 06       	cpc	r11, r17
     a7c:	5c f4       	brge	.+22     	; 0xa94 <ILI9486_writeLine+0x7c>
     a7e:	9c 2d       	mov	r25, r12
     a80:	8d 2d       	mov	r24, r13
     a82:	69 01       	movw	r12, r18
     a84:	29 2f       	mov	r18, r25
     a86:	38 2f       	mov	r19, r24
     a88:	9b 81       	ldd	r25, Y+3	; 0x03
     a8a:	8c 81       	ldd	r24, Y+4	; 0x04
     a8c:	fc 82       	std	Y+4, r15	; 0x04
     a8e:	eb 82       	std	Y+3, r14	; 0x03
     a90:	e9 2e       	mov	r14, r25
     a92:	f8 2e       	mov	r15, r24
     a94:	8b 81       	ldd	r24, Y+3	; 0x03
     a96:	9c 81       	ldd	r25, Y+4	; 0x04
     a98:	c8 16       	cp	r12, r24
     a9a:	d9 06       	cpc	r13, r25
     a9c:	5c f4       	brge	.+22     	; 0xab4 <ILI9486_writeLine+0x9c>
     a9e:	9e 2d       	mov	r25, r14
     aa0:	8f 2d       	mov	r24, r15
     aa2:	79 01       	movw	r14, r18
     aa4:	29 2f       	mov	r18, r25
     aa6:	38 2f       	mov	r19, r24
     aa8:	9b 81       	ldd	r25, Y+3	; 0x03
     aaa:	8c 81       	ldd	r24, Y+4	; 0x04
     aac:	dc 82       	std	Y+4, r13	; 0x04
     aae:	cb 82       	std	Y+3, r12	; 0x03
     ab0:	c9 2e       	mov	r12, r25
     ab2:	d8 2e       	mov	r13, r24
     ab4:	16 01       	movw	r2, r12
     ab6:	4b 81       	ldd	r20, Y+3	; 0x03
     ab8:	5c 81       	ldd	r21, Y+4	; 0x04
     aba:	24 1a       	sub	r2, r20
     abc:	35 0a       	sbc	r3, r21
     abe:	c9 01       	movw	r24, r18
     ac0:	8e 19       	sub	r24, r14
     ac2:	9f 09       	sbc	r25, r15
     ac4:	3c 01       	movw	r6, r24
     ac6:	22 f4       	brpl	.+8      	; 0xad0 <ILI9486_writeLine+0xb8>
     ac8:	66 24       	eor	r6, r6
     aca:	77 24       	eor	r7, r7
     acc:	68 1a       	sub	r6, r24
     ace:	79 0a       	sbc	r7, r25
     ad0:	41 01       	movw	r8, r2
     ad2:	33 20       	and	r3, r3
     ad4:	1c f4       	brge	.+6      	; 0xadc <ILI9486_writeLine+0xc4>
     ad6:	5f ef       	ldi	r21, 0xFF	; 255
     ad8:	85 1a       	sub	r8, r21
     ada:	95 0a       	sbc	r9, r21
     adc:	95 94       	asr	r9
     ade:	87 94       	ror	r8
     ae0:	e2 16       	cp	r14, r18
     ae2:	f3 06       	cpc	r15, r19
     ae4:	24 f4       	brge	.+8      	; 0xaee <ILI9486_writeLine+0xd6>
     ae6:	44 24       	eor	r4, r4
     ae8:	43 94       	inc	r4
     aea:	51 2c       	mov	r5, r1
     aec:	22 c0       	rjmp	.+68     	; 0xb32 <ILI9486_writeLine+0x11a>
     aee:	44 24       	eor	r4, r4
     af0:	4a 94       	dec	r4
     af2:	54 2c       	mov	r5, r4
     af4:	1e c0       	rjmp	.+60     	; 0xb32 <ILI9486_writeLine+0x11a>
     af6:	a0 16       	cp	r10, r16
     af8:	b1 06       	cpc	r11, r17
     afa:	44 f4       	brge	.+16     	; 0xb0c <ILI9486_writeLine+0xf4>
     afc:	49 81       	ldd	r20, Y+1	; 0x01
     afe:	5a 81       	ldd	r21, Y+2	; 0x02
     b00:	6b 81       	ldd	r22, Y+3	; 0x03
     b02:	7c 81       	ldd	r23, Y+4	; 0x04
     b04:	c7 01       	movw	r24, r14
     b06:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     b0a:	07 c0       	rjmp	.+14     	; 0xb1a <ILI9486_writeLine+0x102>
     b0c:	49 81       	ldd	r20, Y+1	; 0x01
     b0e:	5a 81       	ldd	r21, Y+2	; 0x02
     b10:	b7 01       	movw	r22, r14
     b12:	8b 81       	ldd	r24, Y+3	; 0x03
     b14:	9c 81       	ldd	r25, Y+4	; 0x04
     b16:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     b1a:	86 18       	sub	r8, r6
     b1c:	97 08       	sbc	r9, r7
     b1e:	22 f4       	brpl	.+8      	; 0xb28 <ILI9486_writeLine+0x110>
     b20:	e4 0c       	add	r14, r4
     b22:	f5 1c       	adc	r15, r5
     b24:	82 0c       	add	r8, r2
     b26:	93 1c       	adc	r9, r3
     b28:	8b 81       	ldd	r24, Y+3	; 0x03
     b2a:	9c 81       	ldd	r25, Y+4	; 0x04
     b2c:	01 96       	adiw	r24, 0x01	; 1
     b2e:	9c 83       	std	Y+4, r25	; 0x04
     b30:	8b 83       	std	Y+3, r24	; 0x03
     b32:	4b 81       	ldd	r20, Y+3	; 0x03
     b34:	5c 81       	ldd	r21, Y+4	; 0x04
     b36:	c4 16       	cp	r12, r20
     b38:	d5 06       	cpc	r13, r21
     b3a:	ec f6       	brge	.-70     	; 0xaf6 <ILI9486_writeLine+0xde>
     b3c:	0f 90       	pop	r0
     b3e:	0f 90       	pop	r0
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	ff 90       	pop	r15
     b4e:	ef 90       	pop	r14
     b50:	df 90       	pop	r13
     b52:	cf 90       	pop	r12
     b54:	bf 90       	pop	r11
     b56:	af 90       	pop	r10
     b58:	9f 90       	pop	r9
     b5a:	8f 90       	pop	r8
     b5c:	7f 90       	pop	r7
     b5e:	6f 90       	pop	r6
     b60:	5f 90       	pop	r5
     b62:	4f 90       	pop	r4
     b64:	3f 90       	pop	r3
     b66:	2f 90       	pop	r2
     b68:	08 95       	ret

00000b6a <ILI9486_Draw_Line>:
     b6a:	0f 93       	push	r16
     b6c:	1f 93       	push	r17
     b6e:	84 17       	cp	r24, r20
     b70:	95 07       	cpc	r25, r21
     b72:	89 f4       	brne	.+34     	; 0xb96 <ILI9486_Draw_Line+0x2c>
     b74:	26 17       	cp	r18, r22
     b76:	37 07       	cpc	r19, r23
     b78:	2c f4       	brge	.+10     	; 0xb84 <ILI9486_Draw_Line+0x1a>
     b7a:	56 2f       	mov	r21, r22
     b7c:	47 2f       	mov	r20, r23
     b7e:	b9 01       	movw	r22, r18
     b80:	25 2f       	mov	r18, r21
     b82:	34 2f       	mov	r19, r20
     b84:	a9 01       	movw	r20, r18
     b86:	46 1b       	sub	r20, r22
     b88:	57 0b       	sbc	r21, r23
     b8a:	4f 5f       	subi	r20, 0xFF	; 255
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	98 01       	movw	r18, r16
     b90:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     b94:	15 c0       	rjmp	.+42     	; 0xbc0 <ILI9486_Draw_Line+0x56>
     b96:	62 17       	cp	r22, r18
     b98:	73 07       	cpc	r23, r19
     b9a:	81 f4       	brne	.+32     	; 0xbbc <ILI9486_Draw_Line+0x52>
     b9c:	48 17       	cp	r20, r24
     b9e:	59 07       	cpc	r21, r25
     ba0:	2c f4       	brge	.+10     	; 0xbac <ILI9486_Draw_Line+0x42>
     ba2:	38 2f       	mov	r19, r24
     ba4:	29 2f       	mov	r18, r25
     ba6:	ca 01       	movw	r24, r20
     ba8:	43 2f       	mov	r20, r19
     baa:	52 2f       	mov	r21, r18
     bac:	48 1b       	sub	r20, r24
     bae:	59 0b       	sbc	r21, r25
     bb0:	4f 5f       	subi	r20, 0xFF	; 255
     bb2:	5f 4f       	sbci	r21, 0xFF	; 255
     bb4:	98 01       	movw	r18, r16
     bb6:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <ILI9486_Draw_Line+0x56>
     bbc:	0e 94 0c 05 	call	0xa18	; 0xa18 <ILI9486_writeLine>
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	08 95       	ret

00000bc6 <ILI9486_Draw_Circle>:
     bc6:	2f 92       	push	r2
     bc8:	3f 92       	push	r3
     bca:	4f 92       	push	r4
     bcc:	5f 92       	push	r5
     bce:	6f 92       	push	r6
     bd0:	7f 92       	push	r7
     bd2:	8f 92       	push	r8
     bd4:	9f 92       	push	r9
     bd6:	af 92       	push	r10
     bd8:	bf 92       	push	r11
     bda:	cf 92       	push	r12
     bdc:	df 92       	push	r13
     bde:	ef 92       	push	r14
     be0:	ff 92       	push	r15
     be2:	0f 93       	push	r16
     be4:	1f 93       	push	r17
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	00 d0       	rcall	.+0      	; 0xbec <ILI9486_Draw_Circle+0x26>
     bec:	00 d0       	rcall	.+0      	; 0xbee <ILI9486_Draw_Circle+0x28>
     bee:	00 d0       	rcall	.+0      	; 0xbf0 <ILI9486_Draw_Circle+0x2a>
     bf0:	cd b7       	in	r28, 0x3d	; 61
     bf2:	de b7       	in	r29, 0x3e	; 62
     bf4:	6c 01       	movw	r12, r24
     bf6:	4b 01       	movw	r8, r22
     bf8:	5e 83       	std	Y+6, r21	; 0x06
     bfa:	4d 83       	std	Y+5, r20	; 0x05
     bfc:	02 2f       	mov	r16, r18
     bfe:	13 2f       	mov	r17, r19
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	7c 01       	movw	r14, r24
     c06:	e4 1a       	sub	r14, r20
     c08:	f5 0a       	sbc	r15, r21
     c0a:	ca 01       	movw	r24, r20
     c0c:	91 95       	neg	r25
     c0e:	81 95       	neg	r24
     c10:	91 09       	sbc	r25, r1
     c12:	88 0f       	add	r24, r24
     c14:	99 1f       	adc	r25, r25
     c16:	9c 83       	std	Y+4, r25	; 0x04
     c18:	8b 83       	std	Y+3, r24	; 0x03
     c1a:	29 83       	std	Y+1, r18	; 0x01
     c1c:	3a 83       	std	Y+2, r19	; 0x02
     c1e:	ba 01       	movw	r22, r20
     c20:	68 0d       	add	r22, r8
     c22:	79 1d       	adc	r23, r9
     c24:	42 2f       	mov	r20, r18
     c26:	53 2f       	mov	r21, r19
     c28:	c6 01       	movw	r24, r12
     c2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     c2e:	b4 01       	movw	r22, r8
     c30:	2d 81       	ldd	r18, Y+5	; 0x05
     c32:	3e 81       	ldd	r19, Y+6	; 0x06
     c34:	62 1b       	sub	r22, r18
     c36:	73 0b       	sbc	r23, r19
     c38:	40 2f       	mov	r20, r16
     c3a:	51 2f       	mov	r21, r17
     c3c:	c6 01       	movw	r24, r12
     c3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     c42:	40 2f       	mov	r20, r16
     c44:	51 2f       	mov	r21, r17
     c46:	b4 01       	movw	r22, r8
     c48:	8d 81       	ldd	r24, Y+5	; 0x05
     c4a:	9e 81       	ldd	r25, Y+6	; 0x06
     c4c:	8c 0d       	add	r24, r12
     c4e:	9d 1d       	adc	r25, r13
     c50:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     c54:	40 2f       	mov	r20, r16
     c56:	51 2f       	mov	r21, r17
     c58:	b4 01       	movw	r22, r8
     c5a:	c6 01       	movw	r24, r12
     c5c:	2d 81       	ldd	r18, Y+5	; 0x05
     c5e:	3e 81       	ldd	r19, Y+6	; 0x06
     c60:	82 1b       	sub	r24, r18
     c62:	93 0b       	sbc	r25, r19
     c64:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     c68:	00 e0       	ldi	r16, 0x00	; 0
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	66 24       	eor	r6, r6
     c6e:	63 94       	inc	r6
     c70:	71 2c       	mov	r7, r1
     c72:	64 c0       	rjmp	.+200    	; 0xd3c <ILI9486_Draw_Circle+0x176>
     c74:	ff 20       	and	r15, r15
     c76:	6c f0       	brlt	.+26     	; 0xc92 <ILI9486_Draw_Circle+0xcc>
     c78:	8d 81       	ldd	r24, Y+5	; 0x05
     c7a:	9e 81       	ldd	r25, Y+6	; 0x06
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	9e 83       	std	Y+6, r25	; 0x06
     c80:	8d 83       	std	Y+5, r24	; 0x05
     c82:	2b 81       	ldd	r18, Y+3	; 0x03
     c84:	3c 81       	ldd	r19, Y+4	; 0x04
     c86:	2e 5f       	subi	r18, 0xFE	; 254
     c88:	3f 4f       	sbci	r19, 0xFF	; 255
     c8a:	3c 83       	std	Y+4, r19	; 0x04
     c8c:	2b 83       	std	Y+3, r18	; 0x03
     c8e:	e2 0e       	add	r14, r18
     c90:	f3 1e       	adc	r15, r19
     c92:	0f 5f       	subi	r16, 0xFF	; 255
     c94:	1f 4f       	sbci	r17, 0xFF	; 255
     c96:	32 e0       	ldi	r19, 0x02	; 2
     c98:	63 0e       	add	r6, r19
     c9a:	71 1c       	adc	r7, r1
     c9c:	e6 0c       	add	r14, r6
     c9e:	f7 1c       	adc	r15, r7
     ca0:	56 01       	movw	r10, r12
     ca2:	a0 0e       	add	r10, r16
     ca4:	b1 1e       	adc	r11, r17
     ca6:	49 81       	ldd	r20, Y+1	; 0x01
     ca8:	5a 81       	ldd	r21, Y+2	; 0x02
     caa:	2d 80       	ldd	r2, Y+5	; 0x05
     cac:	3e 80       	ldd	r3, Y+6	; 0x06
     cae:	28 0c       	add	r2, r8
     cb0:	39 1c       	adc	r3, r9
     cb2:	b1 01       	movw	r22, r2
     cb4:	c5 01       	movw	r24, r10
     cb6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     cba:	26 01       	movw	r4, r12
     cbc:	40 1a       	sub	r4, r16
     cbe:	51 0a       	sbc	r5, r17
     cc0:	49 81       	ldd	r20, Y+1	; 0x01
     cc2:	5a 81       	ldd	r21, Y+2	; 0x02
     cc4:	b1 01       	movw	r22, r2
     cc6:	c2 01       	movw	r24, r4
     cc8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     ccc:	49 81       	ldd	r20, Y+1	; 0x01
     cce:	5a 81       	ldd	r21, Y+2	; 0x02
     cd0:	14 01       	movw	r2, r8
     cd2:	8d 81       	ldd	r24, Y+5	; 0x05
     cd4:	9e 81       	ldd	r25, Y+6	; 0x06
     cd6:	28 1a       	sub	r2, r24
     cd8:	39 0a       	sbc	r3, r25
     cda:	b1 01       	movw	r22, r2
     cdc:	c5 01       	movw	r24, r10
     cde:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     ce2:	49 81       	ldd	r20, Y+1	; 0x01
     ce4:	5a 81       	ldd	r21, Y+2	; 0x02
     ce6:	b1 01       	movw	r22, r2
     ce8:	c2 01       	movw	r24, r4
     cea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     cee:	54 01       	movw	r10, r8
     cf0:	a0 0e       	add	r10, r16
     cf2:	b1 1e       	adc	r11, r17
     cf4:	49 81       	ldd	r20, Y+1	; 0x01
     cf6:	5a 81       	ldd	r21, Y+2	; 0x02
     cf8:	b5 01       	movw	r22, r10
     cfa:	4d 80       	ldd	r4, Y+5	; 0x05
     cfc:	5e 80       	ldd	r5, Y+6	; 0x06
     cfe:	4c 0c       	add	r4, r12
     d00:	5d 1c       	adc	r5, r13
     d02:	c2 01       	movw	r24, r4
     d04:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     d08:	49 81       	ldd	r20, Y+1	; 0x01
     d0a:	5a 81       	ldd	r21, Y+2	; 0x02
     d0c:	b5 01       	movw	r22, r10
     d0e:	16 01       	movw	r2, r12
     d10:	2d 81       	ldd	r18, Y+5	; 0x05
     d12:	3e 81       	ldd	r19, Y+6	; 0x06
     d14:	22 1a       	sub	r2, r18
     d16:	33 0a       	sbc	r3, r19
     d18:	c1 01       	movw	r24, r2
     d1a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     d1e:	54 01       	movw	r10, r8
     d20:	a0 1a       	sub	r10, r16
     d22:	b1 0a       	sbc	r11, r17
     d24:	49 81       	ldd	r20, Y+1	; 0x01
     d26:	5a 81       	ldd	r21, Y+2	; 0x02
     d28:	b5 01       	movw	r22, r10
     d2a:	c2 01       	movw	r24, r4
     d2c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     d30:	49 81       	ldd	r20, Y+1	; 0x01
     d32:	5a 81       	ldd	r21, Y+2	; 0x02
     d34:	b5 01       	movw	r22, r10
     d36:	c1 01       	movw	r24, r2
     d38:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
     d3c:	8d 81       	ldd	r24, Y+5	; 0x05
     d3e:	9e 81       	ldd	r25, Y+6	; 0x06
     d40:	08 17       	cp	r16, r24
     d42:	19 07       	cpc	r17, r25
     d44:	0c f4       	brge	.+2      	; 0xd48 <ILI9486_Draw_Circle+0x182>
     d46:	96 cf       	rjmp	.-212    	; 0xc74 <ILI9486_Draw_Circle+0xae>
     d48:	26 96       	adiw	r28, 0x06	; 6
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	df 91       	pop	r29
     d56:	cf 91       	pop	r28
     d58:	1f 91       	pop	r17
     d5a:	0f 91       	pop	r16
     d5c:	ff 90       	pop	r15
     d5e:	ef 90       	pop	r14
     d60:	df 90       	pop	r13
     d62:	cf 90       	pop	r12
     d64:	bf 90       	pop	r11
     d66:	af 90       	pop	r10
     d68:	9f 90       	pop	r9
     d6a:	8f 90       	pop	r8
     d6c:	7f 90       	pop	r7
     d6e:	6f 90       	pop	r6
     d70:	5f 90       	pop	r5
     d72:	4f 90       	pop	r4
     d74:	3f 90       	pop	r3
     d76:	2f 90       	pop	r2
     d78:	08 95       	ret

00000d7a <ILI9486_fillCircleHelper>:
     d7a:	3f 92       	push	r3
     d7c:	4f 92       	push	r4
     d7e:	5f 92       	push	r5
     d80:	6f 92       	push	r6
     d82:	7f 92       	push	r7
     d84:	8f 92       	push	r8
     d86:	9f 92       	push	r9
     d88:	af 92       	push	r10
     d8a:	bf 92       	push	r11
     d8c:	cf 92       	push	r12
     d8e:	df 92       	push	r13
     d90:	ef 92       	push	r14
     d92:	ff 92       	push	r15
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	00 d0       	rcall	.+0      	; 0xd9e <ILI9486_fillCircleHelper+0x24>
     d9e:	00 d0       	rcall	.+0      	; 0xda0 <ILI9486_fillCircleHelper+0x26>
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	4c 01       	movw	r8, r24
     da6:	5b 01       	movw	r10, r22
     da8:	6a 01       	movw	r12, r20
     daa:	32 2e       	mov	r3, r18
     dac:	38 01       	movw	r6, r16
     dae:	fa 82       	std	Y+2, r15	; 0x02
     db0:	e9 82       	std	Y+1, r14	; 0x01
     db2:	01 e0       	ldi	r16, 0x01	; 1
     db4:	10 e0       	ldi	r17, 0x00	; 0
     db6:	04 1b       	sub	r16, r20
     db8:	15 0b       	sbc	r17, r21
     dba:	44 24       	eor	r4, r4
     dbc:	55 24       	eor	r5, r5
     dbe:	44 1a       	sub	r4, r20
     dc0:	55 0a       	sbc	r5, r21
     dc2:	44 0c       	add	r4, r4
     dc4:	55 1c       	adc	r5, r5
     dc6:	1c 82       	std	Y+4, r1	; 0x04
     dc8:	1b 82       	std	Y+3, r1	; 0x03
     dca:	ee 24       	eor	r14, r14
     dcc:	e3 94       	inc	r14
     dce:	f1 2c       	mov	r15, r1
     dd0:	65 c0       	rjmp	.+202    	; 0xe9c <ILI9486_fillCircleHelper+0x122>
     dd2:	11 23       	and	r17, r17
     dd4:	44 f0       	brlt	.+16     	; 0xde6 <ILI9486_fillCircleHelper+0x6c>
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	c8 1a       	sub	r12, r24
     dda:	d1 08       	sbc	r13, r1
     ddc:	92 e0       	ldi	r25, 0x02	; 2
     dde:	49 0e       	add	r4, r25
     de0:	51 1c       	adc	r5, r1
     de2:	04 0d       	add	r16, r4
     de4:	15 1d       	adc	r17, r5
     de6:	eb 81       	ldd	r30, Y+3	; 0x03
     de8:	fc 81       	ldd	r31, Y+4	; 0x04
     dea:	31 96       	adiw	r30, 0x01	; 1
     dec:	fc 83       	std	Y+4, r31	; 0x04
     dee:	eb 83       	std	Y+3, r30	; 0x03
     df0:	f2 e0       	ldi	r31, 0x02	; 2
     df2:	ef 0e       	add	r14, r31
     df4:	f1 1c       	adc	r15, r1
     df6:	0e 0d       	add	r16, r14
     df8:	1f 1d       	adc	r17, r15
     dfa:	30 fe       	sbrs	r3, 0
     dfc:	26 c0       	rjmp	.+76     	; 0xe4a <ILI9486_fillCircleHelper+0xd0>
     dfe:	a6 01       	movw	r20, r12
     e00:	44 0f       	add	r20, r20
     e02:	55 1f       	adc	r21, r21
     e04:	4f 5f       	subi	r20, 0xFF	; 255
     e06:	5f 4f       	sbci	r21, 0xFF	; 255
     e08:	46 0d       	add	r20, r6
     e0a:	57 1d       	adc	r21, r7
     e0c:	29 81       	ldd	r18, Y+1	; 0x01
     e0e:	3a 81       	ldd	r19, Y+2	; 0x02
     e10:	b5 01       	movw	r22, r10
     e12:	6c 19       	sub	r22, r12
     e14:	7d 09       	sbc	r23, r13
     e16:	8b 81       	ldd	r24, Y+3	; 0x03
     e18:	9c 81       	ldd	r25, Y+4	; 0x04
     e1a:	88 0d       	add	r24, r8
     e1c:	99 1d       	adc	r25, r9
     e1e:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     e22:	4b 81       	ldd	r20, Y+3	; 0x03
     e24:	5c 81       	ldd	r21, Y+4	; 0x04
     e26:	44 0f       	add	r20, r20
     e28:	55 1f       	adc	r21, r21
     e2a:	4f 5f       	subi	r20, 0xFF	; 255
     e2c:	5f 4f       	sbci	r21, 0xFF	; 255
     e2e:	46 0d       	add	r20, r6
     e30:	57 1d       	adc	r21, r7
     e32:	29 81       	ldd	r18, Y+1	; 0x01
     e34:	3a 81       	ldd	r19, Y+2	; 0x02
     e36:	b5 01       	movw	r22, r10
     e38:	8b 81       	ldd	r24, Y+3	; 0x03
     e3a:	9c 81       	ldd	r25, Y+4	; 0x04
     e3c:	68 1b       	sub	r22, r24
     e3e:	79 0b       	sbc	r23, r25
     e40:	c6 01       	movw	r24, r12
     e42:	88 0d       	add	r24, r8
     e44:	99 1d       	adc	r25, r9
     e46:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     e4a:	31 fe       	sbrs	r3, 1
     e4c:	27 c0       	rjmp	.+78     	; 0xe9c <ILI9486_fillCircleHelper+0x122>
     e4e:	a6 01       	movw	r20, r12
     e50:	44 0f       	add	r20, r20
     e52:	55 1f       	adc	r21, r21
     e54:	4f 5f       	subi	r20, 0xFF	; 255
     e56:	5f 4f       	sbci	r21, 0xFF	; 255
     e58:	46 0d       	add	r20, r6
     e5a:	57 1d       	adc	r21, r7
     e5c:	29 81       	ldd	r18, Y+1	; 0x01
     e5e:	3a 81       	ldd	r19, Y+2	; 0x02
     e60:	b5 01       	movw	r22, r10
     e62:	6c 19       	sub	r22, r12
     e64:	7d 09       	sbc	r23, r13
     e66:	c4 01       	movw	r24, r8
     e68:	eb 81       	ldd	r30, Y+3	; 0x03
     e6a:	fc 81       	ldd	r31, Y+4	; 0x04
     e6c:	8e 1b       	sub	r24, r30
     e6e:	9f 0b       	sbc	r25, r31
     e70:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     e74:	4b 81       	ldd	r20, Y+3	; 0x03
     e76:	5c 81       	ldd	r21, Y+4	; 0x04
     e78:	44 0f       	add	r20, r20
     e7a:	55 1f       	adc	r21, r21
     e7c:	4f 5f       	subi	r20, 0xFF	; 255
     e7e:	5f 4f       	sbci	r21, 0xFF	; 255
     e80:	46 0d       	add	r20, r6
     e82:	57 1d       	adc	r21, r7
     e84:	29 81       	ldd	r18, Y+1	; 0x01
     e86:	3a 81       	ldd	r19, Y+2	; 0x02
     e88:	b5 01       	movw	r22, r10
     e8a:	8b 81       	ldd	r24, Y+3	; 0x03
     e8c:	9c 81       	ldd	r25, Y+4	; 0x04
     e8e:	68 1b       	sub	r22, r24
     e90:	79 0b       	sbc	r23, r25
     e92:	c4 01       	movw	r24, r8
     e94:	8c 19       	sub	r24, r12
     e96:	9d 09       	sbc	r25, r13
     e98:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     e9c:	eb 81       	ldd	r30, Y+3	; 0x03
     e9e:	fc 81       	ldd	r31, Y+4	; 0x04
     ea0:	ec 15       	cp	r30, r12
     ea2:	fd 05       	cpc	r31, r13
     ea4:	0c f4       	brge	.+2      	; 0xea8 <ILI9486_fillCircleHelper+0x12e>
     ea6:	95 cf       	rjmp	.-214    	; 0xdd2 <ILI9486_fillCircleHelper+0x58>
     ea8:	0f 90       	pop	r0
     eaa:	0f 90       	pop	r0
     eac:	0f 90       	pop	r0
     eae:	0f 90       	pop	r0
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	df 90       	pop	r13
     ebe:	cf 90       	pop	r12
     ec0:	bf 90       	pop	r11
     ec2:	af 90       	pop	r10
     ec4:	9f 90       	pop	r9
     ec6:	8f 90       	pop	r8
     ec8:	7f 90       	pop	r7
     eca:	6f 90       	pop	r6
     ecc:	5f 90       	pop	r5
     ece:	4f 90       	pop	r4
     ed0:	3f 90       	pop	r3
     ed2:	08 95       	ret

00000ed4 <ILI9486_fillCircle>:
     ed4:	af 92       	push	r10
     ed6:	bf 92       	push	r11
     ed8:	cf 92       	push	r12
     eda:	df 92       	push	r13
     edc:	ef 92       	push	r14
     ede:	ff 92       	push	r15
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	6c 01       	movw	r12, r24
     eea:	5b 01       	movw	r10, r22
     eec:	ea 01       	movw	r28, r20
     eee:	79 01       	movw	r14, r18
     ef0:	44 0f       	add	r20, r20
     ef2:	55 1f       	adc	r21, r21
     ef4:	4f 5f       	subi	r20, 0xFF	; 255
     ef6:	5f 4f       	sbci	r21, 0xFF	; 255
     ef8:	6c 1b       	sub	r22, r28
     efa:	7d 0b       	sbc	r23, r29
     efc:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     f00:	00 e0       	ldi	r16, 0x00	; 0
     f02:	10 e0       	ldi	r17, 0x00	; 0
     f04:	23 e0       	ldi	r18, 0x03	; 3
     f06:	ae 01       	movw	r20, r28
     f08:	b5 01       	movw	r22, r10
     f0a:	c6 01       	movw	r24, r12
     f0c:	0e 94 bd 06 	call	0xd7a	; 0xd7a <ILI9486_fillCircleHelper>
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	1f 91       	pop	r17
     f16:	0f 91       	pop	r16
     f18:	ff 90       	pop	r15
     f1a:	ef 90       	pop	r14
     f1c:	df 90       	pop	r13
     f1e:	cf 90       	pop	r12
     f20:	bf 90       	pop	r11
     f22:	af 90       	pop	r10
     f24:	08 95       	ret

00000f26 <ILI9486_DrawRect>:
     f26:	af 92       	push	r10
     f28:	bf 92       	push	r11
     f2a:	cf 92       	push	r12
     f2c:	df 92       	push	r13
     f2e:	ef 92       	push	r14
     f30:	ff 92       	push	r15
     f32:	0f 93       	push	r16
     f34:	1f 93       	push	r17
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	ec 01       	movw	r28, r24
     f3c:	7b 01       	movw	r14, r22
     f3e:	5a 01       	movw	r10, r20
     f40:	69 01       	movw	r12, r18
     f42:	98 01       	movw	r18, r16
     f44:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
     f48:	b7 01       	movw	r22, r14
     f4a:	6c 0d       	add	r22, r12
     f4c:	7d 1d       	adc	r23, r13
     f4e:	61 50       	subi	r22, 0x01	; 1
     f50:	71 09       	sbc	r23, r1
     f52:	98 01       	movw	r18, r16
     f54:	a5 01       	movw	r20, r10
     f56:	ce 01       	movw	r24, r28
     f58:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
     f5c:	98 01       	movw	r18, r16
     f5e:	a6 01       	movw	r20, r12
     f60:	b7 01       	movw	r22, r14
     f62:	ce 01       	movw	r24, r28
     f64:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     f68:	c5 01       	movw	r24, r10
     f6a:	8c 0f       	add	r24, r28
     f6c:	9d 1f       	adc	r25, r29
     f6e:	98 01       	movw	r18, r16
     f70:	a6 01       	movw	r20, r12
     f72:	b7 01       	movw	r22, r14
     f74:	01 97       	sbiw	r24, 0x01	; 1
     f76:	0e 94 c1 04 	call	0x982	; 0x982 <ILI9486_DrawFastVLine>
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	1f 91       	pop	r17
     f80:	0f 91       	pop	r16
     f82:	ff 90       	pop	r15
     f84:	ef 90       	pop	r14
     f86:	df 90       	pop	r13
     f88:	cf 90       	pop	r12
     f8a:	bf 90       	pop	r11
     f8c:	af 90       	pop	r10
     f8e:	08 95       	ret

00000f90 <ILI9486_fillTriangle>:
     f90:	2f 92       	push	r2
     f92:	3f 92       	push	r3
     f94:	4f 92       	push	r4
     f96:	5f 92       	push	r5
     f98:	6f 92       	push	r6
     f9a:	7f 92       	push	r7
     f9c:	8f 92       	push	r8
     f9e:	9f 92       	push	r9
     fa0:	af 92       	push	r10
     fa2:	bf 92       	push	r11
     fa4:	cf 92       	push	r12
     fa6:	df 92       	push	r13
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	cd b7       	in	r28, 0x3d	; 61
     fb6:	de b7       	in	r29, 0x3e	; 62
     fb8:	68 97       	sbiw	r28, 0x18	; 24
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	f8 94       	cli
     fbe:	de bf       	out	0x3e, r29	; 62
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	cd bf       	out	0x3d, r28	; 61
     fc4:	1c 01       	movw	r2, r24
     fc6:	78 8b       	std	Y+16, r23	; 0x10
     fc8:	6f 87       	std	Y+15, r22	; 0x0f
     fca:	5e 83       	std	Y+6, r21	; 0x06
     fcc:	4d 83       	std	Y+5, r20	; 0x05
     fce:	3e 87       	std	Y+14, r19	; 0x0e
     fd0:	2d 87       	std	Y+13, r18	; 0x0d
     fd2:	fc 86       	std	Y+12, r15	; 0x0c
     fd4:	eb 86       	std	Y+11, r14	; 0x0b
     fd6:	d8 86       	std	Y+8, r13	; 0x08
     fd8:	cf 82       	std	Y+7, r12	; 0x07
     fda:	26 17       	cp	r18, r22
     fdc:	37 07       	cpc	r19, r23
     fde:	5c f4       	brge	.+22     	; 0xff6 <ILI9486_fillTriangle+0x66>
     fe0:	9f 85       	ldd	r25, Y+15	; 0x0f
     fe2:	88 89       	ldd	r24, Y+16	; 0x10
     fe4:	38 8b       	std	Y+16, r19	; 0x10
     fe6:	2f 87       	std	Y+15, r18	; 0x0f
     fe8:	9d 87       	std	Y+13, r25	; 0x0d
     fea:	8e 87       	std	Y+14, r24	; 0x0e
     fec:	92 2d       	mov	r25, r2
     fee:	83 2d       	mov	r24, r3
     ff0:	1a 01       	movw	r2, r20
     ff2:	9d 83       	std	Y+5, r25	; 0x05
     ff4:	8e 83       	std	Y+6, r24	; 0x06
     ff6:	2d 85       	ldd	r18, Y+13	; 0x0d
     ff8:	3e 85       	ldd	r19, Y+14	; 0x0e
     ffa:	4b 85       	ldd	r20, Y+11	; 0x0b
     ffc:	5c 85       	ldd	r21, Y+12	; 0x0c
     ffe:	42 17       	cp	r20, r18
    1000:	53 07       	cpc	r21, r19
    1002:	64 f4       	brge	.+24     	; 0x101c <ILI9486_fillTriangle+0x8c>
    1004:	9d 85       	ldd	r25, Y+13	; 0x0d
    1006:	8e 85       	ldd	r24, Y+14	; 0x0e
    1008:	5e 87       	std	Y+14, r21	; 0x0e
    100a:	4d 87       	std	Y+13, r20	; 0x0d
    100c:	9b 87       	std	Y+11, r25	; 0x0b
    100e:	8c 87       	std	Y+12, r24	; 0x0c
    1010:	9d 81       	ldd	r25, Y+5	; 0x05
    1012:	8e 81       	ldd	r24, Y+6	; 0x06
    1014:	1e 83       	std	Y+6, r17	; 0x06
    1016:	0d 83       	std	Y+5, r16	; 0x05
    1018:	09 2f       	mov	r16, r25
    101a:	18 2f       	mov	r17, r24
    101c:	8f 85       	ldd	r24, Y+15	; 0x0f
    101e:	98 89       	ldd	r25, Y+16	; 0x10
    1020:	ad 85       	ldd	r26, Y+13	; 0x0d
    1022:	be 85       	ldd	r27, Y+14	; 0x0e
    1024:	a8 17       	cp	r26, r24
    1026:	b9 07       	cpc	r27, r25
    1028:	64 f4       	brge	.+24     	; 0x1042 <ILI9486_fillTriangle+0xb2>
    102a:	9f 85       	ldd	r25, Y+15	; 0x0f
    102c:	88 89       	ldd	r24, Y+16	; 0x10
    102e:	b8 8b       	std	Y+16, r27	; 0x10
    1030:	af 87       	std	Y+15, r26	; 0x0f
    1032:	9d 87       	std	Y+13, r25	; 0x0d
    1034:	8e 87       	std	Y+14, r24	; 0x0e
    1036:	92 2d       	mov	r25, r2
    1038:	83 2d       	mov	r24, r3
    103a:	2d 80       	ldd	r2, Y+5	; 0x05
    103c:	3e 80       	ldd	r3, Y+6	; 0x06
    103e:	9d 83       	std	Y+5, r25	; 0x05
    1040:	8e 83       	std	Y+6, r24	; 0x06
    1042:	ef 85       	ldd	r30, Y+15	; 0x0f
    1044:	f8 89       	ldd	r31, Y+16	; 0x10
    1046:	2b 85       	ldd	r18, Y+11	; 0x0b
    1048:	3c 85       	ldd	r19, Y+12	; 0x0c
    104a:	e2 17       	cp	r30, r18
    104c:	f3 07       	cpc	r31, r19
    104e:	59 f5       	brne	.+86     	; 0x10a6 <ILI9486_fillTriangle+0x116>
    1050:	4d 81       	ldd	r20, Y+5	; 0x05
    1052:	5e 81       	ldd	r21, Y+6	; 0x06
    1054:	42 15       	cp	r20, r2
    1056:	53 05       	cpc	r21, r3
    1058:	64 f0       	brlt	.+24     	; 0x1072 <ILI9486_fillTriangle+0xe2>
    105a:	24 16       	cp	r2, r20
    105c:	35 06       	cpc	r3, r21
    105e:	1c f0       	brlt	.+6      	; 0x1066 <ILI9486_fillTriangle+0xd6>
    1060:	3e 82       	std	Y+6, r3	; 0x06
    1062:	2d 82       	std	Y+5, r2	; 0x05
    1064:	06 c0       	rjmp	.+12     	; 0x1072 <ILI9486_fillTriangle+0xe2>
    1066:	9d 81       	ldd	r25, Y+5	; 0x05
    1068:	8e 81       	ldd	r24, Y+6	; 0x06
    106a:	3e 82       	std	Y+6, r3	; 0x06
    106c:	2d 82       	std	Y+5, r2	; 0x05
    106e:	29 2e       	mov	r2, r25
    1070:	38 2e       	mov	r3, r24
    1072:	8d 81       	ldd	r24, Y+5	; 0x05
    1074:	9e 81       	ldd	r25, Y+6	; 0x06
    1076:	08 17       	cp	r16, r24
    1078:	19 07       	cpc	r17, r25
    107a:	44 f0       	brlt	.+16     	; 0x108c <ILI9486_fillTriangle+0xfc>
    107c:	20 16       	cp	r2, r16
    107e:	31 06       	cpc	r3, r17
    1080:	14 f0       	brlt	.+4      	; 0x1086 <ILI9486_fillTriangle+0xf6>
    1082:	8c 01       	movw	r16, r24
    1084:	03 c0       	rjmp	.+6      	; 0x108c <ILI9486_fillTriangle+0xfc>
    1086:	18 01       	movw	r2, r16
    1088:	0d 81       	ldd	r16, Y+5	; 0x05
    108a:	1e 81       	ldd	r17, Y+6	; 0x06
    108c:	a1 01       	movw	r20, r2
    108e:	40 1b       	sub	r20, r16
    1090:	51 0b       	sbc	r21, r17
    1092:	4f 5f       	subi	r20, 0xFF	; 255
    1094:	5f 4f       	sbci	r21, 0xFF	; 255
    1096:	2f 81       	ldd	r18, Y+7	; 0x07
    1098:	38 85       	ldd	r19, Y+8	; 0x08
    109a:	6f 85       	ldd	r22, Y+15	; 0x0f
    109c:	78 89       	ldd	r23, Y+16	; 0x10
    109e:	c8 01       	movw	r24, r16
    10a0:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
    10a4:	f4 c0       	rjmp	.+488    	; 0x128e <ILI9486_fillTriangle+0x2fe>
    10a6:	ad 81       	ldd	r26, Y+5	; 0x05
    10a8:	be 81       	ldd	r27, Y+6	; 0x06
    10aa:	a2 19       	sub	r26, r2
    10ac:	b3 09       	sbc	r27, r3
    10ae:	ba 8b       	std	Y+18, r27	; 0x12
    10b0:	a9 8b       	std	Y+17, r26	; 0x11
    10b2:	4d 84       	ldd	r4, Y+13	; 0x0d
    10b4:	5e 84       	ldd	r5, Y+14	; 0x0e
    10b6:	ef 85       	ldd	r30, Y+15	; 0x0f
    10b8:	f8 89       	ldd	r31, Y+16	; 0x10
    10ba:	4e 1a       	sub	r4, r30
    10bc:	5f 0a       	sbc	r5, r31
    10be:	98 01       	movw	r18, r16
    10c0:	22 19       	sub	r18, r2
    10c2:	33 09       	sbc	r19, r3
    10c4:	3a 83       	std	Y+2, r19	; 0x02
    10c6:	29 83       	std	Y+1, r18	; 0x01
    10c8:	4b 85       	ldd	r20, Y+11	; 0x0b
    10ca:	5c 85       	ldd	r21, Y+12	; 0x0c
    10cc:	4e 1b       	sub	r20, r30
    10ce:	5f 0b       	sbc	r21, r31
    10d0:	5a 87       	std	Y+10, r21	; 0x0a
    10d2:	49 87       	std	Y+9, r20	; 0x09
    10d4:	c8 01       	movw	r24, r16
    10d6:	ad 81       	ldd	r26, Y+5	; 0x05
    10d8:	be 81       	ldd	r27, Y+6	; 0x06
    10da:	8a 1b       	sub	r24, r26
    10dc:	9b 0b       	sbc	r25, r27
    10de:	9e 8b       	std	Y+22, r25	; 0x16
    10e0:	8d 8b       	std	Y+21, r24	; 0x15
    10e2:	eb 85       	ldd	r30, Y+11	; 0x0b
    10e4:	fc 85       	ldd	r31, Y+12	; 0x0c
    10e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    10e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    10ea:	e2 1b       	sub	r30, r18
    10ec:	f3 0b       	sbc	r31, r19
    10ee:	fc 8b       	std	Y+20, r31	; 0x14
    10f0:	eb 8b       	std	Y+19, r30	; 0x13
    10f2:	4b 85       	ldd	r20, Y+11	; 0x0b
    10f4:	5c 85       	ldd	r21, Y+12	; 0x0c
    10f6:	24 17       	cp	r18, r20
    10f8:	35 07       	cpc	r19, r21
    10fa:	29 f0       	breq	.+10     	; 0x1106 <ILI9486_fillTriangle+0x176>
    10fc:	39 01       	movw	r6, r18
    10fe:	51 e0       	ldi	r21, 0x01	; 1
    1100:	65 1a       	sub	r6, r21
    1102:	71 08       	sbc	r7, r1
    1104:	02 c0       	rjmp	.+4      	; 0x110a <ILI9486_fillTriangle+0x17a>
    1106:	6d 84       	ldd	r6, Y+13	; 0x0d
    1108:	7e 84       	ldd	r7, Y+14	; 0x0e
    110a:	0f 85       	ldd	r16, Y+15	; 0x0f
    110c:	18 89       	ldd	r17, Y+16	; 0x10
    110e:	81 2c       	mov	r8, r1
    1110:	91 2c       	mov	r9, r1
    1112:	54 01       	movw	r10, r8
    1114:	c1 2c       	mov	r12, r1
    1116:	d1 2c       	mov	r13, r1
    1118:	76 01       	movw	r14, r12
    111a:	46 c0       	rjmp	.+140    	; 0x11a8 <ILI9486_fillTriangle+0x218>
    111c:	c7 01       	movw	r24, r14
    111e:	b6 01       	movw	r22, r12
    1120:	92 01       	movw	r18, r4
    1122:	05 2c       	mov	r0, r5
    1124:	00 0c       	add	r0, r0
    1126:	44 0b       	sbc	r20, r20
    1128:	55 0b       	sbc	r21, r21
    112a:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    112e:	c1 01       	movw	r24, r2
    1130:	82 0f       	add	r24, r18
    1132:	93 1f       	adc	r25, r19
    1134:	98 8f       	std	Y+24, r25	; 0x18
    1136:	8f 8b       	std	Y+23, r24	; 0x17
    1138:	c5 01       	movw	r24, r10
    113a:	b4 01       	movw	r22, r8
    113c:	a9 85       	ldd	r26, Y+9	; 0x09
    113e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1140:	9d 01       	movw	r18, r26
    1142:	bb 0f       	add	r27, r27
    1144:	44 0b       	sbc	r20, r20
    1146:	55 0b       	sbc	r21, r21
    1148:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    114c:	c1 01       	movw	r24, r2
    114e:	82 0f       	add	r24, r18
    1150:	93 1f       	adc	r25, r19
    1152:	e9 89       	ldd	r30, Y+17	; 0x11
    1154:	fa 89       	ldd	r31, Y+18	; 0x12
    1156:	af 01       	movw	r20, r30
    1158:	ff 0f       	add	r31, r31
    115a:	66 0b       	sbc	r22, r22
    115c:	77 0b       	sbc	r23, r23
    115e:	c4 0e       	add	r12, r20
    1160:	d5 1e       	adc	r13, r21
    1162:	e6 1e       	adc	r14, r22
    1164:	f7 1e       	adc	r15, r23
    1166:	29 81       	ldd	r18, Y+1	; 0x01
    1168:	3a 81       	ldd	r19, Y+2	; 0x02
    116a:	a9 01       	movw	r20, r18
    116c:	33 0f       	add	r19, r19
    116e:	66 0b       	sbc	r22, r22
    1170:	77 0b       	sbc	r23, r23
    1172:	84 0e       	add	r8, r20
    1174:	95 1e       	adc	r9, r21
    1176:	a6 1e       	adc	r10, r22
    1178:	b7 1e       	adc	r11, r23
    117a:	4f 89       	ldd	r20, Y+23	; 0x17
    117c:	58 8d       	ldd	r21, Y+24	; 0x18
    117e:	84 17       	cp	r24, r20
    1180:	95 07       	cpc	r25, r21
    1182:	2c f0       	brlt	.+10     	; 0x118e <ILI9486_fillTriangle+0x1fe>
    1184:	38 2f       	mov	r19, r24
    1186:	29 2f       	mov	r18, r25
    1188:	ca 01       	movw	r24, r20
    118a:	3f 8b       	std	Y+23, r19	; 0x17
    118c:	28 8f       	std	Y+24, r18	; 0x18
    118e:	4f 89       	ldd	r20, Y+23	; 0x17
    1190:	58 8d       	ldd	r21, Y+24	; 0x18
    1192:	48 1b       	sub	r20, r24
    1194:	59 0b       	sbc	r21, r25
    1196:	4f 5f       	subi	r20, 0xFF	; 255
    1198:	5f 4f       	sbci	r21, 0xFF	; 255
    119a:	2f 81       	ldd	r18, Y+7	; 0x07
    119c:	38 85       	ldd	r19, Y+8	; 0x08
    119e:	b8 01       	movw	r22, r16
    11a0:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
    11a4:	0f 5f       	subi	r16, 0xFF	; 255
    11a6:	1f 4f       	sbci	r17, 0xFF	; 255
    11a8:	60 16       	cp	r6, r16
    11aa:	71 06       	cpc	r7, r17
    11ac:	0c f0       	brlt	.+2      	; 0x11b0 <ILI9486_fillTriangle+0x220>
    11ae:	b6 cf       	rjmp	.-148    	; 0x111c <ILI9486_fillTriangle+0x18c>
    11b0:	8d 89       	ldd	r24, Y+21	; 0x15
    11b2:	9e 89       	ldd	r25, Y+22	; 0x16
    11b4:	2c 01       	movw	r4, r24
    11b6:	99 0f       	add	r25, r25
    11b8:	66 08       	sbc	r6, r6
    11ba:	77 08       	sbc	r7, r7
    11bc:	d8 01       	movw	r26, r16
    11be:	ed 85       	ldd	r30, Y+13	; 0x0d
    11c0:	fe 85       	ldd	r31, Y+14	; 0x0e
    11c2:	ae 1b       	sub	r26, r30
    11c4:	bf 0b       	sbc	r27, r31
    11c6:	a3 01       	movw	r20, r6
    11c8:	92 01       	movw	r18, r4
    11ca:	0e 94 8a 2e 	call	0x5d14	; 0x5d14 <__mulshisi3>
    11ce:	4b 01       	movw	r8, r22
    11d0:	5c 01       	movw	r10, r24
    11d2:	29 81       	ldd	r18, Y+1	; 0x01
    11d4:	3a 81       	ldd	r19, Y+2	; 0x02
    11d6:	03 2e       	mov	r0, r19
    11d8:	00 0c       	add	r0, r0
    11da:	44 0b       	sbc	r20, r20
    11dc:	55 0b       	sbc	r21, r21
    11de:	29 83       	std	Y+1, r18	; 0x01
    11e0:	3a 83       	std	Y+2, r19	; 0x02
    11e2:	4b 83       	std	Y+3, r20	; 0x03
    11e4:	5c 83       	std	Y+4, r21	; 0x04
    11e6:	d8 01       	movw	r26, r16
    11e8:	4f 85       	ldd	r20, Y+15	; 0x0f
    11ea:	58 89       	ldd	r21, Y+16	; 0x10
    11ec:	a4 1b       	sub	r26, r20
    11ee:	b5 0b       	sbc	r27, r21
    11f0:	29 81       	ldd	r18, Y+1	; 0x01
    11f2:	3a 81       	ldd	r19, Y+2	; 0x02
    11f4:	4b 81       	ldd	r20, Y+3	; 0x03
    11f6:	5c 81       	ldd	r21, Y+4	; 0x04
    11f8:	0e 94 8a 2e 	call	0x5d14	; 0x5d14 <__mulshisi3>
    11fc:	6b 01       	movw	r12, r22
    11fe:	7c 01       	movw	r14, r24
    1200:	40 c0       	rjmp	.+128    	; 0x1282 <ILI9486_fillTriangle+0x2f2>
    1202:	c5 01       	movw	r24, r10
    1204:	b4 01       	movw	r22, r8
    1206:	ab 89       	ldd	r26, Y+19	; 0x13
    1208:	bc 89       	ldd	r27, Y+20	; 0x14
    120a:	9d 01       	movw	r18, r26
    120c:	bb 0f       	add	r27, r27
    120e:	44 0b       	sbc	r20, r20
    1210:	55 0b       	sbc	r21, r21
    1212:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    1216:	ed 81       	ldd	r30, Y+5	; 0x05
    1218:	fe 81       	ldd	r31, Y+6	; 0x06
    121a:	e2 0f       	add	r30, r18
    121c:	f3 1f       	adc	r31, r19
    121e:	fe 87       	std	Y+14, r31	; 0x0e
    1220:	ed 87       	std	Y+13, r30	; 0x0d
    1222:	c7 01       	movw	r24, r14
    1224:	b6 01       	movw	r22, r12
    1226:	a9 85       	ldd	r26, Y+9	; 0x09
    1228:	ba 85       	ldd	r27, Y+10	; 0x0a
    122a:	9d 01       	movw	r18, r26
    122c:	bb 0f       	add	r27, r27
    122e:	44 0b       	sbc	r20, r20
    1230:	55 0b       	sbc	r21, r21
    1232:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    1236:	c1 01       	movw	r24, r2
    1238:	82 0f       	add	r24, r18
    123a:	93 1f       	adc	r25, r19
    123c:	84 0c       	add	r8, r4
    123e:	95 1c       	adc	r9, r5
    1240:	a6 1c       	adc	r10, r6
    1242:	b7 1c       	adc	r11, r7
    1244:	29 81       	ldd	r18, Y+1	; 0x01
    1246:	3a 81       	ldd	r19, Y+2	; 0x02
    1248:	4b 81       	ldd	r20, Y+3	; 0x03
    124a:	5c 81       	ldd	r21, Y+4	; 0x04
    124c:	c2 0e       	add	r12, r18
    124e:	d3 1e       	adc	r13, r19
    1250:	e4 1e       	adc	r14, r20
    1252:	f5 1e       	adc	r15, r21
    1254:	4d 85       	ldd	r20, Y+13	; 0x0d
    1256:	5e 85       	ldd	r21, Y+14	; 0x0e
    1258:	84 17       	cp	r24, r20
    125a:	95 07       	cpc	r25, r21
    125c:	2c f0       	brlt	.+10     	; 0x1268 <ILI9486_fillTriangle+0x2d8>
    125e:	38 2f       	mov	r19, r24
    1260:	29 2f       	mov	r18, r25
    1262:	ca 01       	movw	r24, r20
    1264:	3d 87       	std	Y+13, r19	; 0x0d
    1266:	2e 87       	std	Y+14, r18	; 0x0e
    1268:	4d 85       	ldd	r20, Y+13	; 0x0d
    126a:	5e 85       	ldd	r21, Y+14	; 0x0e
    126c:	48 1b       	sub	r20, r24
    126e:	59 0b       	sbc	r21, r25
    1270:	4f 5f       	subi	r20, 0xFF	; 255
    1272:	5f 4f       	sbci	r21, 0xFF	; 255
    1274:	2f 81       	ldd	r18, Y+7	; 0x07
    1276:	38 85       	ldd	r19, Y+8	; 0x08
    1278:	b8 01       	movw	r22, r16
    127a:	0e 94 e7 04 	call	0x9ce	; 0x9ce <ILI9486_DrawFastHLine>
    127e:	0f 5f       	subi	r16, 0xFF	; 255
    1280:	1f 4f       	sbci	r17, 0xFF	; 255
    1282:	8b 85       	ldd	r24, Y+11	; 0x0b
    1284:	9c 85       	ldd	r25, Y+12	; 0x0c
    1286:	80 17       	cp	r24, r16
    1288:	91 07       	cpc	r25, r17
    128a:	0c f0       	brlt	.+2      	; 0x128e <ILI9486_fillTriangle+0x2fe>
    128c:	ba cf       	rjmp	.-140    	; 0x1202 <ILI9486_fillTriangle+0x272>
    128e:	68 96       	adiw	r28, 0x18	; 24
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	de bf       	out	0x3e, r29	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	cd bf       	out	0x3d, r28	; 61
    129a:	df 91       	pop	r29
    129c:	cf 91       	pop	r28
    129e:	1f 91       	pop	r17
    12a0:	0f 91       	pop	r16
    12a2:	ff 90       	pop	r15
    12a4:	ef 90       	pop	r14
    12a6:	df 90       	pop	r13
    12a8:	cf 90       	pop	r12
    12aa:	bf 90       	pop	r11
    12ac:	af 90       	pop	r10
    12ae:	9f 90       	pop	r9
    12b0:	8f 90       	pop	r8
    12b2:	7f 90       	pop	r7
    12b4:	6f 90       	pop	r6
    12b6:	5f 90       	pop	r5
    12b8:	4f 90       	pop	r4
    12ba:	3f 90       	pop	r3
    12bc:	2f 90       	pop	r2
    12be:	08 95       	ret

000012c0 <ILI9486_SetTextColor>:
    12c0:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <POINT_COLOR+0x1>
    12c4:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <POINT_COLOR>
    12c8:	70 93 4e 03 	sts	0x034E, r23	; 0x80034e <BACK_COLOR+0x1>
    12cc:	60 93 4d 03 	sts	0x034D, r22	; 0x80034d <BACK_COLOR>
    12d0:	08 95       	ret

000012d2 <ILI9486_Print_Char14x24>:
    12d2:	8f 92       	push	r8
    12d4:	9f 92       	push	r9
    12d6:	af 92       	push	r10
    12d8:	bf 92       	push	r11
    12da:	cf 92       	push	r12
    12dc:	df 92       	push	r13
    12de:	ef 92       	push	r14
    12e0:	ff 92       	push	r15
    12e2:	0f 93       	push	r16
    12e4:	1f 93       	push	r17
    12e6:	cf 93       	push	r28
    12e8:	df 93       	push	r29
    12ea:	cd b7       	in	r28, 0x3d	; 61
    12ec:	de b7       	in	r29, 0x3e	; 62
    12ee:	c5 51       	subi	r28, 0x15	; 21
    12f0:	d1 40       	sbci	r29, 0x01	; 1
    12f2:	0f b6       	in	r0, 0x3f	; 63
    12f4:	f8 94       	cli
    12f6:	de bf       	out	0x3e, r29	; 62
    12f8:	0f be       	out	0x3f, r0	; 63
    12fa:	cd bf       	out	0x3d, r28	; 61
    12fc:	8c 01       	movw	r16, r24
    12fe:	7b 01       	movw	r14, r22
    1300:	b4 2e       	mov	r11, r20
    1302:	a2 2e       	mov	r10, r18
    1304:	00 00       	nop
    1306:	ce 01       	movw	r24, r28
    1308:	01 96       	adiw	r24, 0x01	; 1
    130a:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    130e:	80 e6       	ldi	r24, 0x60	; 96
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 6d 1a 	call	0x34da	; 0x34da <pf_open>
    1316:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <X_SIZE>
    131a:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <X_SIZE+0x1>
    131e:	0e 97       	sbiw	r24, 0x0e	; 14
    1320:	80 17       	cp	r24, r16
    1322:	91 07       	cpc	r25, r17
    1324:	08 f4       	brcc	.+2      	; 0x1328 <ILI9486_Print_Char14x24+0x56>
    1326:	17 c1       	rjmp	.+558    	; 0x1556 <ILI9486_Print_Char14x24+0x284>
    1328:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
    132c:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
    1330:	48 97       	sbiw	r24, 0x18	; 24
    1332:	8e 15       	cp	r24, r14
    1334:	9f 05       	cpc	r25, r15
    1336:	08 f4       	brcc	.+2      	; 0x133a <ILI9486_Print_Char14x24+0x68>
    1338:	0e c1       	rjmp	.+540    	; 0x1556 <ILI9486_Print_Char14x24+0x284>
    133a:	6e 01       	movw	r12, r28
    133c:	2d e2       	ldi	r18, 0x2D	; 45
    133e:	c2 0e       	add	r12, r18
    1340:	d1 1c       	adc	r13, r1
    1342:	82 eb       	ldi	r24, 0xB2	; 178
    1344:	d6 01       	movw	r26, r12
    1346:	1d 92       	st	X+, r1
    1348:	8a 95       	dec	r24
    134a:	e9 f7       	brne	.-6      	; 0x1346 <ILI9486_Print_Char14x24+0x74>
    134c:	fe 01       	movw	r30, r28
    134e:	e1 52       	subi	r30, 0x21	; 33
    1350:	ff 4f       	sbci	r31, 0xFF	; 255
    1352:	8b e2       	ldi	r24, 0x2B	; 43
    1354:	df 01       	movw	r26, r30
    1356:	1d 92       	st	X+, r1
    1358:	8a 95       	dec	r24
    135a:	e9 f7       	brne	.-6      	; 0x1356 <ILI9486_Print_Char14x24+0x84>
    135c:	bb 96       	adiw	r30, 0x2b	; 43
    135e:	8a e0       	ldi	r24, 0x0A	; 10
    1360:	df 01       	movw	r26, r30
    1362:	1d 92       	st	X+, r1
    1364:	8a 95       	dec	r24
    1366:	e9 f7       	brne	.-6      	; 0x1362 <ILI9486_Print_Char14x24+0x90>
    1368:	2b 2d       	mov	r18, r11
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	a0 e4       	ldi	r26, 0x40	; 64
    136e:	b5 e0       	ldi	r27, 0x05	; 5
    1370:	0e 94 70 2e 	call	0x5ce0	; 0x5ce0 <__umulhisi3>
    1374:	dc 01       	movw	r26, r24
    1376:	cb 01       	movw	r24, r22
    1378:	80 54       	subi	r24, 0x40	; 64
    137a:	95 45       	sbci	r25, 0x55	; 85
    137c:	a1 40       	sbci	r26, 0x01	; 1
    137e:	b1 09       	sbc	r27, r1
    1380:	bc 01       	movw	r22, r24
    1382:	cd 01       	movw	r24, r26
    1384:	68 94       	set
    1386:	12 f8       	bld	r1, 2
    1388:	96 95       	lsr	r25
    138a:	87 95       	ror	r24
    138c:	77 95       	ror	r23
    138e:	67 95       	ror	r22
    1390:	16 94       	lsr	r1
    1392:	d1 f7       	brne	.-12     	; 0x1388 <ILI9486_Print_Char14x24+0xb6>
    1394:	0e 94 ba 1b 	call	0x3774	; 0x3774 <pf_lseek>
    1398:	ae 01       	movw	r20, r28
    139a:	4c 5e       	subi	r20, 0xEC	; 236
    139c:	5e 4f       	sbci	r21, 0xFE	; 254
    139e:	67 ea       	ldi	r22, 0xA7	; 167
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	c6 01       	movw	r24, r12
    13a4:	0e 94 c9 1a 	call	0x3592	; 0x3592 <pf_read>
    13a8:	81 2c       	mov	r8, r1
    13aa:	91 2c       	mov	r9, r1
    13ac:	c1 2c       	mov	r12, r1
    13ae:	d1 2c       	mov	r13, r1
    13b0:	43 c0       	rjmp	.+134    	; 0x1438 <ILI9486_Print_Char14x24+0x166>
    13b2:	b0 e2       	ldi	r27, 0x20	; 32
    13b4:	bb 12       	cpse	r11, r27
    13b6:	0e c0       	rjmp	.+28     	; 0x13d4 <ILI9486_Print_Char14x24+0x102>
    13b8:	35 c0       	rjmp	.+106    	; 0x1424 <ILI9486_Print_Char14x24+0x152>
    13ba:	ea e0       	ldi	r30, 0x0A	; 10
    13bc:	f1 e0       	ldi	r31, 0x01	; 1
    13be:	ec 0f       	add	r30, r28
    13c0:	fd 1f       	adc	r31, r29
    13c2:	e2 0f       	add	r30, r18
    13c4:	f3 1f       	adc	r31, r19
    13c6:	80 83       	st	Z, r24
    13c8:	ef ef       	ldi	r30, 0xFF	; 255
    13ca:	ce 1a       	sub	r12, r30
    13cc:	de 0a       	sbc	r13, r30
    13ce:	2f 5f       	subi	r18, 0xFF	; 255
    13d0:	3f 4f       	sbci	r19, 0xFF	; 255
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <ILI9486_Print_Char14x24+0x106>
    13d4:	20 e0       	ldi	r18, 0x00	; 0
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	ed e2       	ldi	r30, 0x2D	; 45
    13da:	f0 e0       	ldi	r31, 0x00	; 0
    13dc:	ec 0f       	add	r30, r28
    13de:	fd 1f       	adc	r31, r29
    13e0:	ec 0d       	add	r30, r12
    13e2:	fd 1d       	adc	r31, r13
    13e4:	80 81       	ld	r24, Z
    13e6:	8c 32       	cpi	r24, 0x2C	; 44
    13e8:	41 f7       	brne	.-48     	; 0x13ba <ILI9486_Print_Char14x24+0xe8>
    13ea:	f2 e0       	ldi	r31, 0x02	; 2
    13ec:	cf 0e       	add	r12, r31
    13ee:	d1 1c       	adc	r13, r1
    13f0:	8f ed       	ldi	r24, 0xDF	; 223
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	8c 0f       	add	r24, r28
    13f6:	9d 1f       	adc	r25, r29
    13f8:	88 0d       	add	r24, r8
    13fa:	99 1d       	adc	r25, r9
    13fc:	9f 93       	push	r25
    13fe:	8f 93       	push	r24
    1400:	8a e6       	ldi	r24, 0x6A	; 106
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	9f 93       	push	r25
    1406:	8f 93       	push	r24
    1408:	ce 01       	movw	r24, r28
    140a:	86 5f       	subi	r24, 0xF6	; 246
    140c:	9e 4f       	sbci	r25, 0xFE	; 254
    140e:	9f 93       	push	r25
    1410:	8f 93       	push	r24
    1412:	0e 94 c4 2e 	call	0x5d88	; 0x5d88 <sscanf>
    1416:	0f 90       	pop	r0
    1418:	0f 90       	pop	r0
    141a:	0f 90       	pop	r0
    141c:	0f 90       	pop	r0
    141e:	0f 90       	pop	r0
    1420:	0f 90       	pop	r0
    1422:	07 c0       	rjmp	.+14     	; 0x1432 <ILI9486_Print_Char14x24+0x160>
    1424:	ef ed       	ldi	r30, 0xDF	; 223
    1426:	f0 e0       	ldi	r31, 0x00	; 0
    1428:	ec 0f       	add	r30, r28
    142a:	fd 1f       	adc	r31, r29
    142c:	e8 0d       	add	r30, r8
    142e:	f9 1d       	adc	r31, r9
    1430:	10 82       	st	Z, r1
    1432:	2f ef       	ldi	r18, 0xFF	; 255
    1434:	82 1a       	sub	r8, r18
    1436:	92 0a       	sbc	r9, r18
    1438:	3a e2       	ldi	r19, 0x2A	; 42
    143a:	83 16       	cp	r8, r19
    143c:	91 04       	cpc	r9, r1
    143e:	0c f4       	brge	.+2      	; 0x1442 <ILI9486_Print_Char14x24+0x170>
    1440:	b8 cf       	rjmp	.-144    	; 0x13b2 <ILI9486_Print_Char14x24+0xe0>
    1442:	97 01       	movw	r18, r14
    1444:	29 5e       	subi	r18, 0xE9	; 233
    1446:	3f 4f       	sbci	r19, 0xFF	; 255
    1448:	a8 01       	movw	r20, r16
    144a:	41 5f       	subi	r20, 0xF1	; 241
    144c:	5f 4f       	sbci	r21, 0xFF	; 255
    144e:	b7 01       	movw	r22, r14
    1450:	c8 01       	movw	r24, r16
    1452:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
    1456:	b1 2c       	mov	r11, r1
    1458:	77 c0       	rjmp	.+238    	; 0x1548 <ILI9486_Print_Char14x24+0x276>
    145a:	8d 2d       	mov	r24, r13
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	fc 01       	movw	r30, r24
    1460:	ee 0f       	add	r30, r30
    1462:	ff 1f       	adc	r31, r31
    1464:	e8 0f       	add	r30, r24
    1466:	f9 1f       	adc	r31, r25
    1468:	8b 2d       	mov	r24, r11
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	e8 0f       	add	r30, r24
    146e:	f9 1f       	adc	r31, r25
    1470:	af ed       	ldi	r26, 0xDF	; 223
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	ac 0f       	add	r26, r28
    1476:	bd 1f       	adc	r27, r29
    1478:	ea 0f       	add	r30, r26
    147a:	fb 1f       	adc	r31, r27
    147c:	20 81       	ld	r18, Z
    147e:	a8 95       	wdr
    1480:	a1 10       	cpse	r10, r1
    1482:	35 c0       	rjmp	.+106    	; 0x14ee <ILI9486_Print_Char14x24+0x21c>
    1484:	4c 2d       	mov	r20, r12
    1486:	50 e0       	ldi	r21, 0x00	; 0
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	0c 2c       	mov	r0, r12
    148c:	02 c0       	rjmp	.+4      	; 0x1492 <ILI9486_Print_Char14x24+0x1c0>
    148e:	35 95       	asr	r19
    1490:	27 95       	ror	r18
    1492:	0a 94       	dec	r0
    1494:	e2 f7       	brpl	.-8      	; 0x148e <ILI9486_Print_Char14x24+0x1bc>
    1496:	20 ff       	sbrs	r18, 0
    1498:	15 c0       	rjmp	.+42     	; 0x14c4 <ILI9486_Print_Char14x24+0x1f2>
    149a:	bc 01       	movw	r22, r24
    149c:	66 0f       	add	r22, r22
    149e:	77 1f       	adc	r23, r23
    14a0:	66 0f       	add	r22, r22
    14a2:	77 1f       	adc	r23, r23
    14a4:	66 0f       	add	r22, r22
    14a6:	77 1f       	adc	r23, r23
    14a8:	64 0f       	add	r22, r20
    14aa:	75 1f       	adc	r23, r21
    14ac:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    14b0:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    14b4:	6e 0d       	add	r22, r14
    14b6:	7f 1d       	adc	r23, r15
    14b8:	c8 01       	movw	r24, r16
    14ba:	8d 0d       	add	r24, r13
    14bc:	91 1d       	adc	r25, r1
    14be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    14c2:	34 c0       	rjmp	.+104    	; 0x152c <ILI9486_Print_Char14x24+0x25a>
    14c4:	bc 01       	movw	r22, r24
    14c6:	66 0f       	add	r22, r22
    14c8:	77 1f       	adc	r23, r23
    14ca:	66 0f       	add	r22, r22
    14cc:	77 1f       	adc	r23, r23
    14ce:	66 0f       	add	r22, r22
    14d0:	77 1f       	adc	r23, r23
    14d2:	64 0f       	add	r22, r20
    14d4:	75 1f       	adc	r23, r21
    14d6:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <BACK_COLOR>
    14da:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <BACK_COLOR+0x1>
    14de:	6e 0d       	add	r22, r14
    14e0:	7f 1d       	adc	r23, r15
    14e2:	c8 01       	movw	r24, r16
    14e4:	8d 0d       	add	r24, r13
    14e6:	91 1d       	adc	r25, r1
    14e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    14ec:	1f c0       	rjmp	.+62     	; 0x152c <ILI9486_Print_Char14x24+0x25a>
    14ee:	4c 2d       	mov	r20, r12
    14f0:	50 e0       	ldi	r21, 0x00	; 0
    14f2:	30 e0       	ldi	r19, 0x00	; 0
    14f4:	0c 2c       	mov	r0, r12
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <ILI9486_Print_Char14x24+0x22a>
    14f8:	35 95       	asr	r19
    14fa:	27 95       	ror	r18
    14fc:	0a 94       	dec	r0
    14fe:	e2 f7       	brpl	.-8      	; 0x14f8 <ILI9486_Print_Char14x24+0x226>
    1500:	20 ff       	sbrs	r18, 0
    1502:	14 c0       	rjmp	.+40     	; 0x152c <ILI9486_Print_Char14x24+0x25a>
    1504:	bc 01       	movw	r22, r24
    1506:	66 0f       	add	r22, r22
    1508:	77 1f       	adc	r23, r23
    150a:	66 0f       	add	r22, r22
    150c:	77 1f       	adc	r23, r23
    150e:	66 0f       	add	r22, r22
    1510:	77 1f       	adc	r23, r23
    1512:	64 0f       	add	r22, r20
    1514:	75 1f       	adc	r23, r21
    1516:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    151a:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    151e:	6e 0d       	add	r22, r14
    1520:	7f 1d       	adc	r23, r15
    1522:	c8 01       	movw	r24, r16
    1524:	8d 0d       	add	r24, r13
    1526:	91 1d       	adc	r25, r1
    1528:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    152c:	d3 94       	inc	r13
    152e:	01 c0       	rjmp	.+2      	; 0x1532 <ILI9486_Print_Char14x24+0x260>
    1530:	d1 2c       	mov	r13, r1
    1532:	bd e0       	ldi	r27, 0x0D	; 13
    1534:	bd 15       	cp	r27, r13
    1536:	08 f0       	brcs	.+2      	; 0x153a <ILI9486_Print_Char14x24+0x268>
    1538:	90 cf       	rjmp	.-224    	; 0x145a <ILI9486_Print_Char14x24+0x188>
    153a:	c3 94       	inc	r12
    153c:	01 c0       	rjmp	.+2      	; 0x1540 <ILI9486_Print_Char14x24+0x26e>
    153e:	c1 2c       	mov	r12, r1
    1540:	e7 e0       	ldi	r30, 0x07	; 7
    1542:	ec 15       	cp	r30, r12
    1544:	a8 f7       	brcc	.-22     	; 0x1530 <ILI9486_Print_Char14x24+0x25e>
    1546:	b3 94       	inc	r11
    1548:	f2 e0       	ldi	r31, 0x02	; 2
    154a:	fb 15       	cp	r31, r11
    154c:	c0 f7       	brcc	.-16     	; 0x153e <ILI9486_Print_Char14x24+0x26c>
    154e:	80 e0       	ldi	r24, 0x00	; 0
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1556:	cb 5e       	subi	r28, 0xEB	; 235
    1558:	de 4f       	sbci	r29, 0xFE	; 254
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	f8 94       	cli
    155e:	de bf       	out	0x3e, r29	; 62
    1560:	0f be       	out	0x3f, r0	; 63
    1562:	cd bf       	out	0x3d, r28	; 61
    1564:	df 91       	pop	r29
    1566:	cf 91       	pop	r28
    1568:	1f 91       	pop	r17
    156a:	0f 91       	pop	r16
    156c:	ff 90       	pop	r15
    156e:	ef 90       	pop	r14
    1570:	df 90       	pop	r13
    1572:	cf 90       	pop	r12
    1574:	bf 90       	pop	r11
    1576:	af 90       	pop	r10
    1578:	9f 90       	pop	r9
    157a:	8f 90       	pop	r8
    157c:	08 95       	ret

0000157e <ILI9486_Print_Char18x32>:
    157e:	8f 92       	push	r8
    1580:	9f 92       	push	r9
    1582:	af 92       	push	r10
    1584:	bf 92       	push	r11
    1586:	cf 92       	push	r12
    1588:	df 92       	push	r13
    158a:	ef 92       	push	r14
    158c:	ff 92       	push	r15
    158e:	0f 93       	push	r16
    1590:	1f 93       	push	r17
    1592:	cf 93       	push	r28
    1594:	df 93       	push	r29
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	cb 5a       	subi	r28, 0xAB	; 171
    159c:	d1 40       	sbci	r29, 0x01	; 1
    159e:	0f b6       	in	r0, 0x3f	; 63
    15a0:	f8 94       	cli
    15a2:	de bf       	out	0x3e, r29	; 62
    15a4:	0f be       	out	0x3f, r0	; 63
    15a6:	cd bf       	out	0x3d, r28	; 61
    15a8:	8c 01       	movw	r16, r24
    15aa:	7b 01       	movw	r14, r22
    15ac:	b4 2e       	mov	r11, r20
    15ae:	a2 2e       	mov	r10, r18
    15b0:	00 00       	nop
    15b2:	ce 01       	movw	r24, r28
    15b4:	01 96       	adiw	r24, 0x01	; 1
    15b6:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    15ba:	8d e6       	ldi	r24, 0x6D	; 109
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 6d 1a 	call	0x34da	; 0x34da <pf_open>
    15c2:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <X_SIZE>
    15c6:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <X_SIZE+0x1>
    15ca:	42 97       	sbiw	r24, 0x12	; 18
    15cc:	80 17       	cp	r24, r16
    15ce:	91 07       	cpc	r25, r17
    15d0:	08 f4       	brcc	.+2      	; 0x15d4 <ILI9486_Print_Char18x32+0x56>
    15d2:	18 c1       	rjmp	.+560    	; 0x1804 <ILI9486_Print_Char18x32+0x286>
    15d4:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
    15d8:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
    15dc:	80 97       	sbiw	r24, 0x20	; 32
    15de:	8e 15       	cp	r24, r14
    15e0:	9f 05       	cpc	r25, r15
    15e2:	08 f4       	brcc	.+2      	; 0x15e6 <ILI9486_Print_Char18x32+0x68>
    15e4:	0f c1       	rjmp	.+542    	; 0x1804 <ILI9486_Print_Char18x32+0x286>
    15e6:	6e 01       	movw	r12, r28
    15e8:	2d e2       	ldi	r18, 0x2D	; 45
    15ea:	c2 0e       	add	r12, r18
    15ec:	d1 1c       	adc	r13, r1
    15ee:	8a e2       	ldi	r24, 0x2A	; 42
    15f0:	91 e0       	ldi	r25, 0x01	; 1
    15f2:	d6 01       	movw	r26, r12
    15f4:	fc 01       	movw	r30, r24
    15f6:	1d 92       	st	X+, r1
    15f8:	31 97       	sbiw	r30, 0x01	; 1
    15fa:	e9 f7       	brne	.-6      	; 0x15f6 <ILI9486_Print_Char18x32+0x78>
    15fc:	fe 01       	movw	r30, r28
    15fe:	e9 5a       	subi	r30, 0xA9	; 169
    1600:	fe 4f       	sbci	r31, 0xFE	; 254
    1602:	89 e4       	ldi	r24, 0x49	; 73
    1604:	df 01       	movw	r26, r30
    1606:	1d 92       	st	X+, r1
    1608:	8a 95       	dec	r24
    160a:	e9 f7       	brne	.-6      	; 0x1606 <ILI9486_Print_Char18x32+0x88>
    160c:	e7 5b       	subi	r30, 0xB7	; 183
    160e:	ff 4f       	sbci	r31, 0xFF	; 255
    1610:	8a e0       	ldi	r24, 0x0A	; 10
    1612:	df 01       	movw	r26, r30
    1614:	1d 92       	st	X+, r1
    1616:	8a 95       	dec	r24
    1618:	e9 f7       	brne	.-6      	; 0x1614 <ILI9486_Print_Char18x32+0x96>
    161a:	2b 2d       	mov	r18, r11
    161c:	30 e0       	ldi	r19, 0x00	; 0
    161e:	a0 e0       	ldi	r26, 0x00	; 0
    1620:	b9 e0       	ldi	r27, 0x09	; 9
    1622:	0e 94 70 2e 	call	0x5ce0	; 0x5ce0 <__umulhisi3>
    1626:	dc 01       	movw	r26, r24
    1628:	cb 01       	movw	r24, r22
    162a:	90 52       	subi	r25, 0x20	; 32
    162c:	a1 40       	sbci	r26, 0x01	; 1
    162e:	b1 09       	sbc	r27, r1
    1630:	bc 01       	movw	r22, r24
    1632:	cd 01       	movw	r24, r26
    1634:	68 94       	set
    1636:	12 f8       	bld	r1, 2
    1638:	96 95       	lsr	r25
    163a:	87 95       	ror	r24
    163c:	77 95       	ror	r23
    163e:	67 95       	ror	r22
    1640:	16 94       	lsr	r1
    1642:	d1 f7       	brne	.-12     	; 0x1638 <ILI9486_Print_Char18x32+0xba>
    1644:	0e 94 ba 1b 	call	0x3774	; 0x3774 <pf_lseek>
    1648:	ae 01       	movw	r20, r28
    164a:	46 55       	subi	r20, 0x56	; 86
    164c:	5e 4f       	sbci	r21, 0xFE	; 254
    164e:	6f e1       	ldi	r22, 0x1F	; 31
    1650:	71 e0       	ldi	r23, 0x01	; 1
    1652:	c6 01       	movw	r24, r12
    1654:	0e 94 c9 1a 	call	0x3592	; 0x3592 <pf_read>
    1658:	81 2c       	mov	r8, r1
    165a:	91 2c       	mov	r9, r1
    165c:	c1 2c       	mov	r12, r1
    165e:	d1 2c       	mov	r13, r1
    1660:	43 c0       	rjmp	.+134    	; 0x16e8 <ILI9486_Print_Char18x32+0x16a>
    1662:	b0 e2       	ldi	r27, 0x20	; 32
    1664:	bb 12       	cpse	r11, r27
    1666:	0e c0       	rjmp	.+28     	; 0x1684 <ILI9486_Print_Char18x32+0x106>
    1668:	35 c0       	rjmp	.+106    	; 0x16d4 <ILI9486_Print_Char18x32+0x156>
    166a:	e0 ea       	ldi	r30, 0xA0	; 160
    166c:	f1 e0       	ldi	r31, 0x01	; 1
    166e:	ec 0f       	add	r30, r28
    1670:	fd 1f       	adc	r31, r29
    1672:	e2 0f       	add	r30, r18
    1674:	f3 1f       	adc	r31, r19
    1676:	80 83       	st	Z, r24
    1678:	ef ef       	ldi	r30, 0xFF	; 255
    167a:	ce 1a       	sub	r12, r30
    167c:	de 0a       	sbc	r13, r30
    167e:	2f 5f       	subi	r18, 0xFF	; 255
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	02 c0       	rjmp	.+4      	; 0x1688 <ILI9486_Print_Char18x32+0x10a>
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	ed e2       	ldi	r30, 0x2D	; 45
    168a:	f0 e0       	ldi	r31, 0x00	; 0
    168c:	ec 0f       	add	r30, r28
    168e:	fd 1f       	adc	r31, r29
    1690:	ec 0d       	add	r30, r12
    1692:	fd 1d       	adc	r31, r13
    1694:	80 81       	ld	r24, Z
    1696:	8c 32       	cpi	r24, 0x2C	; 44
    1698:	41 f7       	brne	.-48     	; 0x166a <ILI9486_Print_Char18x32+0xec>
    169a:	f2 e0       	ldi	r31, 0x02	; 2
    169c:	cf 0e       	add	r12, r31
    169e:	d1 1c       	adc	r13, r1
    16a0:	87 e5       	ldi	r24, 0x57	; 87
    16a2:	91 e0       	ldi	r25, 0x01	; 1
    16a4:	8c 0f       	add	r24, r28
    16a6:	9d 1f       	adc	r25, r29
    16a8:	88 0d       	add	r24, r8
    16aa:	99 1d       	adc	r25, r9
    16ac:	9f 93       	push	r25
    16ae:	8f 93       	push	r24
    16b0:	8a e6       	ldi	r24, 0x6A	; 106
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	9f 93       	push	r25
    16b6:	8f 93       	push	r24
    16b8:	ce 01       	movw	r24, r28
    16ba:	80 56       	subi	r24, 0x60	; 96
    16bc:	9e 4f       	sbci	r25, 0xFE	; 254
    16be:	9f 93       	push	r25
    16c0:	8f 93       	push	r24
    16c2:	0e 94 c4 2e 	call	0x5d88	; 0x5d88 <sscanf>
    16c6:	0f 90       	pop	r0
    16c8:	0f 90       	pop	r0
    16ca:	0f 90       	pop	r0
    16cc:	0f 90       	pop	r0
    16ce:	0f 90       	pop	r0
    16d0:	0f 90       	pop	r0
    16d2:	07 c0       	rjmp	.+14     	; 0x16e2 <ILI9486_Print_Char18x32+0x164>
    16d4:	e7 e5       	ldi	r30, 0x57	; 87
    16d6:	f1 e0       	ldi	r31, 0x01	; 1
    16d8:	ec 0f       	add	r30, r28
    16da:	fd 1f       	adc	r31, r29
    16dc:	e8 0d       	add	r30, r8
    16de:	f9 1d       	adc	r31, r9
    16e0:	10 82       	st	Z, r1
    16e2:	2f ef       	ldi	r18, 0xFF	; 255
    16e4:	82 1a       	sub	r8, r18
    16e6:	92 0a       	sbc	r9, r18
    16e8:	38 e4       	ldi	r19, 0x48	; 72
    16ea:	83 16       	cp	r8, r19
    16ec:	91 04       	cpc	r9, r1
    16ee:	0c f4       	brge	.+2      	; 0x16f2 <ILI9486_Print_Char18x32+0x174>
    16f0:	b8 cf       	rjmp	.-144    	; 0x1662 <ILI9486_Print_Char18x32+0xe4>
    16f2:	97 01       	movw	r18, r14
    16f4:	21 5e       	subi	r18, 0xE1	; 225
    16f6:	3f 4f       	sbci	r19, 0xFF	; 255
    16f8:	a8 01       	movw	r20, r16
    16fa:	4f 5e       	subi	r20, 0xEF	; 239
    16fc:	5f 4f       	sbci	r21, 0xFF	; 255
    16fe:	b7 01       	movw	r22, r14
    1700:	c8 01       	movw	r24, r16
    1702:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
    1706:	b1 2c       	mov	r11, r1
    1708:	76 c0       	rjmp	.+236    	; 0x17f6 <ILI9486_Print_Char18x32+0x278>
    170a:	ed 2d       	mov	r30, r13
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	ee 0f       	add	r30, r30
    1710:	ff 1f       	adc	r31, r31
    1712:	ee 0f       	add	r30, r30
    1714:	ff 1f       	adc	r31, r31
    1716:	8b 2d       	mov	r24, r11
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	e8 0f       	add	r30, r24
    171c:	f9 1f       	adc	r31, r25
    171e:	a7 e5       	ldi	r26, 0x57	; 87
    1720:	b1 e0       	ldi	r27, 0x01	; 1
    1722:	ac 0f       	add	r26, r28
    1724:	bd 1f       	adc	r27, r29
    1726:	ea 0f       	add	r30, r26
    1728:	fb 1f       	adc	r31, r27
    172a:	20 81       	ld	r18, Z
    172c:	a8 95       	wdr
    172e:	a1 10       	cpse	r10, r1
    1730:	35 c0       	rjmp	.+106    	; 0x179c <ILI9486_Print_Char18x32+0x21e>
    1732:	4c 2d       	mov	r20, r12
    1734:	50 e0       	ldi	r21, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	0c 2c       	mov	r0, r12
    173a:	02 c0       	rjmp	.+4      	; 0x1740 <ILI9486_Print_Char18x32+0x1c2>
    173c:	35 95       	asr	r19
    173e:	27 95       	ror	r18
    1740:	0a 94       	dec	r0
    1742:	e2 f7       	brpl	.-8      	; 0x173c <ILI9486_Print_Char18x32+0x1be>
    1744:	20 ff       	sbrs	r18, 0
    1746:	15 c0       	rjmp	.+42     	; 0x1772 <ILI9486_Print_Char18x32+0x1f4>
    1748:	bc 01       	movw	r22, r24
    174a:	66 0f       	add	r22, r22
    174c:	77 1f       	adc	r23, r23
    174e:	66 0f       	add	r22, r22
    1750:	77 1f       	adc	r23, r23
    1752:	66 0f       	add	r22, r22
    1754:	77 1f       	adc	r23, r23
    1756:	64 0f       	add	r22, r20
    1758:	75 1f       	adc	r23, r21
    175a:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    175e:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    1762:	6e 0d       	add	r22, r14
    1764:	7f 1d       	adc	r23, r15
    1766:	c8 01       	movw	r24, r16
    1768:	8d 0d       	add	r24, r13
    176a:	91 1d       	adc	r25, r1
    176c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1770:	34 c0       	rjmp	.+104    	; 0x17da <ILI9486_Print_Char18x32+0x25c>
    1772:	bc 01       	movw	r22, r24
    1774:	66 0f       	add	r22, r22
    1776:	77 1f       	adc	r23, r23
    1778:	66 0f       	add	r22, r22
    177a:	77 1f       	adc	r23, r23
    177c:	66 0f       	add	r22, r22
    177e:	77 1f       	adc	r23, r23
    1780:	64 0f       	add	r22, r20
    1782:	75 1f       	adc	r23, r21
    1784:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <BACK_COLOR>
    1788:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <BACK_COLOR+0x1>
    178c:	6e 0d       	add	r22, r14
    178e:	7f 1d       	adc	r23, r15
    1790:	c8 01       	movw	r24, r16
    1792:	8d 0d       	add	r24, r13
    1794:	91 1d       	adc	r25, r1
    1796:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    179a:	1f c0       	rjmp	.+62     	; 0x17da <ILI9486_Print_Char18x32+0x25c>
    179c:	4c 2d       	mov	r20, r12
    179e:	50 e0       	ldi	r21, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	0c 2c       	mov	r0, r12
    17a4:	02 c0       	rjmp	.+4      	; 0x17aa <ILI9486_Print_Char18x32+0x22c>
    17a6:	35 95       	asr	r19
    17a8:	27 95       	ror	r18
    17aa:	0a 94       	dec	r0
    17ac:	e2 f7       	brpl	.-8      	; 0x17a6 <ILI9486_Print_Char18x32+0x228>
    17ae:	20 ff       	sbrs	r18, 0
    17b0:	14 c0       	rjmp	.+40     	; 0x17da <ILI9486_Print_Char18x32+0x25c>
    17b2:	bc 01       	movw	r22, r24
    17b4:	66 0f       	add	r22, r22
    17b6:	77 1f       	adc	r23, r23
    17b8:	66 0f       	add	r22, r22
    17ba:	77 1f       	adc	r23, r23
    17bc:	66 0f       	add	r22, r22
    17be:	77 1f       	adc	r23, r23
    17c0:	64 0f       	add	r22, r20
    17c2:	75 1f       	adc	r23, r21
    17c4:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    17c8:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    17cc:	6e 0d       	add	r22, r14
    17ce:	7f 1d       	adc	r23, r15
    17d0:	c8 01       	movw	r24, r16
    17d2:	8d 0d       	add	r24, r13
    17d4:	91 1d       	adc	r25, r1
    17d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    17da:	d3 94       	inc	r13
    17dc:	01 c0       	rjmp	.+2      	; 0x17e0 <ILI9486_Print_Char18x32+0x262>
    17de:	d1 2c       	mov	r13, r1
    17e0:	b1 e1       	ldi	r27, 0x11	; 17
    17e2:	bd 15       	cp	r27, r13
    17e4:	08 f0       	brcs	.+2      	; 0x17e8 <ILI9486_Print_Char18x32+0x26a>
    17e6:	91 cf       	rjmp	.-222    	; 0x170a <ILI9486_Print_Char18x32+0x18c>
    17e8:	c3 94       	inc	r12
    17ea:	01 c0       	rjmp	.+2      	; 0x17ee <ILI9486_Print_Char18x32+0x270>
    17ec:	c1 2c       	mov	r12, r1
    17ee:	e7 e0       	ldi	r30, 0x07	; 7
    17f0:	ec 15       	cp	r30, r12
    17f2:	a8 f7       	brcc	.-22     	; 0x17de <ILI9486_Print_Char18x32+0x260>
    17f4:	b3 94       	inc	r11
    17f6:	f3 e0       	ldi	r31, 0x03	; 3
    17f8:	fb 15       	cp	r31, r11
    17fa:	c0 f7       	brcc	.-16     	; 0x17ec <ILI9486_Print_Char18x32+0x26e>
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1804:	c5 55       	subi	r28, 0x55	; 85
    1806:	de 4f       	sbci	r29, 0xFE	; 254
    1808:	0f b6       	in	r0, 0x3f	; 63
    180a:	f8 94       	cli
    180c:	de bf       	out	0x3e, r29	; 62
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	cd bf       	out	0x3d, r28	; 61
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	ff 90       	pop	r15
    181c:	ef 90       	pop	r14
    181e:	df 90       	pop	r13
    1820:	cf 90       	pop	r12
    1822:	bf 90       	pop	r11
    1824:	af 90       	pop	r10
    1826:	9f 90       	pop	r9
    1828:	8f 90       	pop	r8
    182a:	08 95       	ret

0000182c <ILI9486_Print_Char24x32>:
    182c:	8f 92       	push	r8
    182e:	9f 92       	push	r9
    1830:	af 92       	push	r10
    1832:	bf 92       	push	r11
    1834:	cf 92       	push	r12
    1836:	df 92       	push	r13
    1838:	ef 92       	push	r14
    183a:	ff 92       	push	r15
    183c:	0f 93       	push	r16
    183e:	1f 93       	push	r17
    1840:	cf 93       	push	r28
    1842:	df 93       	push	r29
    1844:	cd b7       	in	r28, 0x3d	; 61
    1846:	de b7       	in	r29, 0x3e	; 62
    1848:	c3 52       	subi	r28, 0x23	; 35
    184a:	d2 40       	sbci	r29, 0x02	; 2
    184c:	0f b6       	in	r0, 0x3f	; 63
    184e:	f8 94       	cli
    1850:	de bf       	out	0x3e, r29	; 62
    1852:	0f be       	out	0x3f, r0	; 63
    1854:	cd bf       	out	0x3d, r28	; 61
    1856:	8c 01       	movw	r16, r24
    1858:	7b 01       	movw	r14, r22
    185a:	d4 2e       	mov	r13, r20
    185c:	a2 2e       	mov	r10, r18
    185e:	00 00       	nop
    1860:	ce 01       	movw	r24, r28
    1862:	01 96       	adiw	r24, 0x01	; 1
    1864:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1868:	87 e7       	ldi	r24, 0x77	; 119
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	0e 94 6d 1a 	call	0x34da	; 0x34da <pf_open>
    1870:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <X_SIZE>
    1874:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <X_SIZE+0x1>
    1878:	48 97       	sbiw	r24, 0x18	; 24
    187a:	80 17       	cp	r24, r16
    187c:	91 07       	cpc	r25, r17
    187e:	08 f4       	brcc	.+2      	; 0x1882 <ILI9486_Print_Char24x32+0x56>
    1880:	0b c1       	rjmp	.+534    	; 0x1a98 <ILI9486_Print_Char24x32+0x26c>
    1882:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
    1886:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
    188a:	80 97       	sbiw	r24, 0x20	; 32
    188c:	8e 15       	cp	r24, r14
    188e:	9f 05       	cpc	r25, r15
    1890:	08 f4       	brcc	.+2      	; 0x1894 <ILI9486_Print_Char24x32+0x68>
    1892:	02 c1       	rjmp	.+516    	; 0x1a98 <ILI9486_Print_Char24x32+0x26c>
    1894:	4e 01       	movw	r8, r28
    1896:	2d e2       	ldi	r18, 0x2D	; 45
    1898:	82 0e       	add	r8, r18
    189a:	91 1c       	adc	r9, r1
    189c:	8a e8       	ldi	r24, 0x8A	; 138
    189e:	91 e0       	ldi	r25, 0x01	; 1
    18a0:	d4 01       	movw	r26, r8
    18a2:	fc 01       	movw	r30, r24
    18a4:	1d 92       	st	X+, r1
    18a6:	31 97       	sbiw	r30, 0x01	; 1
    18a8:	e9 f7       	brne	.-6      	; 0x18a4 <ILI9486_Print_Char24x32+0x78>
    18aa:	fe 01       	movw	r30, r28
    18ac:	e9 54       	subi	r30, 0x49	; 73
    18ae:	fe 4f       	sbci	r31, 0xFE	; 254
    18b0:	81 e6       	ldi	r24, 0x61	; 97
    18b2:	df 01       	movw	r26, r30
    18b4:	1d 92       	st	X+, r1
    18b6:	8a 95       	dec	r24
    18b8:	e9 f7       	brne	.-6      	; 0x18b4 <ILI9486_Print_Char24x32+0x88>
    18ba:	ef 59       	subi	r30, 0x9F	; 159
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	8a e0       	ldi	r24, 0x0A	; 10
    18c0:	df 01       	movw	r26, r30
    18c2:	1d 92       	st	X+, r1
    18c4:	8a 95       	dec	r24
    18c6:	e9 f7       	brne	.-6      	; 0x18c2 <ILI9486_Print_Char24x32+0x96>
    18c8:	2d 2d       	mov	r18, r13
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	a0 e0       	ldi	r26, 0x00	; 0
    18ce:	bc e0       	ldi	r27, 0x0C	; 12
    18d0:	0e 94 70 2e 	call	0x5ce0	; 0x5ce0 <__umulhisi3>
    18d4:	dc 01       	movw	r26, r24
    18d6:	cb 01       	movw	r24, r22
    18d8:	90 54       	subi	r25, 0x40	; 64
    18da:	a2 40       	sbci	r26, 0x02	; 2
    18dc:	b1 09       	sbc	r27, r1
    18de:	bc 01       	movw	r22, r24
    18e0:	cd 01       	movw	r24, r26
    18e2:	68 94       	set
    18e4:	12 f8       	bld	r1, 2
    18e6:	96 95       	lsr	r25
    18e8:	87 95       	ror	r24
    18ea:	77 95       	ror	r23
    18ec:	67 95       	ror	r22
    18ee:	16 94       	lsr	r1
    18f0:	d1 f7       	brne	.-12     	; 0x18e6 <ILI9486_Print_Char24x32+0xba>
    18f2:	0e 94 ba 1b 	call	0x3774	; 0x3774 <pf_lseek>
    18f6:	ae 01       	movw	r20, r28
    18f8:	4e 5d       	subi	r20, 0xDE	; 222
    18fa:	5d 4f       	sbci	r21, 0xFD	; 253
    18fc:	6f e7       	ldi	r22, 0x7F	; 127
    18fe:	71 e0       	ldi	r23, 0x01	; 1
    1900:	c4 01       	movw	r24, r8
    1902:	0e 94 c9 1a 	call	0x3592	; 0x3592 <pf_read>
    1906:	81 2c       	mov	r8, r1
    1908:	91 2c       	mov	r9, r1
    190a:	c1 2c       	mov	r12, r1
    190c:	d1 2c       	mov	r13, r1
    190e:	37 c0       	rjmp	.+110    	; 0x197e <ILI9486_Print_Char24x32+0x152>
    1910:	e8 e1       	ldi	r30, 0x18	; 24
    1912:	f2 e0       	ldi	r31, 0x02	; 2
    1914:	ec 0f       	add	r30, r28
    1916:	fd 1f       	adc	r31, r29
    1918:	e2 0f       	add	r30, r18
    191a:	f3 1f       	adc	r31, r19
    191c:	80 83       	st	Z, r24
    191e:	bf ef       	ldi	r27, 0xFF	; 255
    1920:	cb 1a       	sub	r12, r27
    1922:	db 0a       	sbc	r13, r27
    1924:	2f 5f       	subi	r18, 0xFF	; 255
    1926:	3f 4f       	sbci	r19, 0xFF	; 255
    1928:	02 c0       	rjmp	.+4      	; 0x192e <ILI9486_Print_Char24x32+0x102>
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	ed e2       	ldi	r30, 0x2D	; 45
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	ec 0f       	add	r30, r28
    1934:	fd 1f       	adc	r31, r29
    1936:	ec 0d       	add	r30, r12
    1938:	fd 1d       	adc	r31, r13
    193a:	80 81       	ld	r24, Z
    193c:	8c 32       	cpi	r24, 0x2C	; 44
    193e:	41 f7       	brne	.-48     	; 0x1910 <ILI9486_Print_Char24x32+0xe4>
    1940:	e2 e0       	ldi	r30, 0x02	; 2
    1942:	ce 0e       	add	r12, r30
    1944:	d1 1c       	adc	r13, r1
    1946:	87 eb       	ldi	r24, 0xB7	; 183
    1948:	91 e0       	ldi	r25, 0x01	; 1
    194a:	8c 0f       	add	r24, r28
    194c:	9d 1f       	adc	r25, r29
    194e:	88 0d       	add	r24, r8
    1950:	99 1d       	adc	r25, r9
    1952:	9f 93       	push	r25
    1954:	8f 93       	push	r24
    1956:	8a e6       	ldi	r24, 0x6A	; 106
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	9f 93       	push	r25
    195c:	8f 93       	push	r24
    195e:	ce 01       	movw	r24, r28
    1960:	88 5e       	subi	r24, 0xE8	; 232
    1962:	9d 4f       	sbci	r25, 0xFD	; 253
    1964:	9f 93       	push	r25
    1966:	8f 93       	push	r24
    1968:	0e 94 c4 2e 	call	0x5d88	; 0x5d88 <sscanf>
    196c:	ff ef       	ldi	r31, 0xFF	; 255
    196e:	8f 1a       	sub	r8, r31
    1970:	9f 0a       	sbc	r9, r31
    1972:	0f 90       	pop	r0
    1974:	0f 90       	pop	r0
    1976:	0f 90       	pop	r0
    1978:	0f 90       	pop	r0
    197a:	0f 90       	pop	r0
    197c:	0f 90       	pop	r0
    197e:	20 e6       	ldi	r18, 0x60	; 96
    1980:	82 16       	cp	r8, r18
    1982:	91 04       	cpc	r9, r1
    1984:	94 f2       	brlt	.-92     	; 0x192a <ILI9486_Print_Char24x32+0xfe>
    1986:	97 01       	movw	r18, r14
    1988:	21 50       	subi	r18, 0x01	; 1
    198a:	31 09       	sbc	r19, r1
    198c:	a8 01       	movw	r20, r16
    198e:	41 50       	subi	r20, 0x01	; 1
    1990:	51 09       	sbc	r21, r1
    1992:	b7 01       	movw	r22, r14
    1994:	c8 01       	movw	r24, r16
    1996:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
    199a:	b1 2c       	mov	r11, r1
    199c:	76 c0       	rjmp	.+236    	; 0x1a8a <ILI9486_Print_Char24x32+0x25e>
    199e:	ed 2d       	mov	r30, r13
    19a0:	f0 e0       	ldi	r31, 0x00	; 0
    19a2:	ee 0f       	add	r30, r30
    19a4:	ff 1f       	adc	r31, r31
    19a6:	ee 0f       	add	r30, r30
    19a8:	ff 1f       	adc	r31, r31
    19aa:	8b 2d       	mov	r24, r11
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	e8 0f       	add	r30, r24
    19b0:	f9 1f       	adc	r31, r25
    19b2:	a7 eb       	ldi	r26, 0xB7	; 183
    19b4:	b1 e0       	ldi	r27, 0x01	; 1
    19b6:	ac 0f       	add	r26, r28
    19b8:	bd 1f       	adc	r27, r29
    19ba:	ea 0f       	add	r30, r26
    19bc:	fb 1f       	adc	r31, r27
    19be:	20 81       	ld	r18, Z
    19c0:	a8 95       	wdr
    19c2:	a1 10       	cpse	r10, r1
    19c4:	35 c0       	rjmp	.+106    	; 0x1a30 <ILI9486_Print_Char24x32+0x204>
    19c6:	4c 2d       	mov	r20, r12
    19c8:	50 e0       	ldi	r21, 0x00	; 0
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	0c 2c       	mov	r0, r12
    19ce:	02 c0       	rjmp	.+4      	; 0x19d4 <ILI9486_Print_Char24x32+0x1a8>
    19d0:	35 95       	asr	r19
    19d2:	27 95       	ror	r18
    19d4:	0a 94       	dec	r0
    19d6:	e2 f7       	brpl	.-8      	; 0x19d0 <ILI9486_Print_Char24x32+0x1a4>
    19d8:	20 ff       	sbrs	r18, 0
    19da:	15 c0       	rjmp	.+42     	; 0x1a06 <ILI9486_Print_Char24x32+0x1da>
    19dc:	bc 01       	movw	r22, r24
    19de:	66 0f       	add	r22, r22
    19e0:	77 1f       	adc	r23, r23
    19e2:	66 0f       	add	r22, r22
    19e4:	77 1f       	adc	r23, r23
    19e6:	66 0f       	add	r22, r22
    19e8:	77 1f       	adc	r23, r23
    19ea:	64 0f       	add	r22, r20
    19ec:	75 1f       	adc	r23, r21
    19ee:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    19f2:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    19f6:	6e 0d       	add	r22, r14
    19f8:	7f 1d       	adc	r23, r15
    19fa:	c8 01       	movw	r24, r16
    19fc:	8d 0d       	add	r24, r13
    19fe:	91 1d       	adc	r25, r1
    1a00:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1a04:	34 c0       	rjmp	.+104    	; 0x1a6e <ILI9486_Print_Char24x32+0x242>
    1a06:	bc 01       	movw	r22, r24
    1a08:	66 0f       	add	r22, r22
    1a0a:	77 1f       	adc	r23, r23
    1a0c:	66 0f       	add	r22, r22
    1a0e:	77 1f       	adc	r23, r23
    1a10:	66 0f       	add	r22, r22
    1a12:	77 1f       	adc	r23, r23
    1a14:	64 0f       	add	r22, r20
    1a16:	75 1f       	adc	r23, r21
    1a18:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <BACK_COLOR>
    1a1c:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <BACK_COLOR+0x1>
    1a20:	6e 0d       	add	r22, r14
    1a22:	7f 1d       	adc	r23, r15
    1a24:	c8 01       	movw	r24, r16
    1a26:	8d 0d       	add	r24, r13
    1a28:	91 1d       	adc	r25, r1
    1a2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1a2e:	1f c0       	rjmp	.+62     	; 0x1a6e <ILI9486_Print_Char24x32+0x242>
    1a30:	4c 2d       	mov	r20, r12
    1a32:	50 e0       	ldi	r21, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	0c 2c       	mov	r0, r12
    1a38:	02 c0       	rjmp	.+4      	; 0x1a3e <ILI9486_Print_Char24x32+0x212>
    1a3a:	35 95       	asr	r19
    1a3c:	27 95       	ror	r18
    1a3e:	0a 94       	dec	r0
    1a40:	e2 f7       	brpl	.-8      	; 0x1a3a <ILI9486_Print_Char24x32+0x20e>
    1a42:	20 ff       	sbrs	r18, 0
    1a44:	14 c0       	rjmp	.+40     	; 0x1a6e <ILI9486_Print_Char24x32+0x242>
    1a46:	bc 01       	movw	r22, r24
    1a48:	66 0f       	add	r22, r22
    1a4a:	77 1f       	adc	r23, r23
    1a4c:	66 0f       	add	r22, r22
    1a4e:	77 1f       	adc	r23, r23
    1a50:	66 0f       	add	r22, r22
    1a52:	77 1f       	adc	r23, r23
    1a54:	64 0f       	add	r22, r20
    1a56:	75 1f       	adc	r23, r21
    1a58:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    1a5c:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    1a60:	6e 0d       	add	r22, r14
    1a62:	7f 1d       	adc	r23, r15
    1a64:	c8 01       	movw	r24, r16
    1a66:	8d 0d       	add	r24, r13
    1a68:	91 1d       	adc	r25, r1
    1a6a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1a6e:	d3 94       	inc	r13
    1a70:	01 c0       	rjmp	.+2      	; 0x1a74 <ILI9486_Print_Char24x32+0x248>
    1a72:	d1 2c       	mov	r13, r1
    1a74:	b7 e1       	ldi	r27, 0x17	; 23
    1a76:	bd 15       	cp	r27, r13
    1a78:	08 f0       	brcs	.+2      	; 0x1a7c <ILI9486_Print_Char24x32+0x250>
    1a7a:	91 cf       	rjmp	.-222    	; 0x199e <ILI9486_Print_Char24x32+0x172>
    1a7c:	c3 94       	inc	r12
    1a7e:	01 c0       	rjmp	.+2      	; 0x1a82 <ILI9486_Print_Char24x32+0x256>
    1a80:	c1 2c       	mov	r12, r1
    1a82:	e7 e0       	ldi	r30, 0x07	; 7
    1a84:	ec 15       	cp	r30, r12
    1a86:	a8 f7       	brcc	.-22     	; 0x1a72 <ILI9486_Print_Char24x32+0x246>
    1a88:	b3 94       	inc	r11
    1a8a:	f3 e0       	ldi	r31, 0x03	; 3
    1a8c:	fb 15       	cp	r31, r11
    1a8e:	c0 f7       	brcc	.-16     	; 0x1a80 <ILI9486_Print_Char24x32+0x254>
    1a90:	80 e0       	ldi	r24, 0x00	; 0
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1a98:	cd 5d       	subi	r28, 0xDD	; 221
    1a9a:	dd 4f       	sbci	r29, 0xFD	; 253
    1a9c:	0f b6       	in	r0, 0x3f	; 63
    1a9e:	f8 94       	cli
    1aa0:	de bf       	out	0x3e, r29	; 62
    1aa2:	0f be       	out	0x3f, r0	; 63
    1aa4:	cd bf       	out	0x3d, r28	; 61
    1aa6:	df 91       	pop	r29
    1aa8:	cf 91       	pop	r28
    1aaa:	1f 91       	pop	r17
    1aac:	0f 91       	pop	r16
    1aae:	ff 90       	pop	r15
    1ab0:	ef 90       	pop	r14
    1ab2:	df 90       	pop	r13
    1ab4:	cf 90       	pop	r12
    1ab6:	bf 90       	pop	r11
    1ab8:	af 90       	pop	r10
    1aba:	9f 90       	pop	r9
    1abc:	8f 90       	pop	r8
    1abe:	08 95       	ret

00001ac0 <ILI9486_Print_Char32x48>:
    1ac0:	8f 92       	push	r8
    1ac2:	9f 92       	push	r9
    1ac4:	af 92       	push	r10
    1ac6:	bf 92       	push	r11
    1ac8:	cf 92       	push	r12
    1aca:	df 92       	push	r13
    1acc:	ef 92       	push	r14
    1ace:	ff 92       	push	r15
    1ad0:	0f 93       	push	r16
    1ad2:	1f 93       	push	r17
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	cd b7       	in	r28, 0x3d	; 61
    1ada:	de b7       	in	r29, 0x3e	; 62
    1adc:	c3 50       	subi	r28, 0x03	; 3
    1ade:	d4 40       	sbci	r29, 0x04	; 4
    1ae0:	0f b6       	in	r0, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	de bf       	out	0x3e, r29	; 62
    1ae6:	0f be       	out	0x3f, r0	; 63
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	8c 01       	movw	r16, r24
    1aec:	7b 01       	movw	r14, r22
    1aee:	b4 2e       	mov	r11, r20
    1af0:	a2 2e       	mov	r10, r18
    1af2:	00 00       	nop
    1af4:	ce 01       	movw	r24, r28
    1af6:	01 96       	adiw	r24, 0x01	; 1
    1af8:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1afc:	81 e8       	ldi	r24, 0x81	; 129
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	0e 94 6d 1a 	call	0x34da	; 0x34da <pf_open>
    1b04:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <X_SIZE>
    1b08:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <X_SIZE+0x1>
    1b0c:	80 97       	sbiw	r24, 0x20	; 32
    1b0e:	80 17       	cp	r24, r16
    1b10:	91 07       	cpc	r25, r17
    1b12:	08 f4       	brcc	.+2      	; 0x1b16 <ILI9486_Print_Char32x48+0x56>
    1b14:	1b c1       	rjmp	.+566    	; 0x1d4c <ILI9486_Print_Char32x48+0x28c>
    1b16:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
    1b1a:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
    1b1e:	c0 97       	sbiw	r24, 0x30	; 48
    1b20:	8e 15       	cp	r24, r14
    1b22:	9f 05       	cpc	r25, r15
    1b24:	08 f4       	brcc	.+2      	; 0x1b28 <ILI9486_Print_Char32x48+0x68>
    1b26:	12 c1       	rjmp	.+548    	; 0x1d4c <ILI9486_Print_Char32x48+0x28c>
    1b28:	6e 01       	movw	r12, r28
    1b2a:	2d e2       	ldi	r18, 0x2D	; 45
    1b2c:	c2 0e       	add	r12, r18
    1b2e:	d1 1c       	adc	r13, r1
    1b30:	8a e0       	ldi	r24, 0x0A	; 10
    1b32:	93 e0       	ldi	r25, 0x03	; 3
    1b34:	d6 01       	movw	r26, r12
    1b36:	fc 01       	movw	r30, r24
    1b38:	1d 92       	st	X+, r1
    1b3a:	31 97       	sbiw	r30, 0x01	; 1
    1b3c:	e9 f7       	brne	.-6      	; 0x1b38 <ILI9486_Print_Char32x48+0x78>
    1b3e:	fe 01       	movw	r30, r28
    1b40:	e9 5c       	subi	r30, 0xC9	; 201
    1b42:	fc 4f       	sbci	r31, 0xFC	; 252
    1b44:	81 ec       	ldi	r24, 0xC1	; 193
    1b46:	df 01       	movw	r26, r30
    1b48:	1d 92       	st	X+, r1
    1b4a:	8a 95       	dec	r24
    1b4c:	e9 f7       	brne	.-6      	; 0x1b48 <ILI9486_Print_Char32x48+0x88>
    1b4e:	ef 53       	subi	r30, 0x3F	; 63
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	8a e0       	ldi	r24, 0x0A	; 10
    1b54:	df 01       	movw	r26, r30
    1b56:	1d 92       	st	X+, r1
    1b58:	8a 95       	dec	r24
    1b5a:	e9 f7       	brne	.-6      	; 0x1b56 <ILI9486_Print_Char32x48+0x96>
    1b5c:	2b 2d       	mov	r18, r11
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	a0 e0       	ldi	r26, 0x00	; 0
    1b62:	b8 e1       	ldi	r27, 0x18	; 24
    1b64:	0e 94 70 2e 	call	0x5ce0	; 0x5ce0 <__umulhisi3>
    1b68:	dc 01       	movw	r26, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	98 53       	subi	r25, 0x38	; 56
    1b6e:	a4 40       	sbci	r26, 0x04	; 4
    1b70:	b1 09       	sbc	r27, r1
    1b72:	bc 01       	movw	r22, r24
    1b74:	cd 01       	movw	r24, r26
    1b76:	68 94       	set
    1b78:	12 f8       	bld	r1, 2
    1b7a:	96 95       	lsr	r25
    1b7c:	87 95       	ror	r24
    1b7e:	77 95       	ror	r23
    1b80:	67 95       	ror	r22
    1b82:	16 94       	lsr	r1
    1b84:	d1 f7       	brne	.-12     	; 0x1b7a <ILI9486_Print_Char32x48+0xba>
    1b86:	0e 94 ba 1b 	call	0x3774	; 0x3774 <pf_lseek>
    1b8a:	ae 01       	movw	r20, r28
    1b8c:	4e 5f       	subi	r20, 0xFE	; 254
    1b8e:	5b 4f       	sbci	r21, 0xFB	; 251
    1b90:	6f ef       	ldi	r22, 0xFF	; 255
    1b92:	72 e0       	ldi	r23, 0x02	; 2
    1b94:	c6 01       	movw	r24, r12
    1b96:	0e 94 c9 1a 	call	0x3592	; 0x3592 <pf_read>
    1b9a:	81 2c       	mov	r8, r1
    1b9c:	91 2c       	mov	r9, r1
    1b9e:	c1 2c       	mov	r12, r1
    1ba0:	d1 2c       	mov	r13, r1
    1ba2:	43 c0       	rjmp	.+134    	; 0x1c2a <ILI9486_Print_Char32x48+0x16a>
    1ba4:	b0 e2       	ldi	r27, 0x20	; 32
    1ba6:	bb 12       	cpse	r11, r27
    1ba8:	0e c0       	rjmp	.+28     	; 0x1bc6 <ILI9486_Print_Char32x48+0x106>
    1baa:	35 c0       	rjmp	.+106    	; 0x1c16 <ILI9486_Print_Char32x48+0x156>
    1bac:	e8 ef       	ldi	r30, 0xF8	; 248
    1bae:	f3 e0       	ldi	r31, 0x03	; 3
    1bb0:	ec 0f       	add	r30, r28
    1bb2:	fd 1f       	adc	r31, r29
    1bb4:	e2 0f       	add	r30, r18
    1bb6:	f3 1f       	adc	r31, r19
    1bb8:	80 83       	st	Z, r24
    1bba:	ef ef       	ldi	r30, 0xFF	; 255
    1bbc:	ce 1a       	sub	r12, r30
    1bbe:	de 0a       	sbc	r13, r30
    1bc0:	2f 5f       	subi	r18, 0xFF	; 255
    1bc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc4:	02 c0       	rjmp	.+4      	; 0x1bca <ILI9486_Print_Char32x48+0x10a>
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	ed e2       	ldi	r30, 0x2D	; 45
    1bcc:	f0 e0       	ldi	r31, 0x00	; 0
    1bce:	ec 0f       	add	r30, r28
    1bd0:	fd 1f       	adc	r31, r29
    1bd2:	ec 0d       	add	r30, r12
    1bd4:	fd 1d       	adc	r31, r13
    1bd6:	80 81       	ld	r24, Z
    1bd8:	8c 32       	cpi	r24, 0x2C	; 44
    1bda:	41 f7       	brne	.-48     	; 0x1bac <ILI9486_Print_Char32x48+0xec>
    1bdc:	f2 e0       	ldi	r31, 0x02	; 2
    1bde:	cf 0e       	add	r12, r31
    1be0:	d1 1c       	adc	r13, r1
    1be2:	87 e3       	ldi	r24, 0x37	; 55
    1be4:	93 e0       	ldi	r25, 0x03	; 3
    1be6:	8c 0f       	add	r24, r28
    1be8:	9d 1f       	adc	r25, r29
    1bea:	88 0d       	add	r24, r8
    1bec:	99 1d       	adc	r25, r9
    1bee:	9f 93       	push	r25
    1bf0:	8f 93       	push	r24
    1bf2:	8a e6       	ldi	r24, 0x6A	; 106
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	9f 93       	push	r25
    1bf8:	8f 93       	push	r24
    1bfa:	ce 01       	movw	r24, r28
    1bfc:	88 50       	subi	r24, 0x08	; 8
    1bfe:	9c 4f       	sbci	r25, 0xFC	; 252
    1c00:	9f 93       	push	r25
    1c02:	8f 93       	push	r24
    1c04:	0e 94 c4 2e 	call	0x5d88	; 0x5d88 <sscanf>
    1c08:	0f 90       	pop	r0
    1c0a:	0f 90       	pop	r0
    1c0c:	0f 90       	pop	r0
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	0f 90       	pop	r0
    1c14:	07 c0       	rjmp	.+14     	; 0x1c24 <ILI9486_Print_Char32x48+0x164>
    1c16:	e7 e3       	ldi	r30, 0x37	; 55
    1c18:	f3 e0       	ldi	r31, 0x03	; 3
    1c1a:	ec 0f       	add	r30, r28
    1c1c:	fd 1f       	adc	r31, r29
    1c1e:	e8 0d       	add	r30, r8
    1c20:	f9 1d       	adc	r31, r9
    1c22:	10 82       	st	Z, r1
    1c24:	2f ef       	ldi	r18, 0xFF	; 255
    1c26:	82 1a       	sub	r8, r18
    1c28:	92 0a       	sbc	r9, r18
    1c2a:	30 ec       	ldi	r19, 0xC0	; 192
    1c2c:	83 16       	cp	r8, r19
    1c2e:	91 04       	cpc	r9, r1
    1c30:	0c f4       	brge	.+2      	; 0x1c34 <ILI9486_Print_Char32x48+0x174>
    1c32:	b8 cf       	rjmp	.-144    	; 0x1ba4 <ILI9486_Print_Char32x48+0xe4>
    1c34:	97 01       	movw	r18, r14
    1c36:	21 50       	subi	r18, 0x01	; 1
    1c38:	31 09       	sbc	r19, r1
    1c3a:	a8 01       	movw	r20, r16
    1c3c:	41 50       	subi	r20, 0x01	; 1
    1c3e:	51 09       	sbc	r21, r1
    1c40:	b7 01       	movw	r22, r14
    1c42:	c8 01       	movw	r24, r16
    1c44:	0e 94 9c 03 	call	0x738	; 0x738 <ILI9486_SetAddrWindow>
    1c48:	b1 2c       	mov	r11, r1
    1c4a:	79 c0       	rjmp	.+242    	; 0x1d3e <ILI9486_Print_Char32x48+0x27e>
    1c4c:	8d 2d       	mov	r24, r13
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	fc 01       	movw	r30, r24
    1c52:	ee 0f       	add	r30, r30
    1c54:	ff 1f       	adc	r31, r31
    1c56:	e8 0f       	add	r30, r24
    1c58:	f9 1f       	adc	r31, r25
    1c5a:	ee 0f       	add	r30, r30
    1c5c:	ff 1f       	adc	r31, r31
    1c5e:	8b 2d       	mov	r24, r11
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	e8 0f       	add	r30, r24
    1c64:	f9 1f       	adc	r31, r25
    1c66:	a7 e3       	ldi	r26, 0x37	; 55
    1c68:	b3 e0       	ldi	r27, 0x03	; 3
    1c6a:	ac 0f       	add	r26, r28
    1c6c:	bd 1f       	adc	r27, r29
    1c6e:	ea 0f       	add	r30, r26
    1c70:	fb 1f       	adc	r31, r27
    1c72:	20 81       	ld	r18, Z
    1c74:	a8 95       	wdr
    1c76:	a1 10       	cpse	r10, r1
    1c78:	35 c0       	rjmp	.+106    	; 0x1ce4 <ILI9486_Print_Char32x48+0x224>
    1c7a:	4c 2d       	mov	r20, r12
    1c7c:	50 e0       	ldi	r21, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	0c 2c       	mov	r0, r12
    1c82:	02 c0       	rjmp	.+4      	; 0x1c88 <ILI9486_Print_Char32x48+0x1c8>
    1c84:	35 95       	asr	r19
    1c86:	27 95       	ror	r18
    1c88:	0a 94       	dec	r0
    1c8a:	e2 f7       	brpl	.-8      	; 0x1c84 <ILI9486_Print_Char32x48+0x1c4>
    1c8c:	20 ff       	sbrs	r18, 0
    1c8e:	15 c0       	rjmp	.+42     	; 0x1cba <ILI9486_Print_Char32x48+0x1fa>
    1c90:	bc 01       	movw	r22, r24
    1c92:	66 0f       	add	r22, r22
    1c94:	77 1f       	adc	r23, r23
    1c96:	66 0f       	add	r22, r22
    1c98:	77 1f       	adc	r23, r23
    1c9a:	66 0f       	add	r22, r22
    1c9c:	77 1f       	adc	r23, r23
    1c9e:	64 0f       	add	r22, r20
    1ca0:	75 1f       	adc	r23, r21
    1ca2:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    1ca6:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    1caa:	6e 0d       	add	r22, r14
    1cac:	7f 1d       	adc	r23, r15
    1cae:	c8 01       	movw	r24, r16
    1cb0:	8d 0d       	add	r24, r13
    1cb2:	91 1d       	adc	r25, r1
    1cb4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1cb8:	34 c0       	rjmp	.+104    	; 0x1d22 <ILI9486_Print_Char32x48+0x262>
    1cba:	bc 01       	movw	r22, r24
    1cbc:	66 0f       	add	r22, r22
    1cbe:	77 1f       	adc	r23, r23
    1cc0:	66 0f       	add	r22, r22
    1cc2:	77 1f       	adc	r23, r23
    1cc4:	66 0f       	add	r22, r22
    1cc6:	77 1f       	adc	r23, r23
    1cc8:	64 0f       	add	r22, r20
    1cca:	75 1f       	adc	r23, r21
    1ccc:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <BACK_COLOR>
    1cd0:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <BACK_COLOR+0x1>
    1cd4:	6e 0d       	add	r22, r14
    1cd6:	7f 1d       	adc	r23, r15
    1cd8:	c8 01       	movw	r24, r16
    1cda:	8d 0d       	add	r24, r13
    1cdc:	91 1d       	adc	r25, r1
    1cde:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1ce2:	1f c0       	rjmp	.+62     	; 0x1d22 <ILI9486_Print_Char32x48+0x262>
    1ce4:	4c 2d       	mov	r20, r12
    1ce6:	50 e0       	ldi	r21, 0x00	; 0
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	0c 2c       	mov	r0, r12
    1cec:	02 c0       	rjmp	.+4      	; 0x1cf2 <ILI9486_Print_Char32x48+0x232>
    1cee:	35 95       	asr	r19
    1cf0:	27 95       	ror	r18
    1cf2:	0a 94       	dec	r0
    1cf4:	e2 f7       	brpl	.-8      	; 0x1cee <ILI9486_Print_Char32x48+0x22e>
    1cf6:	20 ff       	sbrs	r18, 0
    1cf8:	14 c0       	rjmp	.+40     	; 0x1d22 <ILI9486_Print_Char32x48+0x262>
    1cfa:	bc 01       	movw	r22, r24
    1cfc:	66 0f       	add	r22, r22
    1cfe:	77 1f       	adc	r23, r23
    1d00:	66 0f       	add	r22, r22
    1d02:	77 1f       	adc	r23, r23
    1d04:	66 0f       	add	r22, r22
    1d06:	77 1f       	adc	r23, r23
    1d08:	64 0f       	add	r22, r20
    1d0a:	75 1f       	adc	r23, r21
    1d0c:	40 91 4f 03 	lds	r20, 0x034F	; 0x80034f <POINT_COLOR>
    1d10:	50 91 50 03 	lds	r21, 0x0350	; 0x800350 <POINT_COLOR+0x1>
    1d14:	6e 0d       	add	r22, r14
    1d16:	7f 1d       	adc	r23, r15
    1d18:	c8 01       	movw	r24, r16
    1d1a:	8d 0d       	add	r24, r13
    1d1c:	91 1d       	adc	r25, r1
    1d1e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    1d22:	d3 94       	inc	r13
    1d24:	01 c0       	rjmp	.+2      	; 0x1d28 <ILI9486_Print_Char32x48+0x268>
    1d26:	d1 2c       	mov	r13, r1
    1d28:	bf e1       	ldi	r27, 0x1F	; 31
    1d2a:	bd 15       	cp	r27, r13
    1d2c:	08 f0       	brcs	.+2      	; 0x1d30 <ILI9486_Print_Char32x48+0x270>
    1d2e:	8e cf       	rjmp	.-228    	; 0x1c4c <ILI9486_Print_Char32x48+0x18c>
    1d30:	c3 94       	inc	r12
    1d32:	01 c0       	rjmp	.+2      	; 0x1d36 <ILI9486_Print_Char32x48+0x276>
    1d34:	c1 2c       	mov	r12, r1
    1d36:	e7 e0       	ldi	r30, 0x07	; 7
    1d38:	ec 15       	cp	r30, r12
    1d3a:	a8 f7       	brcc	.-22     	; 0x1d26 <ILI9486_Print_Char32x48+0x266>
    1d3c:	b3 94       	inc	r11
    1d3e:	f5 e0       	ldi	r31, 0x05	; 5
    1d40:	fb 15       	cp	r31, r11
    1d42:	c0 f7       	brcc	.-16     	; 0x1d34 <ILI9486_Print_Char32x48+0x274>
    1d44:	80 e0       	ldi	r24, 0x00	; 0
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	0e 94 35 19 	call	0x326a	; 0x326a <pf_mount>
    1d4c:	cd 5f       	subi	r28, 0xFD	; 253
    1d4e:	db 4f       	sbci	r29, 0xFB	; 251
    1d50:	0f b6       	in	r0, 0x3f	; 63
    1d52:	f8 94       	cli
    1d54:	de bf       	out	0x3e, r29	; 62
    1d56:	0f be       	out	0x3f, r0	; 63
    1d58:	cd bf       	out	0x3d, r28	; 61
    1d5a:	df 91       	pop	r29
    1d5c:	cf 91       	pop	r28
    1d5e:	1f 91       	pop	r17
    1d60:	0f 91       	pop	r16
    1d62:	ff 90       	pop	r15
    1d64:	ef 90       	pop	r14
    1d66:	df 90       	pop	r13
    1d68:	cf 90       	pop	r12
    1d6a:	bf 90       	pop	r11
    1d6c:	af 90       	pop	r10
    1d6e:	9f 90       	pop	r9
    1d70:	8f 90       	pop	r8
    1d72:	08 95       	ret

00001d74 <ILI9486_SetCursor>:
    1d74:	70 93 54 03 	sts	0x0354, r23	; 0x800354 <cursor_x+0x1>
    1d78:	60 93 53 03 	sts	0x0353, r22	; 0x800353 <cursor_x>
    1d7c:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <cursor_y+0x1>
    1d80:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <cursor_y>
    1d84:	08 95       	ret

00001d86 <ILI9486_Print_String18x32>:
}
void ILI9486_Print_String18x32(uint8_t *string,uint8_t TFT_STRING_MODE)
{
    1d86:	0f 93       	push	r16
    1d88:	1f 93       	push	r17
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	ec 01       	movw	r28, r24
    1d90:	06 2f       	mov	r16, r22
	uint8_t i=0;
    1d92:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t font_w=18;
	uint8_t font_h=32;

	while(*(string+i)!='\0')
    1d94:	5d c0       	rjmp	.+186    	; 0x1e50 <ILI9486_Print_String18x32+0xca>
	{

		if(*(string+i)==0)
    1d96:	22 23       	and	r18, r18
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <ILI9486_Print_String18x32+0x16>
    1d9a:	62 c0       	rjmp	.+196    	; 0x1e60 <ILI9486_Print_String18x32+0xda>
		{
			return;
		}

		if(*(string+i)=='\n')
    1d9c:	2a 30       	cpi	r18, 0x0A	; 10
    1d9e:	79 f4       	brne	.+30     	; 0x1dbe <ILI9486_Print_String18x32+0x38>
		{
			cursor_x+=font_h;
    1da0:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1da4:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1da8:	20 5e       	subi	r18, 0xE0	; 224
    1daa:	3f 4f       	sbci	r19, 0xFF	; 255
    1dac:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1db0:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
			cursor_y=0;
    1db4:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1db8:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
			string++;
    1dbc:	21 96       	adiw	r28, 0x01	; 1
		}

		if(cursor_y>X_SIZE-font_w)
    1dbe:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <X_SIZE>
    1dc2:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <X_SIZE+0x1>
    1dc6:	22 51       	subi	r18, 0x12	; 18
    1dc8:	31 09       	sbc	r19, r1
    1dca:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <cursor_y>
    1dce:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <cursor_y+0x1>
    1dd2:	24 17       	cp	r18, r20
    1dd4:	35 07       	cpc	r19, r21
    1dd6:	70 f4       	brcc	.+28     	; 0x1df4 <ILI9486_Print_String18x32+0x6e>
		{
			cursor_y=0;cursor_x+=font_h;
    1dd8:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1ddc:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1de0:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1de4:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1de8:	20 5e       	subi	r18, 0xE0	; 224
    1dea:	3f 4f       	sbci	r19, 0xFF	; 255
    1dec:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1df0:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
		}

		if(cursor_x>Y_SIZE-font_h)
    1df4:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
    1df8:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
    1dfc:	20 52       	subi	r18, 0x20	; 32
    1dfe:	31 09       	sbc	r19, r1
    1e00:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <cursor_x>
    1e04:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <cursor_x+0x1>
    1e08:	24 17       	cp	r18, r20
    1e0a:	35 07       	cpc	r19, r21
    1e0c:	40 f4       	brcc	.+16     	; 0x1e1e <ILI9486_Print_String18x32+0x98>
		{
			cursor_x=cursor_y=0;
    1e0e:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1e12:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1e16:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <cursor_x+0x1>
    1e1a:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <cursor_x>
		}

		ILI9486_Print_Char18x32(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
    1e1e:	fe 01       	movw	r30, r28
    1e20:	e8 0f       	add	r30, r24
    1e22:	f9 1f       	adc	r31, r25
    1e24:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <cursor_x>
    1e28:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <cursor_x+0x1>
    1e2c:	20 2f       	mov	r18, r16
    1e2e:	40 81       	ld	r20, Z
    1e30:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    1e34:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    1e38:	0e 94 bf 0a 	call	0x157e	; 0x157e <ILI9486_Print_Char18x32>
		cursor_y+=font_w;
    1e3c:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    1e40:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    1e44:	42 96       	adiw	r24, 0x12	; 18
    1e46:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <cursor_y+0x1>
    1e4a:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <cursor_y>
		i++;
    1e4e:	1f 5f       	subi	r17, 0xFF	; 255
{
	uint8_t i=0;
	uint8_t font_w=18;
	uint8_t font_h=32;

	while(*(string+i)!='\0')
    1e50:	81 2f       	mov	r24, r17
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	fe 01       	movw	r30, r28
    1e56:	e8 0f       	add	r30, r24
    1e58:	f9 1f       	adc	r31, r25
    1e5a:	20 81       	ld	r18, Z
    1e5c:	21 11       	cpse	r18, r1
    1e5e:	9b cf       	rjmp	.-202    	; 0x1d96 <ILI9486_Print_String18x32+0x10>

		ILI9486_Print_Char18x32(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
		cursor_y+=font_w;
		i++;
	}
}
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	08 95       	ret

00001e6a <ILI9486_Print_String24x32>:
void ILI9486_Print_String24x32(uint8_t *string,uint8_t TFT_STRING_MODE)
{
    1e6a:	0f 93       	push	r16
    1e6c:	1f 93       	push	r17
    1e6e:	cf 93       	push	r28
    1e70:	df 93       	push	r29
    1e72:	ec 01       	movw	r28, r24
    1e74:	06 2f       	mov	r16, r22
	uint8_t i=0;
    1e76:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t font_w=25;
	uint8_t font_h=25;

	while(*(string+i)!='\0')
    1e78:	5d c0       	rjmp	.+186    	; 0x1f34 <ILI9486_Print_String24x32+0xca>
	{

		if(*(string+i)==0)
    1e7a:	22 23       	and	r18, r18
    1e7c:	09 f4       	brne	.+2      	; 0x1e80 <ILI9486_Print_String24x32+0x16>
    1e7e:	62 c0       	rjmp	.+196    	; 0x1f44 <ILI9486_Print_String24x32+0xda>
		{
			return;
		}

		if(*(string+i)=='\n')
    1e80:	2a 30       	cpi	r18, 0x0A	; 10
    1e82:	79 f4       	brne	.+30     	; 0x1ea2 <ILI9486_Print_String24x32+0x38>
		{
			cursor_x+=font_h;
    1e84:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1e88:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1e8c:	27 5e       	subi	r18, 0xE7	; 231
    1e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e90:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1e94:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
			cursor_y=0;
    1e98:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1e9c:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
			string++;
    1ea0:	21 96       	adiw	r28, 0x01	; 1
		}

		if(cursor_y>X_SIZE-font_w)
    1ea2:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <X_SIZE>
    1ea6:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <X_SIZE+0x1>
    1eaa:	29 51       	subi	r18, 0x19	; 25
    1eac:	31 09       	sbc	r19, r1
    1eae:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <cursor_y>
    1eb2:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <cursor_y+0x1>
    1eb6:	24 17       	cp	r18, r20
    1eb8:	35 07       	cpc	r19, r21
    1eba:	70 f4       	brcc	.+28     	; 0x1ed8 <ILI9486_Print_String24x32+0x6e>
		{
			cursor_y=0;cursor_x+=font_h;
    1ebc:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1ec0:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1ec4:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1ec8:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1ecc:	27 5e       	subi	r18, 0xE7	; 231
    1ece:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed0:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1ed4:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
		}

		if(cursor_x>Y_SIZE-font_h)
    1ed8:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
    1edc:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
    1ee0:	29 51       	subi	r18, 0x19	; 25
    1ee2:	31 09       	sbc	r19, r1
    1ee4:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <cursor_x>
    1ee8:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <cursor_x+0x1>
    1eec:	24 17       	cp	r18, r20
    1eee:	35 07       	cpc	r19, r21
    1ef0:	40 f4       	brcc	.+16     	; 0x1f02 <ILI9486_Print_String24x32+0x98>
		{
			cursor_x=cursor_y=0;
    1ef2:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1ef6:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1efa:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <cursor_x+0x1>
    1efe:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <cursor_x>
		}

		ILI9486_Print_Char24x32(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
    1f02:	fe 01       	movw	r30, r28
    1f04:	e8 0f       	add	r30, r24
    1f06:	f9 1f       	adc	r31, r25
    1f08:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <cursor_x>
    1f0c:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <cursor_x+0x1>
    1f10:	20 2f       	mov	r18, r16
    1f12:	40 81       	ld	r20, Z
    1f14:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    1f18:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    1f1c:	0e 94 16 0c 	call	0x182c	; 0x182c <ILI9486_Print_Char24x32>
		cursor_y+=font_w;
    1f20:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    1f24:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    1f28:	49 96       	adiw	r24, 0x19	; 25
    1f2a:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <cursor_y+0x1>
    1f2e:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <cursor_y>
		i++;
    1f32:	1f 5f       	subi	r17, 0xFF	; 255
{
	uint8_t i=0;
	uint8_t font_w=25;
	uint8_t font_h=25;

	while(*(string+i)!='\0')
    1f34:	81 2f       	mov	r24, r17
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	fe 01       	movw	r30, r28
    1f3a:	e8 0f       	add	r30, r24
    1f3c:	f9 1f       	adc	r31, r25
    1f3e:	20 81       	ld	r18, Z
    1f40:	21 11       	cpse	r18, r1
    1f42:	9b cf       	rjmp	.-202    	; 0x1e7a <ILI9486_Print_String24x32+0x10>

		ILI9486_Print_Char24x32(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
		cursor_y+=font_w;
		i++;
	}
}
    1f44:	df 91       	pop	r29
    1f46:	cf 91       	pop	r28
    1f48:	1f 91       	pop	r17
    1f4a:	0f 91       	pop	r16
    1f4c:	08 95       	ret

00001f4e <ILI9486_Print_String32x48>:
void ILI9486_Print_String32x48(uint8_t *string,uint8_t TFT_STRING_MODE)
{
    1f4e:	0f 93       	push	r16
    1f50:	1f 93       	push	r17
    1f52:	cf 93       	push	r28
    1f54:	df 93       	push	r29
    1f56:	ec 01       	movw	r28, r24
    1f58:	06 2f       	mov	r16, r22
	uint8_t i=0;
    1f5a:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t font_w=30;
	uint8_t font_h=40;

	while(*(string+i)!='\0')
    1f5c:	5d c0       	rjmp	.+186    	; 0x2018 <ILI9486_Print_String32x48+0xca>
	{

		if(*(string+i)==0)
    1f5e:	22 23       	and	r18, r18
    1f60:	09 f4       	brne	.+2      	; 0x1f64 <ILI9486_Print_String32x48+0x16>
    1f62:	62 c0       	rjmp	.+196    	; 0x2028 <ILI9486_Print_String32x48+0xda>
		{
			return;
		}

		if(*(string+i)=='\n')
    1f64:	2a 30       	cpi	r18, 0x0A	; 10
    1f66:	79 f4       	brne	.+30     	; 0x1f86 <ILI9486_Print_String32x48+0x38>
		{
			cursor_x+=font_h;
    1f68:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1f6c:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1f70:	28 5d       	subi	r18, 0xD8	; 216
    1f72:	3f 4f       	sbci	r19, 0xFF	; 255
    1f74:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1f78:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
			cursor_y=0;
    1f7c:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1f80:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
			string++;
    1f84:	21 96       	adiw	r28, 0x01	; 1
		}

		if(cursor_y>X_SIZE-font_w)
    1f86:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <X_SIZE>
    1f8a:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <X_SIZE+0x1>
    1f8e:	2e 51       	subi	r18, 0x1E	; 30
    1f90:	31 09       	sbc	r19, r1
    1f92:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <cursor_y>
    1f96:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <cursor_y+0x1>
    1f9a:	24 17       	cp	r18, r20
    1f9c:	35 07       	cpc	r19, r21
    1f9e:	70 f4       	brcc	.+28     	; 0x1fbc <ILI9486_Print_String32x48+0x6e>
		{
			cursor_y=0;cursor_x+=font_h;
    1fa0:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1fa4:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1fa8:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    1fac:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    1fb0:	28 5d       	subi	r18, 0xD8	; 216
    1fb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb4:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    1fb8:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
		}

		if(cursor_x>Y_SIZE-font_h)
    1fbc:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
    1fc0:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
    1fc4:	28 52       	subi	r18, 0x28	; 40
    1fc6:	31 09       	sbc	r19, r1
    1fc8:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <cursor_x>
    1fcc:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <cursor_x+0x1>
    1fd0:	24 17       	cp	r18, r20
    1fd2:	35 07       	cpc	r19, r21
    1fd4:	40 f4       	brcc	.+16     	; 0x1fe6 <ILI9486_Print_String32x48+0x98>
		{
			cursor_x=cursor_y=0;
    1fd6:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    1fda:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    1fde:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <cursor_x+0x1>
    1fe2:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <cursor_x>
		}

		ILI9486_Print_Char32x48(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e8 0f       	add	r30, r24
    1fea:	f9 1f       	adc	r31, r25
    1fec:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <cursor_x>
    1ff0:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <cursor_x+0x1>
    1ff4:	20 2f       	mov	r18, r16
    1ff6:	40 81       	ld	r20, Z
    1ff8:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    1ffc:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    2000:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <ILI9486_Print_Char32x48>
		cursor_y+=font_w;
    2004:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    2008:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    200c:	4e 96       	adiw	r24, 0x1e	; 30
    200e:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <cursor_y+0x1>
    2012:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <cursor_y>
		i++;
    2016:	1f 5f       	subi	r17, 0xFF	; 255
{
	uint8_t i=0;
	uint8_t font_w=30;
	uint8_t font_h=40;

	while(*(string+i)!='\0')
    2018:	81 2f       	mov	r24, r17
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	fe 01       	movw	r30, r28
    201e:	e8 0f       	add	r30, r24
    2020:	f9 1f       	adc	r31, r25
    2022:	20 81       	ld	r18, Z
    2024:	21 11       	cpse	r18, r1
    2026:	9b cf       	rjmp	.-202    	; 0x1f5e <ILI9486_Print_String32x48+0x10>

		ILI9486_Print_Char32x48(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
		cursor_y+=font_w;
		i++;
	}
}
    2028:	df 91       	pop	r29
    202a:	cf 91       	pop	r28
    202c:	1f 91       	pop	r17
    202e:	0f 91       	pop	r16
    2030:	08 95       	ret

00002032 <ILI9486_Print_String14x24>:
void ILI9486_Print_String14x24(uint8_t *string,uint8_t TFT_STRING_MODE)
{
    2032:	0f 93       	push	r16
    2034:	1f 93       	push	r17
    2036:	cf 93       	push	r28
    2038:	df 93       	push	r29
    203a:	ec 01       	movw	r28, r24
    203c:	06 2f       	mov	r16, r22
	uint8_t i=0;
    203e:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t font_w=14;
	uint8_t font_h=24;

	while(*(string+i)!='\0')
    2040:	5d c0       	rjmp	.+186    	; 0x20fc <ILI9486_Print_String14x24+0xca>
	{

		if(*(string+i)==0)
    2042:	22 23       	and	r18, r18
    2044:	09 f4       	brne	.+2      	; 0x2048 <ILI9486_Print_String14x24+0x16>
    2046:	62 c0       	rjmp	.+196    	; 0x210c <ILI9486_Print_String14x24+0xda>
		{
			return;
		}

		if(*(string+i)=='\n')
    2048:	2a 30       	cpi	r18, 0x0A	; 10
    204a:	79 f4       	brne	.+30     	; 0x206a <ILI9486_Print_String14x24+0x38>
		{
			cursor_x+=font_h;
    204c:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    2050:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    2054:	28 5e       	subi	r18, 0xE8	; 232
    2056:	3f 4f       	sbci	r19, 0xFF	; 255
    2058:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    205c:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
			cursor_y=0;
    2060:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    2064:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
			string++;
    2068:	21 96       	adiw	r28, 0x01	; 1
		}

		if(cursor_y>X_SIZE-font_w)
    206a:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <X_SIZE>
    206e:	30 91 db 02 	lds	r19, 0x02DB	; 0x8002db <X_SIZE+0x1>
    2072:	2e 50       	subi	r18, 0x0E	; 14
    2074:	31 09       	sbc	r19, r1
    2076:	40 91 51 03 	lds	r20, 0x0351	; 0x800351 <cursor_y>
    207a:	50 91 52 03 	lds	r21, 0x0352	; 0x800352 <cursor_y+0x1>
    207e:	24 17       	cp	r18, r20
    2080:	35 07       	cpc	r19, r21
    2082:	70 f4       	brcc	.+28     	; 0x20a0 <ILI9486_Print_String14x24+0x6e>
		{
			cursor_y=0;cursor_x+=font_h;
    2084:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    2088:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    208c:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <cursor_x>
    2090:	30 91 54 03 	lds	r19, 0x0354	; 0x800354 <cursor_x+0x1>
    2094:	28 5e       	subi	r18, 0xE8	; 232
    2096:	3f 4f       	sbci	r19, 0xFF	; 255
    2098:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <cursor_x+0x1>
    209c:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <cursor_x>
		}

		if(cursor_x>Y_SIZE-font_h)
    20a0:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <__data_end>
    20a4:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <__data_end+0x1>
    20a8:	28 51       	subi	r18, 0x18	; 24
    20aa:	31 09       	sbc	r19, r1
    20ac:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <cursor_x>
    20b0:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <cursor_x+0x1>
    20b4:	24 17       	cp	r18, r20
    20b6:	35 07       	cpc	r19, r21
    20b8:	40 f4       	brcc	.+16     	; 0x20ca <ILI9486_Print_String14x24+0x98>
		{
			cursor_x=cursor_y=0;
    20ba:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <cursor_y+0x1>
    20be:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <cursor_y>
    20c2:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <cursor_x+0x1>
    20c6:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <cursor_x>
		}

		ILI9486_Print_Char14x24(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
    20ca:	fe 01       	movw	r30, r28
    20cc:	e8 0f       	add	r30, r24
    20ce:	f9 1f       	adc	r31, r25
    20d0:	60 91 53 03 	lds	r22, 0x0353	; 0x800353 <cursor_x>
    20d4:	70 91 54 03 	lds	r23, 0x0354	; 0x800354 <cursor_x+0x1>
    20d8:	20 2f       	mov	r18, r16
    20da:	40 81       	ld	r20, Z
    20dc:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    20e0:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    20e4:	0e 94 69 09 	call	0x12d2	; 0x12d2 <ILI9486_Print_Char14x24>
		cursor_y+=font_w;
    20e8:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <cursor_y>
    20ec:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <cursor_y+0x1>
    20f0:	0e 96       	adiw	r24, 0x0e	; 14
    20f2:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <cursor_y+0x1>
    20f6:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <cursor_y>
		i++;
    20fa:	1f 5f       	subi	r17, 0xFF	; 255
{
	uint8_t i=0;
	uint8_t font_w=14;
	uint8_t font_h=24;

	while(*(string+i)!='\0')
    20fc:	81 2f       	mov	r24, r17
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	fe 01       	movw	r30, r28
    2102:	e8 0f       	add	r30, r24
    2104:	f9 1f       	adc	r31, r25
    2106:	20 81       	ld	r18, Z
    2108:	21 11       	cpse	r18, r1
    210a:	9b cf       	rjmp	.-202    	; 0x2042 <ILI9486_Print_String14x24+0x10>

		ILI9486_Print_Char14x24(cursor_y,cursor_x,*(string+i),TFT_STRING_MODE);
		cursor_y+=font_w;
		i++;
	}
}
    210c:	df 91       	pop	r29
    210e:	cf 91       	pop	r28
    2110:	1f 91       	pop	r17
    2112:	0f 91       	pop	r16
    2114:	08 95       	ret

00002116 <timer1_ini>:
void IK_RX_interrupt_ini(void)
{
	//разрешим внешние прерывани€ INT1
	GICR |= (1<<INT1);
	//включим прерывани€ INT1 по нисход€щему фронту
	MCUCR |= (1<<ISC11);
    2116:	8e b5       	in	r24, 0x2e	; 46
    2118:	88 60       	ori	r24, 0x08	; 8
    211a:	8e bd       	out	0x2e, r24	; 46
    211c:	89 b7       	in	r24, 0x39	; 57
    211e:	80 61       	ori	r24, 0x10	; 16
    2120:	89 bf       	out	0x39, r24	; 57
    2122:	87 e0       	ldi	r24, 0x07	; 7
    2124:	8b bd       	out	0x2b, r24	; 43
    2126:	80 ed       	ldi	r24, 0xD0	; 208
    2128:	8a bd       	out	0x2a, r24	; 42
    212a:	8e b5       	in	r24, 0x2e	; 46
    212c:	82 60       	ori	r24, 0x02	; 2
    212e:	8e bd       	out	0x2e, r24	; 46
    2130:	08 95       	ret

00002132 <timer0_ini>:
    2132:	83 b7       	in	r24, 0x33	; 51
    2134:	88 60       	ori	r24, 0x08	; 8
    2136:	83 bf       	out	0x33, r24	; 51
    2138:	88 ec       	ldi	r24, 0xC8	; 200
    213a:	8c bf       	out	0x3c, r24	; 60
    213c:	83 b7       	in	r24, 0x33	; 51
    213e:	82 60       	ori	r24, 0x02	; 2
    2140:	83 bf       	out	0x33, r24	; 51
    2142:	89 b7       	in	r24, 0x39	; 57
    2144:	82 60       	ori	r24, 0x02	; 2
    2146:	89 bf       	out	0x39, r24	; 57
    2148:	08 95       	ret

0000214a <__vector_7>:
    214a:	1f 92       	push	r1
    214c:	0f 92       	push	r0
    214e:	0f b6       	in	r0, 0x3f	; 63
    2150:	0f 92       	push	r0
    2152:	11 24       	eor	r1, r1
    2154:	8f 93       	push	r24
    2156:	9f 93       	push	r25
    2158:	af 93       	push	r26
    215a:	bf 93       	push	r27
    215c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <millis>
    2160:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <millis+0x1>
    2164:	a0 91 de 02 	lds	r26, 0x02DE	; 0x8002de <millis+0x2>
    2168:	b0 91 df 02 	lds	r27, 0x02DF	; 0x8002df <millis+0x3>
    216c:	01 96       	adiw	r24, 0x01	; 1
    216e:	a1 1d       	adc	r26, r1
    2170:	b1 1d       	adc	r27, r1
    2172:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <millis>
    2176:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <millis+0x1>
    217a:	a0 93 de 02 	sts	0x02DE, r26	; 0x8002de <millis+0x2>
    217e:	b0 93 df 02 	sts	0x02DF, r27	; 0x8002df <millis+0x3>
    2182:	bf 91       	pop	r27
    2184:	af 91       	pop	r26
    2186:	9f 91       	pop	r25
    2188:	8f 91       	pop	r24
    218a:	0f 90       	pop	r0
    218c:	0f be       	out	0x3f, r0	; 63
    218e:	0f 90       	pop	r0
    2190:	1f 90       	pop	r1
    2192:	18 95       	reti

00002194 <__vector_10>:
    2194:	1f 92       	push	r1
    2196:	0f 92       	push	r0
    2198:	0f b6       	in	r0, 0x3f	; 63
    219a:	0f 92       	push	r0
    219c:	11 24       	eor	r1, r1
    219e:	cf 92       	push	r12
    21a0:	df 92       	push	r13
    21a2:	ef 92       	push	r14
    21a4:	ff 92       	push	r15
    21a6:	2f 93       	push	r18
    21a8:	3f 93       	push	r19
    21aa:	4f 93       	push	r20
    21ac:	5f 93       	push	r21
    21ae:	6f 93       	push	r22
    21b0:	7f 93       	push	r23
    21b2:	8f 93       	push	r24
    21b4:	9f 93       	push	r25
    21b6:	af 93       	push	r26
    21b8:	bf 93       	push	r27
    21ba:	83 99       	sbic	0x10, 3	; 16
    21bc:	ad c0       	rjmp	.+346    	; 0x2318 <__vector_10+0x184>
    21be:	13 be       	out	0x33, r1	; 51
    21c0:	83 9b       	sbis	0x10, 3	; 16
    21c2:	fe cf       	rjmp	.-4      	; 0x21c0 <__vector_10+0x2c>
    21c4:	83 99       	sbic	0x10, 3	; 16
    21c6:	fe cf       	rjmp	.-4      	; 0x21c4 <__vector_10+0x30>
    21c8:	40 e0       	ldi	r20, 0x00	; 0
    21ca:	50 e0       	ldi	r21, 0x00	; 0
    21cc:	4a c0       	rjmp	.+148    	; 0x2262 <__vector_10+0xce>
    21ce:	c0 90 dc 02 	lds	r12, 0x02DC	; 0x8002dc <millis>
    21d2:	d0 90 dd 02 	lds	r13, 0x02DD	; 0x8002dd <millis+0x1>
    21d6:	e0 90 de 02 	lds	r14, 0x02DE	; 0x8002de <millis+0x2>
    21da:	f0 90 df 02 	lds	r15, 0x02DF	; 0x8002df <millis+0x3>
    21de:	83 9b       	sbis	0x10, 3	; 16
    21e0:	fe cf       	rjmp	.-4      	; 0x21de <__vector_10+0x4a>
    21e2:	20 e0       	ldi	r18, 0x00	; 0
    21e4:	30 e0       	ldi	r19, 0x00	; 0
    21e6:	19 c0       	rjmp	.+50     	; 0x221a <__vector_10+0x86>
    21e8:	2f 5f       	subi	r18, 0xFF	; 255
    21ea:	3f 4f       	sbci	r19, 0xFF	; 255
    21ec:	8f e8       	ldi	r24, 0x8F	; 143
    21ee:	91 e0       	ldi	r25, 0x01	; 1
    21f0:	01 97       	sbiw	r24, 0x01	; 1
    21f2:	f1 f7       	brne	.-4      	; 0x21f0 <__vector_10+0x5c>
    21f4:	00 c0       	rjmp	.+0      	; 0x21f6 <__vector_10+0x62>
    21f6:	00 00       	nop
    21f8:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <millis>
    21fc:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <millis+0x1>
    2200:	a0 91 de 02 	lds	r26, 0x02DE	; 0x8002de <millis+0x2>
    2204:	b0 91 df 02 	lds	r27, 0x02DF	; 0x8002df <millis+0x3>
    2208:	8c 19       	sub	r24, r12
    220a:	9d 09       	sbc	r25, r13
    220c:	ae 09       	sbc	r26, r14
    220e:	bf 09       	sbc	r27, r15
    2210:	85 36       	cpi	r24, 0x65	; 101
    2212:	91 05       	cpc	r25, r1
    2214:	a1 05       	cpc	r26, r1
    2216:	b1 05       	cpc	r27, r1
    2218:	14 f4       	brge	.+4      	; 0x221e <__vector_10+0x8a>
    221a:	83 99       	sbic	0x10, 3	; 16
    221c:	e5 cf       	rjmp	.-54     	; 0x21e8 <__vector_10+0x54>
    221e:	2d 30       	cpi	r18, 0x0D	; 13
    2220:	31 05       	cpc	r19, r1
    2222:	74 f0       	brlt	.+28     	; 0x2240 <__vector_10+0xac>
    2224:	2f e1       	ldi	r18, 0x1F	; 31
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	24 1b       	sub	r18, r20
    222a:	35 0b       	sbc	r19, r21
    222c:	81 e0       	ldi	r24, 0x01	; 1
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	02 c0       	rjmp	.+4      	; 0x2236 <__vector_10+0xa2>
    2232:	88 0f       	add	r24, r24
    2234:	99 1f       	adc	r25, r25
    2236:	2a 95       	dec	r18
    2238:	e2 f7       	brpl	.-8      	; 0x2232 <__vector_10+0x9e>
    223a:	68 2b       	or	r22, r24
    223c:	79 2b       	or	r23, r25
    223e:	0f c0       	rjmp	.+30     	; 0x225e <__vector_10+0xca>
    2240:	2f e1       	ldi	r18, 0x1F	; 31
    2242:	30 e0       	ldi	r19, 0x00	; 0
    2244:	24 1b       	sub	r18, r20
    2246:	35 0b       	sbc	r19, r21
    2248:	81 e0       	ldi	r24, 0x01	; 1
    224a:	90 e0       	ldi	r25, 0x00	; 0
    224c:	02 c0       	rjmp	.+4      	; 0x2252 <__vector_10+0xbe>
    224e:	88 0f       	add	r24, r24
    2250:	99 1f       	adc	r25, r25
    2252:	2a 95       	dec	r18
    2254:	e2 f7       	brpl	.-8      	; 0x224e <__vector_10+0xba>
    2256:	80 95       	com	r24
    2258:	90 95       	com	r25
    225a:	68 23       	and	r22, r24
    225c:	79 23       	and	r23, r25
    225e:	4f 5f       	subi	r20, 0xFF	; 255
    2260:	5f 4f       	sbci	r21, 0xFF	; 255
    2262:	40 32       	cpi	r20, 0x20	; 32
    2264:	51 05       	cpc	r21, r1
    2266:	0c f4       	brge	.+2      	; 0x226a <__vector_10+0xd6>
    2268:	b2 cf       	rjmp	.-156    	; 0x21ce <__vector_10+0x3a>
    226a:	67 3c       	cpi	r22, 0xC7	; 199
    226c:	98 e3       	ldi	r25, 0x38	; 56
    226e:	79 07       	cpc	r23, r25
    2270:	41 f0       	breq	.+16     	; 0x2282 <__vector_10+0xee>
    2272:	65 3b       	cpi	r22, 0xB5	; 181
    2274:	2a e4       	ldi	r18, 0x4A	; 74
    2276:	72 07       	cpc	r23, r18
    2278:	29 f1       	breq	.+74     	; 0x22c4 <__vector_10+0x130>
    227a:	67 3e       	cpi	r22, 0xE7	; 231
    227c:	78 41       	sbci	r23, 0x18	; 24
    227e:	59 f5       	brne	.+86     	; 0x22d6 <__vector_10+0x142>
    2280:	16 c0       	rjmp	.+44     	; 0x22ae <__vector_10+0x11a>
    2282:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <menu_flag>
    2286:	81 11       	cpse	r24, r1
    2288:	04 c0       	rjmp	.+8      	; 0x2292 <__vector_10+0xfe>
    228a:	81 e0       	ldi	r24, 0x01	; 1
    228c:	80 93 59 03 	sts	0x0359, r24	; 0x800359 <menu_flag>
    2290:	22 c0       	rjmp	.+68     	; 0x22d6 <__vector_10+0x142>
    2292:	81 30       	cpi	r24, 0x01	; 1
    2294:	01 f5       	brne	.+64     	; 0x22d6 <__vector_10+0x142>
    2296:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up_down_count>
    229a:	83 78       	andi	r24, 0x83	; 131
    229c:	1c f4       	brge	.+6      	; 0x22a4 <__vector_10+0x110>
    229e:	81 50       	subi	r24, 0x01	; 1
    22a0:	8c 6f       	ori	r24, 0xFC	; 252
    22a2:	8f 5f       	subi	r24, 0xFF	; 255
    22a4:	81 11       	cpse	r24, r1
    22a6:	17 c0       	rjmp	.+46     	; 0x22d6 <__vector_10+0x142>
    22a8:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <menu_flag>
    22ac:	14 c0       	rjmp	.+40     	; 0x22d6 <__vector_10+0x142>
    22ae:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up_down_count>
    22b2:	81 50       	subi	r24, 0x01	; 1
    22b4:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <up_down_count>
    22b8:	88 23       	and	r24, r24
    22ba:	6c f4       	brge	.+26     	; 0x22d6 <__vector_10+0x142>
    22bc:	8f e0       	ldi	r24, 0x0F	; 15
    22be:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <up_down_count>
    22c2:	09 c0       	rjmp	.+18     	; 0x22d6 <__vector_10+0x142>
    22c4:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up_down_count>
    22c8:	8f 5f       	subi	r24, 0xFF	; 255
    22ca:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <up_down_count>
    22ce:	80 31       	cpi	r24, 0x10	; 16
    22d0:	14 f0       	brlt	.+4      	; 0x22d6 <__vector_10+0x142>
    22d2:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <up_down_count>
    22d6:	82 b3       	in	r24, 0x12	; 18
    22d8:	8f 77       	andi	r24, 0x7F	; 127
    22da:	82 bb       	out	0x12, r24	; 18
    22dc:	8f e9       	ldi	r24, 0x9F	; 159
    22de:	9f e0       	ldi	r25, 0x0F	; 15
    22e0:	01 97       	sbiw	r24, 0x01	; 1
    22e2:	f1 f7       	brne	.-4      	; 0x22e0 <__vector_10+0x14c>
    22e4:	00 c0       	rjmp	.+0      	; 0x22e6 <__vector_10+0x152>
    22e6:	00 00       	nop
    22e8:	82 b3       	in	r24, 0x12	; 18
    22ea:	80 68       	ori	r24, 0x80	; 128
    22ec:	82 bb       	out	0x12, r24	; 18
    22ee:	88 b3       	in	r24, 0x18	; 24
    22f0:	84 60       	ori	r24, 0x04	; 4
    22f2:	88 bb       	out	0x18, r24	; 24
    22f4:	9f ef       	ldi	r25, 0xFF	; 255
    22f6:	21 ee       	ldi	r18, 0xE1	; 225
    22f8:	84 e0       	ldi	r24, 0x04	; 4
    22fa:	91 50       	subi	r25, 0x01	; 1
    22fc:	20 40       	sbci	r18, 0x00	; 0
    22fe:	80 40       	sbci	r24, 0x00	; 0
    2300:	e1 f7       	brne	.-8      	; 0x22fa <__vector_10+0x166>
    2302:	00 c0       	rjmp	.+0      	; 0x2304 <__vector_10+0x170>
    2304:	00 00       	nop
    2306:	88 b3       	in	r24, 0x18	; 24
    2308:	8b 7f       	andi	r24, 0xFB	; 251
    230a:	88 bb       	out	0x18, r24	; 24
    230c:	83 b7       	in	r24, 0x33	; 51
    230e:	88 60       	ori	r24, 0x08	; 8
    2310:	83 bf       	out	0x33, r24	; 51
    2312:	83 b7       	in	r24, 0x33	; 51
    2314:	82 60       	ori	r24, 0x02	; 2
    2316:	83 bf       	out	0x33, r24	; 51
    2318:	bf 91       	pop	r27
    231a:	af 91       	pop	r26
    231c:	9f 91       	pop	r25
    231e:	8f 91       	pop	r24
    2320:	7f 91       	pop	r23
    2322:	6f 91       	pop	r22
    2324:	5f 91       	pop	r21
    2326:	4f 91       	pop	r20
    2328:	3f 91       	pop	r19
    232a:	2f 91       	pop	r18
    232c:	ff 90       	pop	r15
    232e:	ef 90       	pop	r14
    2330:	df 90       	pop	r13
    2332:	cf 90       	pop	r12
    2334:	0f 90       	pop	r0
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	0f 90       	pop	r0
    233a:	1f 90       	pop	r1
    233c:	18 95       	reti

0000233e <SPI_init>:
	}
}*/
//-------------------------------------------------------------
void SPI_init(void) //инициализаци€ SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
    233e:	87 b3       	in	r24, 0x17	; 23
    2340:	88 6b       	ori	r24, 0xB8	; 184
    2342:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
    2344:	88 b3       	in	r24, 0x18	; 24
    2346:	8f 74       	andi	r24, 0x4F	; 79
    2348:	88 bb       	out	0x18, r24	; 24
	HIGH_CSN;
    234a:	88 b3       	in	r24, 0x18	; 24
    234c:	80 61       	ori	r24, 0x10	; 16
    234e:	88 bb       	out	0x18, r24	; 24
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объ€вим ведущим
    2350:	80 e5       	ldi	r24, 0x50	; 80
    2352:	8d b9       	out	0x0d, r24	; 13
    2354:	08 95       	ret

00002356 <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализаци€ ножки IRQ дл€ внеш прерывани€
	DDRD &= ~(1<<IRQ);
    2356:	81 b3       	in	r24, 0x11	; 17
    2358:	8b 7f       	andi	r24, 0xFB	; 251
    235a:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1<<IRQ);
    235c:	82 b3       	in	r24, 0x12	; 18
    235e:	84 60       	ori	r24, 0x04	; 4
    2360:	82 bb       	out	0x12, r24	; 18
	//инициализаци€ портов дл€ светодиода
	DDRB |= (1 << LED);//led
    2362:	87 b3       	in	r24, 0x17	; 23
    2364:	84 60       	ori	r24, 0x04	; 4
    2366:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~ (1 << LED);
    2368:	88 b3       	in	r24, 0x18	; 24
    236a:	8b 7f       	andi	r24, 0xFB	; 251
    236c:	88 bb       	out	0x18, r24	; 24
	//инициализаци€ порта дл€ »  приемника дл€ внеш прерыв
	DDRD &= ~(1<<IK_RX);
    236e:	81 b3       	in	r24, 0x11	; 17
    2370:	87 7f       	andi	r24, 0xF7	; 247
    2372:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1<<IK_RX);
    2374:	82 b3       	in	r24, 0x12	; 18
    2376:	88 60       	ori	r24, 0x08	; 8
    2378:	82 bb       	out	0x12, r24	; 18
	//инициализаци€ портов дл€ пищалки
	DDRD |= (1 << BUZZER);
    237a:	81 b3       	in	r24, 0x11	; 17
    237c:	80 68       	ori	r24, 0x80	; 128
    237e:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1 << BUZZER);
    2380:	82 b3       	in	r24, 0x12	; 18
    2382:	80 68       	ori	r24, 0x80	; 128
    2384:	82 bb       	out	0x12, r24	; 18
	//инициализаци€ портов дл€ ILI9486
	DATA_PORT=0x00;
    2386:	1b ba       	out	0x1b, r1	; 27
	DATA_DDR=0xFF;//Ўина данных на выход
    2388:	8f ef       	ldi	r24, 0xFF	; 255
    238a:	8a bb       	out	0x1a, r24	; 26
	COMMAND_DDR |= ((1<<LCD_CS)|(1<<LCD_CD)|(1<<LCD_WR)|(1<<LCD_RD)|(1<<LCD_RESET));// омандные лапки также все на выход
    238c:	84 b3       	in	r24, 0x14	; 20
    238e:	88 6f       	ori	r24, 0xF8	; 248
    2390:	84 bb       	out	0x14, r24	; 20
	COMMAND_PORT &= ~((1<<LCD_CS)|(1<<LCD_CD)|(1<<LCD_WR)|(1<<LCD_RD)|(1<<LCD_RESET));
    2392:	85 b3       	in	r24, 0x15	; 21
    2394:	87 70       	andi	r24, 0x07	; 7
    2396:	85 bb       	out	0x15, r24	; 21
    2398:	08 95       	ret

0000239a <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // ѕередаЄт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
    239a:	8f b9       	out	0x0f, r24	; 15
	while (!(SPSR & (1 << SPIF)));
    239c:	77 9b       	sbis	0x0e, 7	; 14
    239e:	fe cf       	rjmp	.-4      	; 0x239c <spi_send_recv+0x2>
	return SPDR;
    23a0:	8f b1       	in	r24, 0x0f	; 15
}
    23a2:	08 95       	ret

000023a4 <main>:
{	
	uint8_t rx_count = 0;
	int32_t time1 = 0;
	int32_t time2 = 0;
	//настрока WDT
	WDTCR &= ~(1<<WDE);
    23a4:	81 b5       	in	r24, 0x21	; 33
    23a6:	87 7f       	andi	r24, 0xF7	; 247
    23a8:	81 bd       	out	0x21, r24	; 33
__attribute__ ((__always_inline__))
void wdt_enable (const uint8_t value)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
		__asm__ __volatile__ (
    23aa:	9f e0       	ldi	r25, 0x0F	; 15
    23ac:	88 e1       	ldi	r24, 0x18	; 24
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	f8 94       	cli
    23b2:	a8 95       	wdr
    23b4:	81 bd       	out	0x21, r24	; 33
    23b6:	0f be       	out	0x3f, r0	; 63
    23b8:	91 bd       	out	0x21, r25	; 33
	//включаем Watchdog на 2 с
	wdt_enable(WDTO_2S);
	port_init();
    23ba:	0e 94 ab 11 	call	0x2356	; 0x2356 <port_init>
	PORTB |= (1<<LED);
    23be:	88 b3       	in	r24, 0x18	; 24
    23c0:	84 60       	ori	r24, 0x04	; 4
    23c2:	88 bb       	out	0x18, r24	; 24
	//»нициализаци€ интерфейсов
	SPI_init();
    23c4:	0e 94 9f 11 	call	0x233e	; 0x233e <SPI_init>
	I2C_Init();
    23c8:	0e 94 03 1d 	call	0x3a06	; 0x3a06 <I2C_Init>
	USART_Init(8);    //»нициализаци€ модул€ USART скорость 115200	
    23cc:	88 e0       	ldi	r24, 0x08	; 8
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	0e 94 24 1d 	call	0x3a48	; 0x3a48 <USART_Init>
	ILI9486_ini();
    23d4:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <ILI9486_ini>
	//¬ывод приветстви€
	//Print_Hello_World();
	wdt_reset();
    23d8:	a8 95       	wdr
	//»нициализаци€ оборудовани€
	//NRF24_ini();
	RTC_init();
    23da:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <RTC_init>
	//dht22_init();
	//BMP180_Calibration();
	wdt_reset();
    23de:	a8 95       	wdr
	//_delay_ms(1500);
	// ”становка времени дл€ DS3231(делаетс€ 1 разv)
	//RTC_write_time(22, 17, 0);
	//RTC_write_date(1, 13, 3, 23);
	//¬ывод окна загрузки
	wdt_reset();
    23e0:	a8 95       	wdr
	//Print_Download();
	wdt_reset();
    23e2:	a8 95       	wdr
	PORTB &= ~(1<<LED);
    23e4:	88 b3       	in	r24, 0x18	; 24
    23e6:	8b 7f       	andi	r24, 0xFB	; 251
    23e8:	88 bb       	out	0x18, r24	; 24
	//»нициализаци€ таймеров и прерываний
	//timer2_ini();
	timer1_ini();
    23ea:	0e 94 8b 10 	call	0x2116	; 0x2116 <timer1_ini>
	timer0_ini();
    23ee:	0e 94 99 10 	call	0x2132	; 0x2132 <timer0_ini>
	//MCUCR |= (1<<ISC01) | (0<<ISC00);
	//GICR |= (1<<INT0);
	//enc_interrupt_ini();
	//IK_RX_interrupt_ini();
	//Ќачальна€ конфигураци€
	strcpy(temp_street_to_DB,"NULL");
    23f2:	85 e0       	ldi	r24, 0x05	; 5
    23f4:	eb e8       	ldi	r30, 0x8B	; 139
    23f6:	f0 e0       	ldi	r31, 0x00	; 0
    23f8:	ab e1       	ldi	r26, 0x1B	; 27
    23fa:	b3 e0       	ldi	r27, 0x03	; 3
    23fc:	01 90       	ld	r0, Z+
    23fe:	0d 92       	st	X+, r0
    2400:	8a 95       	dec	r24
    2402:	e1 f7       	brne	.-8      	; 0x23fc <main+0x58>
	strcpy(hum_street_to_DB,"NULL");
    2404:	85 e0       	ldi	r24, 0x05	; 5
    2406:	eb e8       	ldi	r30, 0x8B	; 139
    2408:	f0 e0       	ldi	r31, 0x00	; 0
    240a:	a6 e1       	ldi	r26, 0x16	; 22
    240c:	b3 e0       	ldi	r27, 0x03	; 3
    240e:	01 90       	ld	r0, Z+
    2410:	0d 92       	st	X+, r0
    2412:	8a 95       	dec	r24
    2414:	e1 f7       	brne	.-8      	; 0x240e <main+0x6a>
	strcpy(WIND_speed_to_DB,"NULL");
    2416:	85 e0       	ldi	r24, 0x05	; 5
    2418:	eb e8       	ldi	r30, 0x8B	; 139
    241a:	f0 e0       	ldi	r31, 0x00	; 0
    241c:	a1 e1       	ldi	r26, 0x11	; 17
    241e:	b3 e0       	ldi	r27, 0x03	; 3
    2420:	01 90       	ld	r0, Z+
    2422:	0d 92       	st	X+, r0
    2424:	8a 95       	dec	r24
    2426:	e1 f7       	brne	.-8      	; 0x2420 <main+0x7c>
	strcpy(wind_direction_to_DB,"NULL");
    2428:	85 e0       	ldi	r24, 0x05	; 5
    242a:	eb e8       	ldi	r30, 0x8B	; 139
    242c:	f0 e0       	ldi	r31, 0x00	; 0
    242e:	ab e0       	ldi	r26, 0x0B	; 11
    2430:	b3 e0       	ldi	r27, 0x03	; 3
    2432:	01 90       	ld	r0, Z+
    2434:	0d 92       	st	X+, r0
    2436:	8a 95       	dec	r24
    2438:	e1 f7       	brne	.-8      	; 0x2432 <main+0x8e>
	strcpy(Vbat_to_DB,"NULL");
    243a:	85 e0       	ldi	r24, 0x05	; 5
    243c:	eb e8       	ldi	r30, 0x8B	; 139
    243e:	f0 e0       	ldi	r31, 0x00	; 0
    2440:	a6 e0       	ldi	r26, 0x06	; 6
    2442:	b3 e0       	ldi	r27, 0x03	; 3
    2444:	01 90       	ld	r0, Z+
    2446:	0d 92       	st	X+, r0
    2448:	8a 95       	dec	r24
    244a:	e1 f7       	brne	.-8      	; 0x2444 <main+0xa0>
	strcpy(Rain_to_DB,"NULL");
    244c:	85 e0       	ldi	r24, 0x05	; 5
    244e:	eb e8       	ldi	r30, 0x8B	; 139
    2450:	f0 e0       	ldi	r31, 0x00	; 0
    2452:	a0 e0       	ldi	r26, 0x00	; 0
    2454:	b3 e0       	ldi	r27, 0x03	; 3
    2456:	01 90       	ld	r0, Z+
    2458:	0d 92       	st	X+, r0
    245a:	8a 95       	dec	r24
    245c:	e1 f7       	brne	.-8      	; 0x2456 <main+0xb2>
	temp_street[0] = '0';
    245e:	e7 e4       	ldi	r30, 0x47	; 71
    2460:	f3 e0       	ldi	r31, 0x03	; 3
    2462:	80 e3       	ldi	r24, 0x30	; 48
    2464:	80 83       	st	Z, r24
	temp_street[1] = '0';
    2466:	81 83       	std	Z+1, r24	; 0x01
	temp_street[2] = '.';
    2468:	9e e2       	ldi	r25, 0x2E	; 46
    246a:	92 83       	std	Z+2, r25	; 0x02
	temp_street[3] = '0';
    246c:	83 83       	std	Z+3, r24	; 0x03
	hum_street[0] = '0';
    246e:	e2 e4       	ldi	r30, 0x42	; 66
    2470:	f3 e0       	ldi	r31, 0x03	; 3
    2472:	80 83       	st	Z, r24
	hum_street[1] = '0';
    2474:	81 83       	std	Z+1, r24	; 0x01
	Vbat[0] = '0';
    2476:	ed e2       	ldi	r30, 0x2D	; 45
    2478:	f3 e0       	ldi	r31, 0x03	; 3
    247a:	80 83       	st	Z, r24
	Vbat[1] = '.';
    247c:	91 83       	std	Z+1, r25	; 0x01
	Vbat[2] = '0';
    247e:	82 83       	std	Z+2, r24	; 0x02
	Vbat[3] = '0';
    2480:	83 83       	std	Z+3, r24	; 0x03
	temp_home[0] = '0';
    2482:	ec e3       	ldi	r30, 0x3C	; 60
    2484:	f3 e0       	ldi	r31, 0x03	; 3
    2486:	80 83       	st	Z, r24
	temp_home[1] = '0';
    2488:	81 83       	std	Z+1, r24	; 0x01
	temp_home[2] = '.';
    248a:	92 83       	std	Z+2, r25	; 0x02
	temp_home[3] = '0';
    248c:	83 83       	std	Z+3, r24	; 0x03
	hum_home[0] = '0';
    248e:	e7 e3       	ldi	r30, 0x37	; 55
    2490:	f3 e0       	ldi	r31, 0x03	; 3
    2492:	80 83       	st	Z, r24
	hum_home[1] = '0';
    2494:	81 83       	std	Z+1, r24	; 0x01
	sprintf(WIND_speed,"0.00");
    2496:	95 e0       	ldi	r25, 0x05	; 5
    2498:	e2 ea       	ldi	r30, 0xA2	; 162
    249a:	f0 e0       	ldi	r31, 0x00	; 0
    249c:	a2 e3       	ldi	r26, 0x32	; 50
    249e:	b3 e0       	ldi	r27, 0x03	; 3
    24a0:	01 90       	ld	r0, Z+
    24a2:	0d 92       	st	X+, r0
    24a4:	9a 95       	dec	r25
    24a6:	e1 f7       	brne	.-8      	; 0x24a0 <main+0xfc>
	/*WIND_speed[0] = '0';
	WIND_speed[1] = '.';
	WIND_speed[2] = '0';
	WIND_speed[3] = '0';*/
	Press_home[0] = '0';
    24a8:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <Press_home>
	wind_direction[0] = '-';
    24ac:	8d e2       	ldi	r24, 0x2D	; 45
    24ae:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <wind_direction>
	Rain[0] = '-';
    24b2:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <Rain>
	//‘иксаци€ времени начала работы
	//Clock ();
	sprintf(start_time,"%s:%s:%s,%s/%s/%s", T_Param.hours, T_Param.minutes, T_Param.seconds, T_Param.mounthday, T_Param.Mounth, T_Param.Year);	
    24b6:	8c e9       	ldi	r24, 0x9C	; 156
    24b8:	93 e0       	ldi	r25, 0x03	; 3
    24ba:	9f 93       	push	r25
    24bc:	8f 93       	push	r24
    24be:	88 e9       	ldi	r24, 0x98	; 152
    24c0:	93 e0       	ldi	r25, 0x03	; 3
    24c2:	9f 93       	push	r25
    24c4:	8f 93       	push	r24
    24c6:	84 e9       	ldi	r24, 0x94	; 148
    24c8:	93 e0       	ldi	r25, 0x03	; 3
    24ca:	9f 93       	push	r25
    24cc:	8f 93       	push	r24
    24ce:	86 e8       	ldi	r24, 0x86	; 134
    24d0:	93 e0       	ldi	r25, 0x03	; 3
    24d2:	9f 93       	push	r25
    24d4:	8f 93       	push	r24
    24d6:	82 e8       	ldi	r24, 0x82	; 130
    24d8:	93 e0       	ldi	r25, 0x03	; 3
    24da:	9f 93       	push	r25
    24dc:	8f 93       	push	r24
    24de:	8e e7       	ldi	r24, 0x7E	; 126
    24e0:	93 e0       	ldi	r25, 0x03	; 3
    24e2:	9f 93       	push	r25
    24e4:	8f 93       	push	r24
    24e6:	80 e9       	ldi	r24, 0x90	; 144
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	9f 93       	push	r25
    24ec:	8f 93       	push	r24
    24ee:	81 ee       	ldi	r24, 0xE1	; 225
    24f0:	92 e0       	ldi	r25, 0x02	; 2
    24f2:	9f 93       	push	r25
    24f4:	8f 93       	push	r24
    24f6:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
	
	sprintf_HOME_Weath_Param();
    24fa:	0e 94 ea 2d 	call	0x5bd4	; 0x5bd4 <sprintf_HOME_Weath_Param>
	Print_Static_Home_Page();
    24fe:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <Print_Static_Home_Page>
	Print_Home_Page_Out();
    2502:	0e 94 92 28 	call	0x5124	; 0x5124 <Print_Home_Page_Out>
	Print_Home_Page_In();
    2506:	0e 94 4e 2c 	call	0x589c	; 0x589c <Print_Home_Page_In>
	HomePage_Flag = 0;
    250a:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <HomePage_Flag>
	MainMenuPage_Flag = 1;
    250e:	81 e0       	ldi	r24, 0x01	; 1
    2510:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <MainMenuPage_Flag>
	sei();
    2514:	78 94       	sei
    2516:	8d b7       	in	r24, 0x3d	; 61
    2518:	9e b7       	in	r25, 0x3e	; 62
    251a:	40 96       	adiw	r24, 0x10	; 16
    251c:	0f b6       	in	r0, 0x3f	; 63
    251e:	f8 94       	cli
    2520:	9e bf       	out	0x3e, r25	; 62
    2522:	0f be       	out	0x3f, r0	; 63
    2524:	8d bf       	out	0x3d, r24	; 61
    while (1) 
    {
		//прием данных от передатчика
		if (rx_flag == 1)
    2526:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <rx_flag>
    252a:	81 30       	cpi	r24, 0x01	; 1
    252c:	09 f4       	brne	.+2      	; 0x2530 <main+0x18c>
    252e:	ff cf       	rjmp	.-2      	; 0x252e <main+0x18a>
			_delay_ms(1000);
		}
		else
		{
			//отправка данных в Ѕƒ
			 if(millis >= 300000)
    2530:	c0 90 dc 02 	lds	r12, 0x02DC	; 0x8002dc <millis>
    2534:	d0 90 dd 02 	lds	r13, 0x02DD	; 0x8002dd <millis+0x1>
    2538:	e0 90 de 02 	lds	r14, 0x02DE	; 0x8002de <millis+0x2>
    253c:	f0 90 df 02 	lds	r15, 0x02DF	; 0x8002df <millis+0x3>
    2540:	90 ee       	ldi	r25, 0xE0	; 224
    2542:	c9 16       	cp	r12, r25
    2544:	93 e9       	ldi	r25, 0x93	; 147
    2546:	d9 06       	cpc	r13, r25
    2548:	94 e0       	ldi	r25, 0x04	; 4
    254a:	e9 06       	cpc	r14, r25
    254c:	f1 04       	cpc	r15, r1
    254e:	4c f0       	brlt	.+18     	; 0x2562 <main+0x1be>
				sprintf(send_time,"%d:%d:%d,%d/%d/%d", hour, min, sec, date, month, year);
				sprintf_HOME_Weath_Param();
				sprintf(DATA_TO_UART,"%s %s %s %s %s %s %s %s %s %s ", temp_street_to_DB, temp_home, hum_street_to_DB, hum_home, Press_home, Rain_to_DB, Vbat_to_DB, WIND_speed_to_DB, wind_direction_to_DB, send_time);
				USART_Transmit(DATA_TO_UART);
				memset(DATA_TO_UART, 0, sizeof(char) * strlen(DATA_TO_UART));//очистка массива*/
				millis = 0;
    2550:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <millis>
    2554:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <millis+0x1>
    2558:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <millis+0x2>
    255c:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <millis+0x3>
    2560:	42 c0       	rjmp	.+132    	; 0x25e6 <main+0x242>
			}
			//обновление домашних показаний
			else if ((millis % 1000) == 0)
    2562:	c7 01       	movw	r24, r14
    2564:	b6 01       	movw	r22, r12
    2566:	28 ee       	ldi	r18, 0xE8	; 232
    2568:	33 e0       	ldi	r19, 0x03	; 3
    256a:	40 e0       	ldi	r20, 0x00	; 0
    256c:	50 e0       	ldi	r21, 0x00	; 0
    256e:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    2572:	67 2b       	or	r22, r23
    2574:	68 2b       	or	r22, r24
    2576:	69 2b       	or	r22, r25
    2578:	b1 f1       	breq	.+108    	; 0x25e6 <main+0x242>
				//Print_Home_Page_In();
				//sprintf_HOME_Weath_Param();
				//Print_Home_Page();
			}
			//обновление изображени€ на дисплее
			else if((millis % 100) == 0)
    257a:	c7 01       	movw	r24, r14
    257c:	b6 01       	movw	r22, r12
    257e:	24 e6       	ldi	r18, 0x64	; 100
    2580:	30 e0       	ldi	r19, 0x00	; 0
    2582:	40 e0       	ldi	r20, 0x00	; 0
    2584:	50 e0       	ldi	r21, 0x00	; 0
    2586:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <__divmodsi4>
    258a:	67 2b       	or	r22, r23
    258c:	68 2b       	or	r22, r24
    258e:	69 2b       	or	r22, r25
    2590:	51 f5       	brne	.+84     	; 0x25e6 <main+0x242>
			{
				switch (menu_flag)
    2592:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <menu_flag>
    2596:	88 23       	and	r24, r24
    2598:	19 f0       	breq	.+6      	; 0x25a0 <main+0x1fc>
    259a:	81 30       	cpi	r24, 0x01	; 1
    259c:	a1 f0       	breq	.+40     	; 0x25c6 <main+0x222>
    259e:	23 c0       	rjmp	.+70     	; 0x25e6 <main+0x242>
				{
					case 0:	
					if (HomePage_Flag == 1)
    25a0:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <HomePage_Flag>
    25a4:	81 30       	cpi	r24, 0x01	; 1
    25a6:	61 f4       	brne	.+24     	; 0x25c0 <main+0x21c>
					{
						Print_Static_Home_Page();
    25a8:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <Print_Static_Home_Page>
						Print_Home_Page_Out();
    25ac:	0e 94 92 28 	call	0x5124	; 0x5124 <Print_Home_Page_Out>
						Print_Home_Page_In();
    25b0:	0e 94 4e 2c 	call	0x589c	; 0x589c <Print_Home_Page_In>
						HomePage_Flag = 0;
    25b4:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <HomePage_Flag>
						MainMenuPage_Flag = 1;
    25b8:	81 e0       	ldi	r24, 0x01	; 1
    25ba:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <MainMenuPage_Flag>
    25be:	13 c0       	rjmp	.+38     	; 0x25e6 <main+0x242>
					}
					else
					{
						Print_Home_Page_In();
    25c0:	0e 94 4e 2c 	call	0x589c	; 0x589c <Print_Home_Page_In>
    25c4:	10 c0       	rjmp	.+32     	; 0x25e6 <main+0x242>
					}
					break;
					case 1:	
					if (MainMenuPage_Flag == 1)
    25c6:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <MainMenuPage_Flag>
    25ca:	81 30       	cpi	r24, 0x01	; 1
    25cc:	51 f4       	brne	.+20     	; 0x25e2 <main+0x23e>
					{
						Print_Menu_Page_Static();
    25ce:	0e 94 02 22 	call	0x4404	; 0x4404 <Print_Menu_Page_Static>
						Print_Menu_Page();
    25d2:	0e 94 4d 22 	call	0x449a	; 0x449a <Print_Menu_Page>
						MainMenuPage_Flag = 0;
    25d6:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <MainMenuPage_Flag>
						HomePage_Flag = 1;
    25da:	81 e0       	ldi	r24, 0x01	; 1
    25dc:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <HomePage_Flag>
    25e0:	02 c0       	rjmp	.+4      	; 0x25e6 <main+0x242>
					}
					else
					{
						Print_Menu_Page();
    25e2:	0e 94 4d 22 	call	0x449a	; 0x449a <Print_Menu_Page>
					case 4:	Print_Page_Dop_Info();
					break;*/
				}
			}
		}
		wdt_reset();
    25e6:	a8 95       	wdr
    }
    25e8:	9e cf       	rjmp	.-196    	; 0x2526 <main+0x182>

000025ea <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    25ea:	20 e0       	ldi	r18, 0x00	; 0
    25ec:	12 c0       	rjmp	.+36     	; 0x2612 <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTD&=~_BV(SD_DI);
    25ee:	88 23       	and	r24, r24
    25f0:	24 f0       	brlt	.+8      	; 0x25fa <xmit_spi+0x10>
    25f2:	92 b3       	in	r25, 0x12	; 18
    25f4:	9f 7b       	andi	r25, 0xBF	; 191
    25f6:	92 bb       	out	0x12, r25	; 18
    25f8:	03 c0       	rjmp	.+6      	; 0x2600 <xmit_spi+0x16>
                     else PORTD|=_BV(SD_DI);
    25fa:	92 b3       	in	r25, 0x12	; 18
    25fc:	90 64       	ori	r25, 0x40	; 64
    25fe:	92 bb       	out	0x12, r25	; 18
   data=data<<1; 
    2600:	88 0f       	add	r24, r24
   PORTD|=_BV(SD_CLK);
    2602:	92 b3       	in	r25, 0x12	; 18
    2604:	90 62       	ori	r25, 0x20	; 32
    2606:	92 bb       	out	0x12, r25	; 18
   asm("nop"); 
    2608:	00 00       	nop
   PORTD&=~_BV(SD_CLK);
    260a:	92 b3       	in	r25, 0x12	; 18
    260c:	9f 7d       	andi	r25, 0xDF	; 223
    260e:	92 bb       	out	0x12, r25	; 18
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    2610:	2f 5f       	subi	r18, 0xFF	; 255
    2612:	28 30       	cpi	r18, 0x08	; 8
    2614:	60 f3       	brcs	.-40     	; 0x25ee <xmit_spi+0x4>
   data=data<<1; 
   PORTD|=_BV(SD_CLK);
   asm("nop"); 
   PORTD&=~_BV(SD_CLK);
  }
}
    2616:	08 95       	ret

00002618 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTD|=_BV(SD_DI);
    2618:	82 b3       	in	r24, 0x12	; 18
    261a:	80 64       	ori	r24, 0x40	; 64
    261c:	82 bb       	out	0x12, r24	; 18
   PORTD&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
    261e:	80 e0       	ldi	r24, 0x00	; 0

 PORTD|=_BV(SD_DI);

 for (i=0;i<8;i++)
    2620:	20 e0       	ldi	r18, 0x00	; 0
    2622:	0b c0       	rjmp	.+22     	; 0x263a <rcv_spi+0x22>
  {
   PORTD|=_BV(SD_CLK);
    2624:	92 b3       	in	r25, 0x12	; 18
    2626:	90 62       	ori	r25, 0x20	; 32
    2628:	92 bb       	out	0x12, r25	; 18
   res=res<<1;
    262a:	88 0f       	add	r24, r24
   if ((PIND&_BV(SD_DO))!=0x00) res=res|0x01;
    262c:	84 99       	sbic	0x10, 4	; 16
    262e:	81 60       	ori	r24, 0x01	; 1
   PORTD&=~_BV(SD_CLK);
    2630:	92 b3       	in	r25, 0x12	; 18
    2632:	9f 7d       	andi	r25, 0xDF	; 223
    2634:	92 bb       	out	0x12, r25	; 18
   asm("nop");
    2636:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTD|=_BV(SD_DI);

 for (i=0;i<8;i++)
    2638:	2f 5f       	subi	r18, 0xFF	; 255
    263a:	28 30       	cpi	r18, 0x08	; 8
    263c:	98 f3       	brcs	.-26     	; 0x2624 <rcv_spi+0xc>
   if ((PIND&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTD&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
    263e:	08 95       	ret

00002640 <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
    2640:	ff 92       	push	r15
    2642:	0f 93       	push	r16
    2644:	1f 93       	push	r17
    2646:	cf 93       	push	r28
    2648:	df 93       	push	r29
    264a:	c8 2f       	mov	r28, r24
    264c:	d4 2f       	mov	r29, r20
    264e:	15 2f       	mov	r17, r21
    2650:	06 2f       	mov	r16, r22
    2652:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
    2654:	88 23       	and	r24, r24
    2656:	4c f4       	brge	.+18     	; 0x266a <send_cmd+0x2a>
		cmd &= 0x7F;
    2658:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
    265a:	40 e0       	ldi	r20, 0x00	; 0
    265c:	50 e0       	ldi	r21, 0x00	; 0
    265e:	ba 01       	movw	r22, r20
    2660:	87 e7       	ldi	r24, 0x77	; 119
    2662:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
		if (res > 1) return res;
    2666:	82 30       	cpi	r24, 0x02	; 2
    2668:	50 f5       	brcc	.+84     	; 0x26be <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
    266a:	85 b3       	in	r24, 0x15	; 21
    266c:	84 60       	ori	r24, 0x04	; 4
    266e:	85 bb       	out	0x15, r24	; 21
	rcv_spi();
    2670:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
	SELECT();
    2674:	85 b3       	in	r24, 0x15	; 21
    2676:	8b 7f       	andi	r24, 0xFB	; 251
    2678:	85 bb       	out	0x15, r24	; 21
	rcv_spi();
    267a:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
    267e:	8c 2f       	mov	r24, r28
    2680:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
    2684:	8f 2d       	mov	r24, r15
    2686:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
    268a:	80 2f       	mov	r24, r16
    268c:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
    2690:	81 2f       	mov	r24, r17
    2692:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
    2696:	8d 2f       	mov	r24, r29
    2698:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    269c:	c0 34       	cpi	r28, 0x40	; 64
    269e:	11 f0       	breq	.+4      	; 0x26a4 <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	01 c0       	rjmp	.+2      	; 0x26a6 <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    26a4:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
    26a6:	c8 34       	cpi	r28, 0x48	; 72
    26a8:	09 f4       	brne	.+2      	; 0x26ac <send_cmd+0x6c>
    26aa:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
    26ac:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
    26b0:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
    26b2:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
	} while ((res & 0x80) && --n);
    26b6:	88 23       	and	r24, r24
    26b8:	14 f4       	brge	.+4      	; 0x26be <send_cmd+0x7e>
    26ba:	c1 50       	subi	r28, 0x01	; 1
    26bc:	d1 f7       	brne	.-12     	; 0x26b2 <send_cmd+0x72>

	return res;			// Return with the response value 
}
    26be:	df 91       	pop	r29
    26c0:	cf 91       	pop	r28
    26c2:	1f 91       	pop	r17
    26c4:	0f 91       	pop	r16
    26c6:	ff 90       	pop	r15
    26c8:	08 95       	ret

000026ca <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
    26ca:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    26ce:	08 95       	ret

000026d0 <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
    26d0:	cf 92       	push	r12
    26d2:	df 92       	push	r13
    26d4:	ef 92       	push	r14
    26d6:	ff 92       	push	r15
    26d8:	0f 93       	push	r16
    26da:	1f 93       	push	r17
    26dc:	cf 93       	push	r28
    26de:	df 93       	push	r29
    26e0:	7c 01       	movw	r14, r24
    26e2:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
    26e4:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <CardType>
    26e8:	83 fd       	sbrc	r24, 3
    26ea:	09 c0       	rjmp	.+18     	; 0x26fe <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
    26ec:	03 2e       	mov	r0, r19
    26ee:	39 e0       	ldi	r19, 0x09	; 9
    26f0:	44 0f       	add	r20, r20
    26f2:	55 1f       	adc	r21, r21
    26f4:	66 1f       	adc	r22, r22
    26f6:	77 1f       	adc	r23, r23
    26f8:	3a 95       	dec	r19
    26fa:	d1 f7       	brne	.-12     	; 0x26f0 <disk_readp+0x20>
    26fc:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
    26fe:	81 e5       	ldi	r24, 0x51	; 81
    2700:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    2704:	81 11       	cpse	r24, r1
    2706:	34 c0       	rjmp	.+104    	; 0x2770 <disk_readp+0xa0>
    2708:	c0 e3       	ldi	r28, 0x30	; 48
    270a:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
    270c:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
		} while (rc == 0xFF && --bc);
    2710:	8f 3f       	cpi	r24, 0xFF	; 255
    2712:	11 f4       	brne	.+4      	; 0x2718 <disk_readp+0x48>
    2714:	21 97       	sbiw	r28, 0x01	; 1
    2716:	d1 f7       	brne	.-12     	; 0x270c <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
    2718:	8e 3f       	cpi	r24, 0xFE	; 254
    271a:	61 f5       	brne	.+88     	; 0x2774 <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
    271c:	cc 27       	eor	r28, r28
    271e:	dd 27       	eor	r29, r29
    2720:	cc 19       	sub	r28, r12
    2722:	dd 09       	sbc	r29, r13
    2724:	c0 1b       	sub	r28, r16
    2726:	d1 0b       	sbc	r29, r17
    2728:	ce 5f       	subi	r28, 0xFE	; 254
    272a:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
    272c:	c1 14       	cp	r12, r1
    272e:	d1 04       	cpc	r13, r1
    2730:	31 f0       	breq	.+12     	; 0x273e <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
    2732:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	c8 1a       	sub	r12, r24
    273a:	d1 08       	sbc	r13, r1
    273c:	d1 f7       	brne	.-12     	; 0x2732 <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
    273e:	e1 14       	cp	r14, r1
    2740:	f1 04       	cpc	r15, r1
    2742:	69 f0       	breq	.+26     	; 0x275e <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
    2744:	67 01       	movw	r12, r14
    2746:	ef ef       	ldi	r30, 0xFF	; 255
    2748:	ce 1a       	sub	r12, r30
    274a:	de 0a       	sbc	r13, r30
    274c:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2750:	f7 01       	movw	r30, r14
    2752:	80 83       	st	Z, r24
				while (--cnt);
    2754:	01 50       	subi	r16, 0x01	; 1
    2756:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
    2758:	76 01       	movw	r14, r12
				while (--cnt);
    275a:	a1 f7       	brne	.-24     	; 0x2744 <disk_readp+0x74>
    275c:	03 c0       	rjmp	.+6      	; 0x2764 <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
    275e:	01 50       	subi	r16, 0x01	; 1
    2760:	11 09       	sbc	r17, r1
    2762:	e9 f7       	brne	.-6      	; 0x275e <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
    2764:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2768:	21 97       	sbiw	r28, 0x01	; 1
    276a:	e1 f7       	brne	.-8      	; 0x2764 <disk_readp+0x94>

			res = RES_OK;
    276c:	c0 e0       	ldi	r28, 0x00	; 0
    276e:	03 c0       	rjmp	.+6      	; 0x2776 <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
    2770:	c1 e0       	ldi	r28, 0x01	; 1
    2772:	01 c0       	rjmp	.+2      	; 0x2776 <disk_readp+0xa6>
    2774:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
    2776:	0e 94 65 13 	call	0x26ca	; 0x26ca <release_spi>

	return res;
}
    277a:	8c 2f       	mov	r24, r28
    277c:	df 91       	pop	r29
    277e:	cf 91       	pop	r28
    2780:	1f 91       	pop	r17
    2782:	0f 91       	pop	r16
    2784:	ff 90       	pop	r15
    2786:	ef 90       	pop	r14
    2788:	df 90       	pop	r13
    278a:	cf 90       	pop	r12
    278c:	08 95       	ret

0000278e <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
    278e:	0f 93       	push	r16
    2790:	1f 93       	push	r17
    2792:	cf 93       	push	r28
    2794:	df 93       	push	r29
    2796:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
    2798:	89 2b       	or	r24, r25
    279a:	f1 f0       	breq	.+60     	; 0x27d8 <disk_writep+0x4a>
		bc = (WORD)sa;
    279c:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
    279e:	11 c0       	rjmp	.+34     	; 0x27c2 <disk_writep+0x34>
			xmit_spi(*buff++);
    27a0:	8f 01       	movw	r16, r30
    27a2:	0f 5f       	subi	r16, 0xFF	; 255
    27a4:	1f 4f       	sbci	r17, 0xFF	; 255
    27a6:	80 81       	ld	r24, Z
    27a8:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
			wc--; bc--;
    27ac:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <wc.1709>
    27b0:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <wc.1709+0x1>
    27b4:	01 97       	sbiw	r24, 0x01	; 1
    27b6:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <wc.1709+0x1>
    27ba:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <wc.1709>
    27be:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
    27c0:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
    27c2:	20 97       	sbiw	r28, 0x00	; 0
    27c4:	09 f4       	brne	.+2      	; 0x27c8 <disk_writep+0x3a>
    27c6:	54 c0       	rjmp	.+168    	; 0x2870 <disk_writep+0xe2>
    27c8:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <wc.1709>
    27cc:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <wc.1709+0x1>
    27d0:	89 2b       	or	r24, r25
    27d2:	31 f7       	brne	.-52     	; 0x27a0 <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    27d4:	c0 e0       	ldi	r28, 0x00	; 0
    27d6:	4f c0       	rjmp	.+158    	; 0x2876 <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
    27d8:	41 15       	cp	r20, r1
    27da:	51 05       	cpc	r21, r1
    27dc:	61 05       	cpc	r22, r1
    27de:	71 05       	cpc	r23, r1
    27e0:	01 f1       	breq	.+64     	; 0x2822 <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
    27e2:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <CardType>
    27e6:	83 fd       	sbrc	r24, 3
    27e8:	09 c0       	rjmp	.+18     	; 0x27fc <disk_writep+0x6e>
    27ea:	03 2e       	mov	r0, r19
    27ec:	39 e0       	ldi	r19, 0x09	; 9
    27ee:	44 0f       	add	r20, r20
    27f0:	55 1f       	adc	r21, r21
    27f2:	66 1f       	adc	r22, r22
    27f4:	77 1f       	adc	r23, r23
    27f6:	3a 95       	dec	r19
    27f8:	d1 f7       	brne	.-12     	; 0x27ee <disk_writep+0x60>
    27fa:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
    27fc:	88 e5       	ldi	r24, 0x58	; 88
    27fe:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    2802:	81 11       	cpse	r24, r1
    2804:	37 c0       	rjmp	.+110    	; 0x2874 <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
    2806:	8f ef       	ldi	r24, 0xFF	; 255
    2808:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
    280c:	8e ef       	ldi	r24, 0xFE	; 254
    280e:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
				wc = 512;							// Set byte counter 
    2812:	80 e0       	ldi	r24, 0x00	; 0
    2814:	92 e0       	ldi	r25, 0x02	; 2
    2816:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <wc.1709+0x1>
    281a:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <wc.1709>
				res = RES_OK;
    281e:	c0 e0       	ldi	r28, 0x00	; 0
    2820:	2a c0       	rjmp	.+84     	; 0x2876 <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
    2822:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <wc.1709>
    2826:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <wc.1709+0x1>
    282a:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
    282c:	04 c0       	rjmp	.+8      	; 0x2836 <disk_writep+0xa8>
    282e:	80 e0       	ldi	r24, 0x00	; 0
    2830:	0e 94 f5 12 	call	0x25ea	; 0x25ea <xmit_spi>
    2834:	ce 01       	movw	r24, r28
    2836:	ec 01       	movw	r28, r24
    2838:	21 97       	sbiw	r28, 0x01	; 1
    283a:	89 2b       	or	r24, r25
    283c:	c1 f7       	brne	.-16     	; 0x282e <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    283e:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2842:	8f 71       	andi	r24, 0x1F	; 31
    2844:	85 30       	cpi	r24, 0x05	; 5
    2846:	21 f0       	breq	.+8      	; 0x2850 <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    2848:	c1 e0       	ldi	r28, 0x01	; 1
    284a:	0f c0       	rjmp	.+30     	; 0x286a <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    284c:	21 97       	sbiw	r28, 0x01	; 1
    284e:	02 c0       	rjmp	.+4      	; 0x2854 <disk_writep+0xc6>
    2850:	c8 ee       	ldi	r28, 0xE8	; 232
    2852:	dd ef       	ldi	r29, 0xFD	; 253
    2854:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2858:	8f 3f       	cpi	r24, 0xFF	; 255
    285a:	11 f0       	breq	.+4      	; 0x2860 <disk_writep+0xd2>
    285c:	20 97       	sbiw	r28, 0x00	; 0
    285e:	b1 f7       	brne	.-20     	; 0x284c <disk_writep+0xbe>
				if (bc) res = RES_OK;
    2860:	cd 2b       	or	r28, r29
    2862:	11 f4       	brne	.+4      	; 0x2868 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    2864:	c1 e0       	ldi	r28, 0x01	; 1
    2866:	01 c0       	rjmp	.+2      	; 0x286a <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    2868:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    286a:	0e 94 65 13 	call	0x26ca	; 0x26ca <release_spi>
    286e:	03 c0       	rjmp	.+6      	; 0x2876 <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    2870:	c0 e0       	ldi	r28, 0x00	; 0
    2872:	01 c0       	rjmp	.+2      	; 0x2876 <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    2874:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    2876:	8c 2f       	mov	r24, r28
    2878:	df 91       	pop	r29
    287a:	cf 91       	pop	r28
    287c:	1f 91       	pop	r17
    287e:	0f 91       	pop	r16
    2880:	08 95       	ret

00002882 <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    2882:	ef 92       	push	r14
    2884:	ff 92       	push	r15
    2886:	0f 93       	push	r16
    2888:	1f 93       	push	r17
    288a:	cf 93       	push	r28
    288c:	df 93       	push	r29
    288e:	00 d0       	rcall	.+0      	; 0x2890 <disk_initialize+0xe>
    2890:	00 d0       	rcall	.+0      	; 0x2892 <disk_initialize+0x10>
    2892:	cd b7       	in	r28, 0x3d	; 61
    2894:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    2896:	85 b3       	in	r24, 0x15	; 21
    2898:	84 60       	ori	r24, 0x04	; 4
    289a:	85 bb       	out	0x15, r24	; 21
    289c:	82 b3       	in	r24, 0x12	; 18
    289e:	80 65       	ori	r24, 0x50	; 80
    28a0:	82 bb       	out	0x12, r24	; 18
    28a2:	84 b3       	in	r24, 0x14	; 20
    28a4:	84 60       	ori	r24, 0x04	; 4
    28a6:	84 bb       	out	0x14, r24	; 20
    28a8:	81 b3       	in	r24, 0x11	; 17
    28aa:	80 66       	ori	r24, 0x60	; 96
    28ac:	81 bb       	out	0x11, r24	; 17

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    28ae:	aa 99       	sbic	0x15, 2	; 21
    28b0:	07 c0       	rjmp	.+14     	; 0x28c0 <disk_initialize+0x3e>
    28b2:	40 e0       	ldi	r20, 0x00	; 0
    28b4:	50 e0       	ldi	r21, 0x00	; 0
    28b6:	ba 01       	movw	r22, r20
    28b8:	80 e0       	ldi	r24, 0x00	; 0
    28ba:	90 e0       	ldi	r25, 0x00	; 0
    28bc:	0e 94 c7 13 	call	0x278e	; 0x278e <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    28c0:	14 e6       	ldi	r17, 0x64	; 100
    28c2:	03 c0       	rjmp	.+6      	; 0x28ca <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    28c4:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    28c8:	11 50       	subi	r17, 0x01	; 1
    28ca:	11 11       	cpse	r17, r1
    28cc:	fb cf       	rjmp	.-10     	; 0x28c4 <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    28ce:	40 e0       	ldi	r20, 0x00	; 0
    28d0:	50 e0       	ldi	r21, 0x00	; 0
    28d2:	ba 01       	movw	r22, r20
    28d4:	80 e4       	ldi	r24, 0x40	; 64
    28d6:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    28da:	81 30       	cpi	r24, 0x01	; 1
    28dc:	09 f0       	breq	.+2      	; 0x28e0 <disk_initialize+0x5e>
    28de:	8f c0       	rjmp	.+286    	; 0x29fe <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    28e0:	4a ea       	ldi	r20, 0xAA	; 170
    28e2:	51 e0       	ldi	r21, 0x01	; 1
    28e4:	60 e0       	ldi	r22, 0x00	; 0
    28e6:	70 e0       	ldi	r23, 0x00	; 0
    28e8:	88 e4       	ldi	r24, 0x48	; 72
    28ea:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    28ee:	81 30       	cpi	r24, 0x01	; 1
    28f0:	09 f0       	breq	.+2      	; 0x28f4 <disk_initialize+0x72>
    28f2:	53 c0       	rjmp	.+166    	; 0x299a <disk_initialize+0x118>
    28f4:	0d c0       	rjmp	.+26     	; 0x2910 <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    28f6:	e0 2e       	mov	r14, r16
    28f8:	f1 2c       	mov	r15, r1
    28fa:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    28fe:	e1 e0       	ldi	r30, 0x01	; 1
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	ec 0f       	add	r30, r28
    2904:	fd 1f       	adc	r31, r29
    2906:	ee 0d       	add	r30, r14
    2908:	ff 1d       	adc	r31, r15
    290a:	80 83       	st	Z, r24
    290c:	0f 5f       	subi	r16, 0xFF	; 255
    290e:	01 c0       	rjmp	.+2      	; 0x2912 <disk_initialize+0x90>
    2910:	01 2f       	mov	r16, r17
    2912:	04 30       	cpi	r16, 0x04	; 4
    2914:	80 f3       	brcs	.-32     	; 0x28f6 <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    2916:	8b 81       	ldd	r24, Y+3	; 0x03
    2918:	81 30       	cpi	r24, 0x01	; 1
    291a:	09 f0       	breq	.+2      	; 0x291e <disk_initialize+0x9c>
    291c:	72 c0       	rjmp	.+228    	; 0x2a02 <disk_initialize+0x180>
    291e:	8c 81       	ldd	r24, Y+4	; 0x04
    2920:	8a 3a       	cpi	r24, 0xAA	; 170
    2922:	31 f0       	breq	.+12     	; 0x2930 <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    2924:	f1 2c       	mov	r15, r1
    2926:	78 c0       	rjmp	.+240    	; 0x2a18 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    2928:	81 e0       	ldi	r24, 0x01	; 1
    292a:	e8 1a       	sub	r14, r24
    292c:	f1 08       	sbc	r15, r1
    292e:	06 c0       	rjmp	.+12     	; 0x293c <disk_initialize+0xba>
    2930:	0f 2e       	mov	r0, r31
    2932:	f0 ee       	ldi	r31, 0xE0	; 224
    2934:	ef 2e       	mov	r14, r31
    2936:	fe e2       	ldi	r31, 0x2E	; 46
    2938:	ff 2e       	mov	r15, r31
    293a:	f0 2d       	mov	r31, r0
    293c:	e1 14       	cp	r14, r1
    293e:	f1 04       	cpc	r15, r1
    2940:	49 f0       	breq	.+18     	; 0x2954 <disk_initialize+0xd2>
    2942:	40 e0       	ldi	r20, 0x00	; 0
    2944:	50 e0       	ldi	r21, 0x00	; 0
    2946:	60 e0       	ldi	r22, 0x00	; 0
    2948:	70 e4       	ldi	r23, 0x40	; 64
    294a:	89 ee       	ldi	r24, 0xE9	; 233
    294c:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    2950:	81 11       	cpse	r24, r1
    2952:	ea cf       	rjmp	.-44     	; 0x2928 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    2954:	ef 28       	or	r14, r15
    2956:	09 f4       	brne	.+2      	; 0x295a <disk_initialize+0xd8>
    2958:	56 c0       	rjmp	.+172    	; 0x2a06 <disk_initialize+0x184>
    295a:	40 e0       	ldi	r20, 0x00	; 0
    295c:	50 e0       	ldi	r21, 0x00	; 0
    295e:	ba 01       	movw	r22, r20
    2960:	8a e7       	ldi	r24, 0x7A	; 122
    2962:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    2966:	88 23       	and	r24, r24
    2968:	71 f0       	breq	.+28     	; 0x2986 <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    296a:	f1 2c       	mov	r15, r1
    296c:	55 c0       	rjmp	.+170    	; 0x2a18 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    296e:	e1 2e       	mov	r14, r17
    2970:	f1 2c       	mov	r15, r1
    2972:	0e 94 0c 13 	call	0x2618	; 0x2618 <rcv_spi>
    2976:	e1 e0       	ldi	r30, 0x01	; 1
    2978:	f0 e0       	ldi	r31, 0x00	; 0
    297a:	ec 0f       	add	r30, r28
    297c:	fd 1f       	adc	r31, r29
    297e:	ee 0d       	add	r30, r14
    2980:	ff 1d       	adc	r31, r15
    2982:	80 83       	st	Z, r24
    2984:	1f 5f       	subi	r17, 0xFF	; 255
    2986:	14 30       	cpi	r17, 0x04	; 4
    2988:	90 f3       	brcs	.-28     	; 0x296e <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    298a:	89 81       	ldd	r24, Y+1	; 0x01
    298c:	86 ff       	sbrs	r24, 6
    298e:	3d c0       	rjmp	.+122    	; 0x2a0a <disk_initialize+0x188>
    2990:	0f 2e       	mov	r0, r31
    2992:	fc e0       	ldi	r31, 0x0C	; 12
    2994:	ff 2e       	mov	r15, r31
    2996:	f0 2d       	mov	r31, r0
    2998:	3f c0       	rjmp	.+126    	; 0x2a18 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    299a:	40 e0       	ldi	r20, 0x00	; 0
    299c:	50 e0       	ldi	r21, 0x00	; 0
    299e:	ba 01       	movw	r22, r20
    29a0:	89 ee       	ldi	r24, 0xE9	; 233
    29a2:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    29a6:	82 30       	cpi	r24, 0x02	; 2
    29a8:	40 f4       	brcc	.+16     	; 0x29ba <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    29aa:	68 94       	set
    29ac:	ff 24       	eor	r15, r15
    29ae:	f1 f8       	bld	r15, 1
    29b0:	0f 2e       	mov	r0, r31
    29b2:	f9 ee       	ldi	r31, 0xE9	; 233
    29b4:	ef 2e       	mov	r14, r31
    29b6:	f0 2d       	mov	r31, r0
    29b8:	06 c0       	rjmp	.+12     	; 0x29c6 <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    29ba:	ff 24       	eor	r15, r15
    29bc:	f3 94       	inc	r15
    29be:	0f 2e       	mov	r0, r31
    29c0:	f1 e4       	ldi	r31, 0x41	; 65
    29c2:	ef 2e       	mov	r14, r31
    29c4:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    29c6:	08 ea       	ldi	r16, 0xA8	; 168
    29c8:	11 e6       	ldi	r17, 0x61	; 97
    29ca:	02 c0       	rjmp	.+4      	; 0x29d0 <disk_initialize+0x14e>
    29cc:	01 50       	subi	r16, 0x01	; 1
    29ce:	11 09       	sbc	r17, r1
    29d0:	01 15       	cp	r16, r1
    29d2:	11 05       	cpc	r17, r1
    29d4:	41 f0       	breq	.+16     	; 0x29e6 <disk_initialize+0x164>
    29d6:	40 e0       	ldi	r20, 0x00	; 0
    29d8:	50 e0       	ldi	r21, 0x00	; 0
    29da:	ba 01       	movw	r22, r20
    29dc:	8e 2d       	mov	r24, r14
    29de:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    29e2:	81 11       	cpse	r24, r1
    29e4:	f3 cf       	rjmp	.-26     	; 0x29cc <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    29e6:	01 2b       	or	r16, r17
    29e8:	a1 f0       	breq	.+40     	; 0x2a12 <disk_initialize+0x190>
    29ea:	40 e0       	ldi	r20, 0x00	; 0
    29ec:	52 e0       	ldi	r21, 0x02	; 2
    29ee:	60 e0       	ldi	r22, 0x00	; 0
    29f0:	70 e0       	ldi	r23, 0x00	; 0
    29f2:	80 e5       	ldi	r24, 0x50	; 80
    29f4:	0e 94 20 13 	call	0x2640	; 0x2640 <send_cmd>
    29f8:	81 11       	cpse	r24, r1
    29fa:	0d c0       	rjmp	.+26     	; 0x2a16 <disk_initialize+0x194>
    29fc:	0d c0       	rjmp	.+26     	; 0x2a18 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    29fe:	f1 2c       	mov	r15, r1
    2a00:	0b c0       	rjmp	.+22     	; 0x2a18 <disk_initialize+0x196>
    2a02:	f1 2c       	mov	r15, r1
    2a04:	09 c0       	rjmp	.+18     	; 0x2a18 <disk_initialize+0x196>
    2a06:	f1 2c       	mov	r15, r1
    2a08:	07 c0       	rjmp	.+14     	; 0x2a18 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    2a0a:	68 94       	set
    2a0c:	ff 24       	eor	r15, r15
    2a0e:	f2 f8       	bld	r15, 2
    2a10:	03 c0       	rjmp	.+6      	; 0x2a18 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    2a12:	f1 2c       	mov	r15, r1
    2a14:	01 c0       	rjmp	.+2      	; 0x2a18 <disk_initialize+0x196>
    2a16:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    2a18:	f0 92 f7 02 	sts	0x02F7, r15	; 0x8002f7 <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    2a1c:	0e 94 65 13 	call	0x26ca	; 0x26ca <release_spi>

	return ty ? 0 : STA_NOINIT;
    2a20:	81 e0       	ldi	r24, 0x01	; 1
    2a22:	f1 10       	cpse	r15, r1
    2a24:	80 e0       	ldi	r24, 0x00	; 0
}
    2a26:	0f 90       	pop	r0
    2a28:	0f 90       	pop	r0
    2a2a:	0f 90       	pop	r0
    2a2c:	0f 90       	pop	r0
    2a2e:	df 91       	pop	r29
    2a30:	cf 91       	pop	r28
    2a32:	1f 91       	pop	r17
    2a34:	0f 91       	pop	r16
    2a36:	ff 90       	pop	r15
    2a38:	ef 90       	pop	r14
    2a3a:	08 95       	ret

00002a3c <NRF24_Read_Buf>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    2a3c:	ef 92       	push	r14
    2a3e:	ff 92       	push	r15
    2a40:	0f 93       	push	r16
    2a42:	1f 93       	push	r17
    2a44:	cf 93       	push	r28
    2a46:	df 93       	push	r29
    2a48:	8b 01       	movw	r16, r22
    2a4a:	c4 2f       	mov	r28, r20
    2a4c:	98 b3       	in	r25, 0x18	; 24
    2a4e:	9f 7e       	andi	r25, 0xEF	; 239
    2a50:	98 bb       	out	0x18, r25	; 24
    2a52:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
    2a56:	0b c0       	rjmp	.+22     	; 0x2a6e <NRF24_Read_Buf+0x32>
    2a58:	78 01       	movw	r14, r16
    2a5a:	8f ef       	ldi	r24, 0xFF	; 255
    2a5c:	e8 1a       	sub	r14, r24
    2a5e:	f8 0a       	sbc	r15, r24
    2a60:	8f ef       	ldi	r24, 0xFF	; 255
    2a62:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
    2a66:	f8 01       	movw	r30, r16
    2a68:	80 83       	st	Z, r24
    2a6a:	cd 2f       	mov	r28, r29
    2a6c:	87 01       	movw	r16, r14
    2a6e:	df ef       	ldi	r29, 0xFF	; 255
    2a70:	dc 0f       	add	r29, r28
    2a72:	c1 11       	cpse	r28, r1
    2a74:	f1 cf       	rjmp	.-30     	; 0x2a58 <NRF24_Read_Buf+0x1c>
    2a76:	88 b3       	in	r24, 0x18	; 24
    2a78:	80 61       	ori	r24, 0x10	; 16
    2a7a:	88 bb       	out	0x18, r24	; 24
    2a7c:	df 91       	pop	r29
    2a7e:	cf 91       	pop	r28
    2a80:	1f 91       	pop	r17
    2a82:	0f 91       	pop	r16
    2a84:	ff 90       	pop	r15
    2a86:	ef 90       	pop	r14
    2a88:	08 95       	ret

00002a8a <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    2a8a:	cf 93       	push	r28
    2a8c:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
	LOW_CSN;
    2a8e:	98 b3       	in	r25, 0x18	; 24
    2a90:	9f 7e       	andi	r25, 0xEF	; 239
    2a92:	98 bb       	out	0x18, r25	; 24
	spi_send_recv(reg);
    2a94:	80 62       	ori	r24, 0x20	; 32
    2a96:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
	spi_send_recv(data_out);
    2a9a:	8c 2f       	mov	r24, r28
    2a9c:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
	HIGH_CSN;
    2aa0:	88 b3       	in	r24, 0x18	; 24
    2aa2:	80 61       	ori	r24, 0x10	; 16
    2aa4:	88 bb       	out	0x18, r24	; 24
}
    2aa6:	cf 91       	pop	r28
    2aa8:	08 95       	ret

00002aaa <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    2aaa:	cf 93       	push	r28
    2aac:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    2aae:	88 b3       	in	r24, 0x18	; 24
    2ab0:	8f 7e       	andi	r24, 0xEF	; 239
    2ab2:	88 bb       	out	0x18, r24	; 24
	data_in = spi_send_recv(reg);
    2ab4:	8c 2f       	mov	r24, r28
    2ab6:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
	if(reg != STATUS)
    2aba:	c7 30       	cpi	r28, 0x07	; 7
    2abc:	19 f0       	breq	.+6      	; 0x2ac4 <nRF_read_register+0x1a>
	{
		data_in = spi_send_recv(NOP);
    2abe:	8f ef       	ldi	r24, 0xFF	; 255
    2ac0:	0e 94 cd 11 	call	0x239a	; 0x239a <spi_send_recv>
	}
	HIGH_CSN;
    2ac4:	98 b3       	in	r25, 0x18	; 24
    2ac6:	90 61       	ori	r25, 0x10	; 16
    2ac8:	98 bb       	out	0x18, r25	; 24
	return data_in;
}
    2aca:	cf 91       	pop	r28
    2acc:	08 95       	ret

00002ace <__vector_1>:
		rx_flag = 0;
	}
}
//-------------------------------------------------------------
ISR(INT0_vect)
{
    2ace:	1f 92       	push	r1
    2ad0:	0f 92       	push	r0
    2ad2:	0f b6       	in	r0, 0x3f	; 63
    2ad4:	0f 92       	push	r0
    2ad6:	11 24       	eor	r1, r1
    2ad8:	2f 93       	push	r18
    2ada:	3f 93       	push	r19
    2adc:	4f 93       	push	r20
    2ade:	5f 93       	push	r21
    2ae0:	6f 93       	push	r22
    2ae2:	7f 93       	push	r23
    2ae4:	8f 93       	push	r24
    2ae6:	9f 93       	push	r25
    2ae8:	af 93       	push	r26
    2aea:	bf 93       	push	r27
    2aec:	ef 93       	push	r30
    2aee:	ff 93       	push	r31
	uint8_t status=0x01;
	status = nRF_read_register(STATUS);
    2af0:	87 e0       	ldi	r24, 0x07	; 7
    2af2:	0e 94 55 15 	call	0x2aaa	; 0x2aaa <nRF_read_register>
	if(status & 0x40)
    2af6:	86 ff       	sbrs	r24, 6
    2af8:	0a c0       	rjmp	.+20     	; 0x2b0e <__vector_1+0x40>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    2afa:	45 e0       	ldi	r20, 0x05	; 5
    2afc:	69 ef       	ldi	r22, 0xF9	; 249
    2afe:	72 e0       	ldi	r23, 0x02	; 2
    2b00:	81 e6       	ldi	r24, 0x61	; 97
    2b02:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    2b06:	60 e4       	ldi	r22, 0x40	; 64
    2b08:	87 e0       	ldi	r24, 0x07	; 7
    2b0a:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <nRF_write_register>
	}
	 if(receive_counter == 6)
    2b0e:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <receive_counter>
    2b12:	86 30       	cpi	r24, 0x06	; 6
    2b14:	11 f4       	brne	.+4      	; 0x2b1a <__vector_1+0x4c>
	 {
		 receive_counter = 0;
    2b16:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <receive_counter>
	 }
	 rx_flag = 1;
    2b1a:	81 e0       	ldi	r24, 0x01	; 1
    2b1c:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <rx_flag>
}
    2b20:	ff 91       	pop	r31
    2b22:	ef 91       	pop	r30
    2b24:	bf 91       	pop	r27
    2b26:	af 91       	pop	r26
    2b28:	9f 91       	pop	r25
    2b2a:	8f 91       	pop	r24
    2b2c:	7f 91       	pop	r23
    2b2e:	6f 91       	pop	r22
    2b30:	5f 91       	pop	r21
    2b32:	4f 91       	pop	r20
    2b34:	3f 91       	pop	r19
    2b36:	2f 91       	pop	r18
    2b38:	0f 90       	pop	r0
    2b3a:	0f be       	out	0x3f, r0	; 63
    2b3c:	0f 90       	pop	r0
    2b3e:	1f 90       	pop	r1
    2b40:	18 95       	reti

00002b42 <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    2b42:	fc 01       	movw	r30, r24
    2b44:	03 c0       	rjmp	.+6      	; 0x2b4c <mem_set+0xa>
    2b46:	60 83       	st	Z, r22
    2b48:	ac 01       	movw	r20, r24
    2b4a:	31 96       	adiw	r30, 0x01	; 1
    2b4c:	ca 01       	movw	r24, r20
    2b4e:	01 97       	sbiw	r24, 0x01	; 1
    2b50:	45 2b       	or	r20, r21
    2b52:	c9 f7       	brne	.-14     	; 0x2b46 <mem_set+0x4>
    2b54:	08 95       	ret

00002b56 <mem_cmp>:
    2b56:	cf 93       	push	r28
    2b58:	df 93       	push	r29
    2b5a:	dc 01       	movw	r26, r24
    2b5c:	fb 01       	movw	r30, r22
    2b5e:	80 e0       	ldi	r24, 0x00	; 0
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	02 c0       	rjmp	.+4      	; 0x2b68 <mem_cmp+0x12>
    2b64:	fb 01       	movw	r30, r22
    2b66:	de 01       	movw	r26, r28
    2b68:	9a 01       	movw	r18, r20
    2b6a:	21 50       	subi	r18, 0x01	; 1
    2b6c:	31 09       	sbc	r19, r1
    2b6e:	45 2b       	or	r20, r21
    2b70:	61 f0       	breq	.+24     	; 0x2b8a <mem_cmp+0x34>
    2b72:	ed 01       	movw	r28, r26
    2b74:	21 96       	adiw	r28, 0x01	; 1
    2b76:	8c 91       	ld	r24, X
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	bf 01       	movw	r22, r30
    2b7c:	6f 5f       	subi	r22, 0xFF	; 255
    2b7e:	7f 4f       	sbci	r23, 0xFF	; 255
    2b80:	40 81       	ld	r20, Z
    2b82:	84 1b       	sub	r24, r20
    2b84:	91 09       	sbc	r25, r1
    2b86:	a9 01       	movw	r20, r18
    2b88:	69 f3       	breq	.-38     	; 0x2b64 <mem_cmp+0xe>
    2b8a:	df 91       	pop	r29
    2b8c:	cf 91       	pop	r28
    2b8e:	08 95       	ret

00002b90 <clust2sect>:
    2b90:	0f 93       	push	r16
    2b92:	1f 93       	push	r17
    2b94:	e0 91 fe 02 	lds	r30, 0x02FE	; 0x8002fe <FatFs>
    2b98:	f0 91 ff 02 	lds	r31, 0x02FF	; 0x8002ff <FatFs+0x1>
    2b9c:	9b 01       	movw	r18, r22
    2b9e:	ac 01       	movw	r20, r24
    2ba0:	22 50       	subi	r18, 0x02	; 2
    2ba2:	31 09       	sbc	r19, r1
    2ba4:	41 09       	sbc	r20, r1
    2ba6:	51 09       	sbc	r21, r1
    2ba8:	80 85       	ldd	r24, Z+8	; 0x08
    2baa:	91 85       	ldd	r25, Z+9	; 0x09
    2bac:	a2 85       	ldd	r26, Z+10	; 0x0a
    2bae:	b3 85       	ldd	r27, Z+11	; 0x0b
    2bb0:	02 97       	sbiw	r24, 0x02	; 2
    2bb2:	a1 09       	sbc	r26, r1
    2bb4:	b1 09       	sbc	r27, r1
    2bb6:	28 17       	cp	r18, r24
    2bb8:	39 07       	cpc	r19, r25
    2bba:	4a 07       	cpc	r20, r26
    2bbc:	5b 07       	cpc	r21, r27
    2bbe:	68 f4       	brcc	.+26     	; 0x2bda <clust2sect+0x4a>
    2bc0:	a1 81       	ldd	r26, Z+1	; 0x01
    2bc2:	b0 e0       	ldi	r27, 0x00	; 0
    2bc4:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <__muluhisi3>
    2bc8:	04 89       	ldd	r16, Z+20	; 0x14
    2bca:	15 89       	ldd	r17, Z+21	; 0x15
    2bcc:	26 89       	ldd	r18, Z+22	; 0x16
    2bce:	37 89       	ldd	r19, Z+23	; 0x17
    2bd0:	60 0f       	add	r22, r16
    2bd2:	71 1f       	adc	r23, r17
    2bd4:	82 1f       	adc	r24, r18
    2bd6:	93 1f       	adc	r25, r19
    2bd8:	03 c0       	rjmp	.+6      	; 0x2be0 <clust2sect+0x50>
    2bda:	60 e0       	ldi	r22, 0x00	; 0
    2bdc:	70 e0       	ldi	r23, 0x00	; 0
    2bde:	cb 01       	movw	r24, r22
    2be0:	1f 91       	pop	r17
    2be2:	0f 91       	pop	r16
    2be4:	08 95       	ret

00002be6 <dir_rewind>:
    2be6:	0f 93       	push	r16
    2be8:	1f 93       	push	r17
    2bea:	cf 93       	push	r28
    2bec:	df 93       	push	r29
    2bee:	fc 01       	movw	r30, r24
    2bf0:	a0 91 fe 02 	lds	r26, 0x02FE	; 0x8002fe <FatFs>
    2bf4:	b0 91 ff 02 	lds	r27, 0x02FF	; 0x8002ff <FatFs+0x1>
    2bf8:	11 82       	std	Z+1, r1	; 0x01
    2bfa:	10 82       	st	Z, r1
    2bfc:	64 81       	ldd	r22, Z+4	; 0x04
    2bfe:	75 81       	ldd	r23, Z+5	; 0x05
    2c00:	86 81       	ldd	r24, Z+6	; 0x06
    2c02:	97 81       	ldd	r25, Z+7	; 0x07
    2c04:	61 30       	cpi	r22, 0x01	; 1
    2c06:	71 05       	cpc	r23, r1
    2c08:	81 05       	cpc	r24, r1
    2c0a:	91 05       	cpc	r25, r1
    2c0c:	91 f1       	breq	.+100    	; 0x2c72 <dir_rewind+0x8c>
    2c0e:	18 96       	adiw	r26, 0x08	; 8
    2c10:	0d 91       	ld	r16, X+
    2c12:	1d 91       	ld	r17, X+
    2c14:	2d 91       	ld	r18, X+
    2c16:	3c 91       	ld	r19, X
    2c18:	1b 97       	sbiw	r26, 0x0b	; 11
    2c1a:	60 17       	cp	r22, r16
    2c1c:	71 07       	cpc	r23, r17
    2c1e:	82 07       	cpc	r24, r18
    2c20:	93 07       	cpc	r25, r19
    2c22:	48 f5       	brcc	.+82     	; 0x2c76 <dir_rewind+0x90>
    2c24:	61 15       	cp	r22, r1
    2c26:	71 05       	cpc	r23, r1
    2c28:	81 05       	cpc	r24, r1
    2c2a:	91 05       	cpc	r25, r1
    2c2c:	49 f4       	brne	.+18     	; 0x2c40 <dir_rewind+0x5a>
    2c2e:	2c 91       	ld	r18, X
    2c30:	23 30       	cpi	r18, 0x03	; 3
    2c32:	31 f4       	brne	.+12     	; 0x2c40 <dir_rewind+0x5a>
    2c34:	50 96       	adiw	r26, 0x10	; 16
    2c36:	6d 91       	ld	r22, X+
    2c38:	7d 91       	ld	r23, X+
    2c3a:	8d 91       	ld	r24, X+
    2c3c:	9c 91       	ld	r25, X
    2c3e:	53 97       	sbiw	r26, 0x13	; 19
    2c40:	ef 01       	movw	r28, r30
    2c42:	60 87       	std	Z+8, r22	; 0x08
    2c44:	71 87       	std	Z+9, r23	; 0x09
    2c46:	82 87       	std	Z+10, r24	; 0x0a
    2c48:	93 87       	std	Z+11, r25	; 0x0b
    2c4a:	61 15       	cp	r22, r1
    2c4c:	71 05       	cpc	r23, r1
    2c4e:	81 05       	cpc	r24, r1
    2c50:	91 05       	cpc	r25, r1
    2c52:	19 f0       	breq	.+6      	; 0x2c5a <dir_rewind+0x74>
    2c54:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <clust2sect>
    2c58:	06 c0       	rjmp	.+12     	; 0x2c66 <dir_rewind+0x80>
    2c5a:	50 96       	adiw	r26, 0x10	; 16
    2c5c:	6d 91       	ld	r22, X+
    2c5e:	7d 91       	ld	r23, X+
    2c60:	8d 91       	ld	r24, X+
    2c62:	9c 91       	ld	r25, X
    2c64:	53 97       	sbiw	r26, 0x13	; 19
    2c66:	6c 87       	std	Y+12, r22	; 0x0c
    2c68:	7d 87       	std	Y+13, r23	; 0x0d
    2c6a:	8e 87       	std	Y+14, r24	; 0x0e
    2c6c:	9f 87       	std	Y+15, r25	; 0x0f
    2c6e:	80 e0       	ldi	r24, 0x00	; 0
    2c70:	03 c0       	rjmp	.+6      	; 0x2c78 <dir_rewind+0x92>
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	01 c0       	rjmp	.+2      	; 0x2c78 <dir_rewind+0x92>
    2c76:	81 e0       	ldi	r24, 0x01	; 1
    2c78:	df 91       	pop	r29
    2c7a:	cf 91       	pop	r28
    2c7c:	1f 91       	pop	r17
    2c7e:	0f 91       	pop	r16
    2c80:	08 95       	ret

00002c82 <create_name>:
    2c82:	0f 93       	push	r16
    2c84:	1f 93       	push	r17
    2c86:	cf 93       	push	r28
    2c88:	df 93       	push	r29
    2c8a:	eb 01       	movw	r28, r22
    2c8c:	fc 01       	movw	r30, r24
    2c8e:	02 81       	ldd	r16, Z+2	; 0x02
    2c90:	13 81       	ldd	r17, Z+3	; 0x03
    2c92:	4b e0       	ldi	r20, 0x0B	; 11
    2c94:	50 e0       	ldi	r21, 0x00	; 0
    2c96:	60 e2       	ldi	r22, 0x20	; 32
    2c98:	70 e0       	ldi	r23, 0x00	; 0
    2c9a:	c8 01       	movw	r24, r16
    2c9c:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <mem_set>
    2ca0:	28 81       	ld	r18, Y
    2ca2:	39 81       	ldd	r19, Y+1	; 0x01
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	80 e0       	ldi	r24, 0x00	; 0
    2ca8:	58 e0       	ldi	r21, 0x08	; 8
    2caa:	01 c0       	rjmp	.+2      	; 0x2cae <create_name+0x2c>
    2cac:	84 2f       	mov	r24, r20
    2cae:	41 e0       	ldi	r20, 0x01	; 1
    2cb0:	48 0f       	add	r20, r24
    2cb2:	f9 01       	movw	r30, r18
    2cb4:	e8 0f       	add	r30, r24
    2cb6:	f1 1d       	adc	r31, r1
    2cb8:	80 81       	ld	r24, Z
    2cba:	81 32       	cpi	r24, 0x21	; 33
    2cbc:	c0 f0       	brcs	.+48     	; 0x2cee <create_name+0x6c>
    2cbe:	8f 32       	cpi	r24, 0x2F	; 47
    2cc0:	b1 f0       	breq	.+44     	; 0x2cee <create_name+0x6c>
    2cc2:	8e 32       	cpi	r24, 0x2E	; 46
    2cc4:	11 f0       	breq	.+4      	; 0x2cca <create_name+0x48>
    2cc6:	95 17       	cp	r25, r21
    2cc8:	38 f0       	brcs	.+14     	; 0x2cd8 <create_name+0x56>
    2cca:	58 30       	cpi	r21, 0x08	; 8
    2ccc:	81 f4       	brne	.+32     	; 0x2cee <create_name+0x6c>
    2cce:	8e 32       	cpi	r24, 0x2E	; 46
    2cd0:	71 f4       	brne	.+28     	; 0x2cee <create_name+0x6c>
    2cd2:	98 e0       	ldi	r25, 0x08	; 8
    2cd4:	5b e0       	ldi	r21, 0x0B	; 11
    2cd6:	ea cf       	rjmp	.-44     	; 0x2cac <create_name+0x2a>
    2cd8:	6f e9       	ldi	r22, 0x9F	; 159
    2cda:	68 0f       	add	r22, r24
    2cdc:	6a 31       	cpi	r22, 0x1A	; 26
    2cde:	08 f4       	brcc	.+2      	; 0x2ce2 <create_name+0x60>
    2ce0:	80 52       	subi	r24, 0x20	; 32
    2ce2:	f8 01       	movw	r30, r16
    2ce4:	e9 0f       	add	r30, r25
    2ce6:	f1 1d       	adc	r31, r1
    2ce8:	80 83       	st	Z, r24
    2cea:	9f 5f       	subi	r25, 0xFF	; 255
    2cec:	df cf       	rjmp	.-66     	; 0x2cac <create_name+0x2a>
    2cee:	24 0f       	add	r18, r20
    2cf0:	31 1d       	adc	r19, r1
    2cf2:	39 83       	std	Y+1, r19	; 0x01
    2cf4:	28 83       	st	Y, r18
    2cf6:	91 e0       	ldi	r25, 0x01	; 1
    2cf8:	81 32       	cpi	r24, 0x21	; 33
    2cfa:	08 f0       	brcs	.+2      	; 0x2cfe <create_name+0x7c>
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	f8 01       	movw	r30, r16
    2d00:	93 87       	std	Z+11, r25	; 0x0b
    2d02:	80 e0       	ldi	r24, 0x00	; 0
    2d04:	df 91       	pop	r29
    2d06:	cf 91       	pop	r28
    2d08:	1f 91       	pop	r17
    2d0a:	0f 91       	pop	r16
    2d0c:	08 95       	ret

00002d0e <check_fs>:
    2d0e:	cf 92       	push	r12
    2d10:	df 92       	push	r13
    2d12:	ef 92       	push	r14
    2d14:	ff 92       	push	r15
    2d16:	0f 93       	push	r16
    2d18:	1f 93       	push	r17
    2d1a:	cf 93       	push	r28
    2d1c:	df 93       	push	r29
    2d1e:	ec 01       	movw	r28, r24
    2d20:	6a 01       	movw	r12, r20
    2d22:	7b 01       	movw	r14, r22
    2d24:	02 e0       	ldi	r16, 0x02	; 2
    2d26:	10 e0       	ldi	r17, 0x00	; 0
    2d28:	2e ef       	ldi	r18, 0xFE	; 254
    2d2a:	31 e0       	ldi	r19, 0x01	; 1
    2d2c:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2d30:	81 11       	cpse	r24, r1
    2d32:	25 c0       	rjmp	.+74     	; 0x2d7e <check_fs+0x70>
    2d34:	88 81       	ld	r24, Y
    2d36:	99 81       	ldd	r25, Y+1	; 0x01
    2d38:	85 35       	cpi	r24, 0x55	; 85
    2d3a:	9a 4a       	sbci	r25, 0xAA	; 170
    2d3c:	11 f5       	brne	.+68     	; 0x2d82 <check_fs+0x74>
    2d3e:	26 e3       	ldi	r18, 0x36	; 54
    2d40:	30 e0       	ldi	r19, 0x00	; 0
    2d42:	b7 01       	movw	r22, r14
    2d44:	a6 01       	movw	r20, r12
    2d46:	ce 01       	movw	r24, r28
    2d48:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2d4c:	81 11       	cpse	r24, r1
    2d4e:	05 c0       	rjmp	.+10     	; 0x2d5a <check_fs+0x4c>
    2d50:	88 81       	ld	r24, Y
    2d52:	99 81       	ldd	r25, Y+1	; 0x01
    2d54:	86 34       	cpi	r24, 0x46	; 70
    2d56:	91 44       	sbci	r25, 0x41	; 65
    2d58:	b1 f0       	breq	.+44     	; 0x2d86 <check_fs+0x78>
    2d5a:	02 e0       	ldi	r16, 0x02	; 2
    2d5c:	10 e0       	ldi	r17, 0x00	; 0
    2d5e:	22 e5       	ldi	r18, 0x52	; 82
    2d60:	30 e0       	ldi	r19, 0x00	; 0
    2d62:	b7 01       	movw	r22, r14
    2d64:	a6 01       	movw	r20, r12
    2d66:	ce 01       	movw	r24, r28
    2d68:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2d6c:	81 11       	cpse	r24, r1
    2d6e:	0d c0       	rjmp	.+26     	; 0x2d8a <check_fs+0x7c>
    2d70:	88 81       	ld	r24, Y
    2d72:	99 81       	ldd	r25, Y+1	; 0x01
    2d74:	86 34       	cpi	r24, 0x46	; 70
    2d76:	91 44       	sbci	r25, 0x41	; 65
    2d78:	51 f0       	breq	.+20     	; 0x2d8e <check_fs+0x80>
    2d7a:	81 e0       	ldi	r24, 0x01	; 1
    2d7c:	09 c0       	rjmp	.+18     	; 0x2d90 <check_fs+0x82>
    2d7e:	83 e0       	ldi	r24, 0x03	; 3
    2d80:	07 c0       	rjmp	.+14     	; 0x2d90 <check_fs+0x82>
    2d82:	82 e0       	ldi	r24, 0x02	; 2
    2d84:	05 c0       	rjmp	.+10     	; 0x2d90 <check_fs+0x82>
    2d86:	80 e0       	ldi	r24, 0x00	; 0
    2d88:	03 c0       	rjmp	.+6      	; 0x2d90 <check_fs+0x82>
    2d8a:	81 e0       	ldi	r24, 0x01	; 1
    2d8c:	01 c0       	rjmp	.+2      	; 0x2d90 <check_fs+0x82>
    2d8e:	80 e0       	ldi	r24, 0x00	; 0
    2d90:	df 91       	pop	r29
    2d92:	cf 91       	pop	r28
    2d94:	1f 91       	pop	r17
    2d96:	0f 91       	pop	r16
    2d98:	ff 90       	pop	r15
    2d9a:	ef 90       	pop	r14
    2d9c:	df 90       	pop	r13
    2d9e:	cf 90       	pop	r12
    2da0:	08 95       	ret

00002da2 <get_fat>:
    2da2:	4f 92       	push	r4
    2da4:	5f 92       	push	r5
    2da6:	6f 92       	push	r6
    2da8:	7f 92       	push	r7
    2daa:	8f 92       	push	r8
    2dac:	9f 92       	push	r9
    2dae:	af 92       	push	r10
    2db0:	bf 92       	push	r11
    2db2:	cf 92       	push	r12
    2db4:	df 92       	push	r13
    2db6:	ef 92       	push	r14
    2db8:	ff 92       	push	r15
    2dba:	0f 93       	push	r16
    2dbc:	1f 93       	push	r17
    2dbe:	cf 93       	push	r28
    2dc0:	df 93       	push	r29
    2dc2:	00 d0       	rcall	.+0      	; 0x2dc4 <get_fat+0x22>
    2dc4:	00 d0       	rcall	.+0      	; 0x2dc6 <get_fat+0x24>
    2dc6:	cd b7       	in	r28, 0x3d	; 61
    2dc8:	de b7       	in	r29, 0x3e	; 62
    2dca:	e0 90 fe 02 	lds	r14, 0x02FE	; 0x8002fe <FatFs>
    2dce:	f0 90 ff 02 	lds	r15, 0x02FF	; 0x8002ff <FatFs+0x1>
    2dd2:	62 30       	cpi	r22, 0x02	; 2
    2dd4:	71 05       	cpc	r23, r1
    2dd6:	81 05       	cpc	r24, r1
    2dd8:	91 05       	cpc	r25, r1
    2dda:	08 f4       	brcc	.+2      	; 0x2dde <get_fat+0x3c>
    2ddc:	bf c0       	rjmp	.+382    	; 0x2f5c <get_fat+0x1ba>
    2dde:	f7 01       	movw	r30, r14
    2de0:	80 84       	ldd	r8, Z+8	; 0x08
    2de2:	91 84       	ldd	r9, Z+9	; 0x09
    2de4:	a2 84       	ldd	r10, Z+10	; 0x0a
    2de6:	b3 84       	ldd	r11, Z+11	; 0x0b
    2de8:	68 15       	cp	r22, r8
    2dea:	79 05       	cpc	r23, r9
    2dec:	8a 05       	cpc	r24, r10
    2dee:	9b 05       	cpc	r25, r11
    2df0:	08 f0       	brcs	.+2      	; 0x2df4 <get_fat+0x52>
    2df2:	b9 c0       	rjmp	.+370    	; 0x2f66 <get_fat+0x1c4>
    2df4:	4b 01       	movw	r8, r22
    2df6:	5c 01       	movw	r10, r24
    2df8:	80 81       	ld	r24, Z
    2dfa:	82 30       	cpi	r24, 0x02	; 2
    2dfc:	09 f4       	brne	.+2      	; 0x2e00 <get_fat+0x5e>
    2dfe:	62 c0       	rjmp	.+196    	; 0x2ec4 <get_fat+0x122>
    2e00:	83 30       	cpi	r24, 0x03	; 3
    2e02:	09 f4       	brne	.+2      	; 0x2e06 <get_fat+0x64>
    2e04:	7f c0       	rjmp	.+254    	; 0x2f04 <get_fat+0x162>
    2e06:	81 30       	cpi	r24, 0x01	; 1
    2e08:	09 f0       	breq	.+2      	; 0x2e0c <get_fat+0x6a>
    2e0a:	b2 c0       	rjmp	.+356    	; 0x2f70 <get_fat+0x1ce>
    2e0c:	c4 01       	movw	r24, r8
    2e0e:	96 95       	lsr	r25
    2e10:	87 95       	ror	r24
    2e12:	88 0d       	add	r24, r8
    2e14:	99 1d       	adc	r25, r9
    2e16:	9c 01       	movw	r18, r24
    2e18:	31 70       	andi	r19, 0x01	; 1
    2e1a:	89 2f       	mov	r24, r25
    2e1c:	99 27       	eor	r25, r25
    2e1e:	86 95       	lsr	r24
    2e20:	2f 3f       	cpi	r18, 0xFF	; 255
    2e22:	f1 e0       	ldi	r31, 0x01	; 1
    2e24:	3f 07       	cpc	r19, r31
    2e26:	91 f0       	breq	.+36     	; 0x2e4c <get_fat+0xaa>
    2e28:	f7 01       	movw	r30, r14
    2e2a:	44 85       	ldd	r20, Z+12	; 0x0c
    2e2c:	55 85       	ldd	r21, Z+13	; 0x0d
    2e2e:	66 85       	ldd	r22, Z+14	; 0x0e
    2e30:	77 85       	ldd	r23, Z+15	; 0x0f
    2e32:	48 0f       	add	r20, r24
    2e34:	59 1f       	adc	r21, r25
    2e36:	61 1d       	adc	r22, r1
    2e38:	71 1d       	adc	r23, r1
    2e3a:	02 e0       	ldi	r16, 0x02	; 2
    2e3c:	10 e0       	ldi	r17, 0x00	; 0
    2e3e:	ce 01       	movw	r24, r28
    2e40:	01 96       	adiw	r24, 0x01	; 1
    2e42:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2e46:	88 23       	and	r24, r24
    2e48:	61 f1       	breq	.+88     	; 0x2ea2 <get_fat+0x100>
    2e4a:	97 c0       	rjmp	.+302    	; 0x2f7a <get_fat+0x1d8>
    2e4c:	f7 01       	movw	r30, r14
    2e4e:	44 85       	ldd	r20, Z+12	; 0x0c
    2e50:	55 85       	ldd	r21, Z+13	; 0x0d
    2e52:	66 85       	ldd	r22, Z+14	; 0x0e
    2e54:	77 85       	ldd	r23, Z+15	; 0x0f
    2e56:	2c 01       	movw	r4, r24
    2e58:	61 2c       	mov	r6, r1
    2e5a:	71 2c       	mov	r7, r1
    2e5c:	44 0d       	add	r20, r4
    2e5e:	55 1d       	adc	r21, r5
    2e60:	66 1d       	adc	r22, r6
    2e62:	77 1d       	adc	r23, r7
    2e64:	01 e0       	ldi	r16, 0x01	; 1
    2e66:	10 e0       	ldi	r17, 0x00	; 0
    2e68:	2f ef       	ldi	r18, 0xFF	; 255
    2e6a:	31 e0       	ldi	r19, 0x01	; 1
    2e6c:	ce 01       	movw	r24, r28
    2e6e:	01 96       	adiw	r24, 0x01	; 1
    2e70:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2e74:	81 11       	cpse	r24, r1
    2e76:	86 c0       	rjmp	.+268    	; 0x2f84 <get_fat+0x1e2>
    2e78:	f7 01       	movw	r30, r14
    2e7a:	44 85       	ldd	r20, Z+12	; 0x0c
    2e7c:	55 85       	ldd	r21, Z+13	; 0x0d
    2e7e:	66 85       	ldd	r22, Z+14	; 0x0e
    2e80:	77 85       	ldd	r23, Z+15	; 0x0f
    2e82:	44 0d       	add	r20, r4
    2e84:	55 1d       	adc	r21, r5
    2e86:	66 1d       	adc	r22, r6
    2e88:	77 1d       	adc	r23, r7
    2e8a:	4f 5f       	subi	r20, 0xFF	; 255
    2e8c:	5f 4f       	sbci	r21, 0xFF	; 255
    2e8e:	6f 4f       	sbci	r22, 0xFF	; 255
    2e90:	7f 4f       	sbci	r23, 0xFF	; 255
    2e92:	20 e0       	ldi	r18, 0x00	; 0
    2e94:	30 e0       	ldi	r19, 0x00	; 0
    2e96:	ce 01       	movw	r24, r28
    2e98:	02 96       	adiw	r24, 0x02	; 2
    2e9a:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2e9e:	81 11       	cpse	r24, r1
    2ea0:	76 c0       	rjmp	.+236    	; 0x2f8e <get_fat+0x1ec>
    2ea2:	69 81       	ldd	r22, Y+1	; 0x01
    2ea4:	7a 81       	ldd	r23, Y+2	; 0x02
    2ea6:	80 fe       	sbrs	r8, 0
    2ea8:	09 c0       	rjmp	.+18     	; 0x2ebc <get_fat+0x11a>
    2eaa:	72 95       	swap	r23
    2eac:	62 95       	swap	r22
    2eae:	6f 70       	andi	r22, 0x0F	; 15
    2eb0:	67 27       	eor	r22, r23
    2eb2:	7f 70       	andi	r23, 0x0F	; 15
    2eb4:	67 27       	eor	r22, r23
    2eb6:	80 e0       	ldi	r24, 0x00	; 0
    2eb8:	90 e0       	ldi	r25, 0x00	; 0
    2eba:	77 c0       	rjmp	.+238    	; 0x2faa <get_fat+0x208>
    2ebc:	7f 70       	andi	r23, 0x0F	; 15
    2ebe:	80 e0       	ldi	r24, 0x00	; 0
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	73 c0       	rjmp	.+230    	; 0x2faa <get_fat+0x208>
    2ec4:	94 01       	movw	r18, r8
    2ec6:	33 27       	eor	r19, r19
    2ec8:	22 0f       	add	r18, r18
    2eca:	33 1f       	adc	r19, r19
    2ecc:	f7 01       	movw	r30, r14
    2ece:	c4 84       	ldd	r12, Z+12	; 0x0c
    2ed0:	d5 84       	ldd	r13, Z+13	; 0x0d
    2ed2:	e6 84       	ldd	r14, Z+14	; 0x0e
    2ed4:	f7 84       	ldd	r15, Z+15	; 0x0f
    2ed6:	bb 27       	eor	r27, r27
    2ed8:	ab 2d       	mov	r26, r11
    2eda:	9a 2d       	mov	r25, r10
    2edc:	89 2d       	mov	r24, r9
    2ede:	b7 01       	movw	r22, r14
    2ee0:	a6 01       	movw	r20, r12
    2ee2:	48 0f       	add	r20, r24
    2ee4:	59 1f       	adc	r21, r25
    2ee6:	6a 1f       	adc	r22, r26
    2ee8:	7b 1f       	adc	r23, r27
    2eea:	02 e0       	ldi	r16, 0x02	; 2
    2eec:	10 e0       	ldi	r17, 0x00	; 0
    2eee:	ce 01       	movw	r24, r28
    2ef0:	01 96       	adiw	r24, 0x01	; 1
    2ef2:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2ef6:	81 11       	cpse	r24, r1
    2ef8:	4f c0       	rjmp	.+158    	; 0x2f98 <get_fat+0x1f6>
    2efa:	69 81       	ldd	r22, Y+1	; 0x01
    2efc:	7a 81       	ldd	r23, Y+2	; 0x02
    2efe:	80 e0       	ldi	r24, 0x00	; 0
    2f00:	90 e0       	ldi	r25, 0x00	; 0
    2f02:	53 c0       	rjmp	.+166    	; 0x2faa <get_fat+0x208>
    2f04:	94 01       	movw	r18, r8
    2f06:	2f 77       	andi	r18, 0x7F	; 127
    2f08:	33 27       	eor	r19, r19
    2f0a:	22 0f       	add	r18, r18
    2f0c:	33 1f       	adc	r19, r19
    2f0e:	22 0f       	add	r18, r18
    2f10:	33 1f       	adc	r19, r19
    2f12:	f7 01       	movw	r30, r14
    2f14:	c4 84       	ldd	r12, Z+12	; 0x0c
    2f16:	d5 84       	ldd	r13, Z+13	; 0x0d
    2f18:	e6 84       	ldd	r14, Z+14	; 0x0e
    2f1a:	f7 84       	ldd	r15, Z+15	; 0x0f
    2f1c:	d5 01       	movw	r26, r10
    2f1e:	c4 01       	movw	r24, r8
    2f20:	68 94       	set
    2f22:	16 f8       	bld	r1, 6
    2f24:	b6 95       	lsr	r27
    2f26:	a7 95       	ror	r26
    2f28:	97 95       	ror	r25
    2f2a:	87 95       	ror	r24
    2f2c:	16 94       	lsr	r1
    2f2e:	d1 f7       	brne	.-12     	; 0x2f24 <get_fat+0x182>
    2f30:	b7 01       	movw	r22, r14
    2f32:	a6 01       	movw	r20, r12
    2f34:	48 0f       	add	r20, r24
    2f36:	59 1f       	adc	r21, r25
    2f38:	6a 1f       	adc	r22, r26
    2f3a:	7b 1f       	adc	r23, r27
    2f3c:	04 e0       	ldi	r16, 0x04	; 4
    2f3e:	10 e0       	ldi	r17, 0x00	; 0
    2f40:	ce 01       	movw	r24, r28
    2f42:	01 96       	adiw	r24, 0x01	; 1
    2f44:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    2f48:	81 11       	cpse	r24, r1
    2f4a:	2b c0       	rjmp	.+86     	; 0x2fa2 <get_fat+0x200>
    2f4c:	89 81       	ldd	r24, Y+1	; 0x01
    2f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f50:	ab 81       	ldd	r26, Y+3	; 0x03
    2f52:	bc 81       	ldd	r27, Y+4	; 0x04
    2f54:	bc 01       	movw	r22, r24
    2f56:	cd 01       	movw	r24, r26
    2f58:	9f 70       	andi	r25, 0x0F	; 15
    2f5a:	27 c0       	rjmp	.+78     	; 0x2faa <get_fat+0x208>
    2f5c:	61 e0       	ldi	r22, 0x01	; 1
    2f5e:	70 e0       	ldi	r23, 0x00	; 0
    2f60:	80 e0       	ldi	r24, 0x00	; 0
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	22 c0       	rjmp	.+68     	; 0x2faa <get_fat+0x208>
    2f66:	61 e0       	ldi	r22, 0x01	; 1
    2f68:	70 e0       	ldi	r23, 0x00	; 0
    2f6a:	80 e0       	ldi	r24, 0x00	; 0
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	1d c0       	rjmp	.+58     	; 0x2faa <get_fat+0x208>
    2f70:	61 e0       	ldi	r22, 0x01	; 1
    2f72:	70 e0       	ldi	r23, 0x00	; 0
    2f74:	80 e0       	ldi	r24, 0x00	; 0
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	18 c0       	rjmp	.+48     	; 0x2faa <get_fat+0x208>
    2f7a:	61 e0       	ldi	r22, 0x01	; 1
    2f7c:	70 e0       	ldi	r23, 0x00	; 0
    2f7e:	80 e0       	ldi	r24, 0x00	; 0
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	13 c0       	rjmp	.+38     	; 0x2faa <get_fat+0x208>
    2f84:	61 e0       	ldi	r22, 0x01	; 1
    2f86:	70 e0       	ldi	r23, 0x00	; 0
    2f88:	80 e0       	ldi	r24, 0x00	; 0
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	0e c0       	rjmp	.+28     	; 0x2faa <get_fat+0x208>
    2f8e:	61 e0       	ldi	r22, 0x01	; 1
    2f90:	70 e0       	ldi	r23, 0x00	; 0
    2f92:	80 e0       	ldi	r24, 0x00	; 0
    2f94:	90 e0       	ldi	r25, 0x00	; 0
    2f96:	09 c0       	rjmp	.+18     	; 0x2faa <get_fat+0x208>
    2f98:	61 e0       	ldi	r22, 0x01	; 1
    2f9a:	70 e0       	ldi	r23, 0x00	; 0
    2f9c:	80 e0       	ldi	r24, 0x00	; 0
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	04 c0       	rjmp	.+8      	; 0x2faa <get_fat+0x208>
    2fa2:	61 e0       	ldi	r22, 0x01	; 1
    2fa4:	70 e0       	ldi	r23, 0x00	; 0
    2fa6:	80 e0       	ldi	r24, 0x00	; 0
    2fa8:	90 e0       	ldi	r25, 0x00	; 0
    2faa:	0f 90       	pop	r0
    2fac:	0f 90       	pop	r0
    2fae:	0f 90       	pop	r0
    2fb0:	0f 90       	pop	r0
    2fb2:	df 91       	pop	r29
    2fb4:	cf 91       	pop	r28
    2fb6:	1f 91       	pop	r17
    2fb8:	0f 91       	pop	r16
    2fba:	ff 90       	pop	r15
    2fbc:	ef 90       	pop	r14
    2fbe:	df 90       	pop	r13
    2fc0:	cf 90       	pop	r12
    2fc2:	bf 90       	pop	r11
    2fc4:	af 90       	pop	r10
    2fc6:	9f 90       	pop	r9
    2fc8:	8f 90       	pop	r8
    2fca:	7f 90       	pop	r7
    2fcc:	6f 90       	pop	r6
    2fce:	5f 90       	pop	r5
    2fd0:	4f 90       	pop	r4
    2fd2:	08 95       	ret

00002fd4 <dir_next>:
    2fd4:	cf 92       	push	r12
    2fd6:	df 92       	push	r13
    2fd8:	ef 92       	push	r14
    2fda:	ff 92       	push	r15
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	e0 90 fe 02 	lds	r14, 0x02FE	; 0x8002fe <FatFs>
    2fe8:	f0 90 ff 02 	lds	r15, 0x02FF	; 0x8002ff <FatFs+0x1>
    2fec:	fc 01       	movw	r30, r24
    2fee:	c0 81       	ld	r28, Z
    2ff0:	d1 81       	ldd	r29, Z+1	; 0x01
    2ff2:	21 96       	adiw	r28, 0x01	; 1
    2ff4:	09 f4       	brne	.+2      	; 0x2ff8 <dir_next+0x24>
    2ff6:	5c c0       	rjmp	.+184    	; 0x30b0 <dir_next+0xdc>
    2ff8:	44 85       	ldd	r20, Z+12	; 0x0c
    2ffa:	55 85       	ldd	r21, Z+13	; 0x0d
    2ffc:	66 85       	ldd	r22, Z+14	; 0x0e
    2ffe:	77 85       	ldd	r23, Z+15	; 0x0f
    3000:	41 15       	cp	r20, r1
    3002:	51 05       	cpc	r21, r1
    3004:	61 05       	cpc	r22, r1
    3006:	71 05       	cpc	r23, r1
    3008:	09 f4       	brne	.+2      	; 0x300c <dir_next+0x38>
    300a:	54 c0       	rjmp	.+168    	; 0x30b4 <dir_next+0xe0>
    300c:	8c 01       	movw	r16, r24
    300e:	ce 01       	movw	r24, r28
    3010:	8f 70       	andi	r24, 0x0F	; 15
    3012:	99 27       	eor	r25, r25
    3014:	89 2b       	or	r24, r25
    3016:	09 f0       	breq	.+2      	; 0x301a <dir_next+0x46>
    3018:	46 c0       	rjmp	.+140    	; 0x30a6 <dir_next+0xd2>
    301a:	4f 5f       	subi	r20, 0xFF	; 255
    301c:	5f 4f       	sbci	r21, 0xFF	; 255
    301e:	6f 4f       	sbci	r22, 0xFF	; 255
    3020:	7f 4f       	sbci	r23, 0xFF	; 255
    3022:	44 87       	std	Z+12, r20	; 0x0c
    3024:	55 87       	std	Z+13, r21	; 0x0d
    3026:	66 87       	std	Z+14, r22	; 0x0e
    3028:	77 87       	std	Z+15, r23	; 0x0f
    302a:	40 85       	ldd	r20, Z+8	; 0x08
    302c:	51 85       	ldd	r21, Z+9	; 0x09
    302e:	62 85       	ldd	r22, Z+10	; 0x0a
    3030:	73 85       	ldd	r23, Z+11	; 0x0b
    3032:	41 15       	cp	r20, r1
    3034:	51 05       	cpc	r21, r1
    3036:	61 05       	cpc	r22, r1
    3038:	71 05       	cpc	r23, r1
    303a:	39 f4       	brne	.+14     	; 0x304a <dir_next+0x76>
    303c:	f7 01       	movw	r30, r14
    303e:	84 81       	ldd	r24, Z+4	; 0x04
    3040:	95 81       	ldd	r25, Z+5	; 0x05
    3042:	c8 17       	cp	r28, r24
    3044:	d9 07       	cpc	r29, r25
    3046:	c0 f5       	brcc	.+112    	; 0x30b8 <dir_next+0xe4>
    3048:	2e c0       	rjmp	.+92     	; 0x30a6 <dir_next+0xd2>
    304a:	f7 01       	movw	r30, r14
    304c:	81 81       	ldd	r24, Z+1	; 0x01
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	01 97       	sbiw	r24, 0x01	; 1
    3052:	9e 01       	movw	r18, r28
    3054:	32 95       	swap	r19
    3056:	22 95       	swap	r18
    3058:	2f 70       	andi	r18, 0x0F	; 15
    305a:	23 27       	eor	r18, r19
    305c:	3f 70       	andi	r19, 0x0F	; 15
    305e:	23 27       	eor	r18, r19
    3060:	82 23       	and	r24, r18
    3062:	93 23       	and	r25, r19
    3064:	89 2b       	or	r24, r25
    3066:	f9 f4       	brne	.+62     	; 0x30a6 <dir_next+0xd2>
    3068:	cb 01       	movw	r24, r22
    306a:	ba 01       	movw	r22, r20
    306c:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <get_fat>
    3070:	62 30       	cpi	r22, 0x02	; 2
    3072:	71 05       	cpc	r23, r1
    3074:	81 05       	cpc	r24, r1
    3076:	91 05       	cpc	r25, r1
    3078:	08 f1       	brcs	.+66     	; 0x30bc <dir_next+0xe8>
    307a:	f7 01       	movw	r30, r14
    307c:	c0 84       	ldd	r12, Z+8	; 0x08
    307e:	d1 84       	ldd	r13, Z+9	; 0x09
    3080:	e2 84       	ldd	r14, Z+10	; 0x0a
    3082:	f3 84       	ldd	r15, Z+11	; 0x0b
    3084:	6c 15       	cp	r22, r12
    3086:	7d 05       	cpc	r23, r13
    3088:	8e 05       	cpc	r24, r14
    308a:	9f 05       	cpc	r25, r15
    308c:	c8 f4       	brcc	.+50     	; 0x30c0 <dir_next+0xec>
    308e:	f8 01       	movw	r30, r16
    3090:	60 87       	std	Z+8, r22	; 0x08
    3092:	71 87       	std	Z+9, r23	; 0x09
    3094:	82 87       	std	Z+10, r24	; 0x0a
    3096:	93 87       	std	Z+11, r25	; 0x0b
    3098:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <clust2sect>
    309c:	f8 01       	movw	r30, r16
    309e:	64 87       	std	Z+12, r22	; 0x0c
    30a0:	75 87       	std	Z+13, r23	; 0x0d
    30a2:	86 87       	std	Z+14, r24	; 0x0e
    30a4:	97 87       	std	Z+15, r25	; 0x0f
    30a6:	f8 01       	movw	r30, r16
    30a8:	d1 83       	std	Z+1, r29	; 0x01
    30aa:	c0 83       	st	Z, r28
    30ac:	80 e0       	ldi	r24, 0x00	; 0
    30ae:	09 c0       	rjmp	.+18     	; 0x30c2 <dir_next+0xee>
    30b0:	83 e0       	ldi	r24, 0x03	; 3
    30b2:	07 c0       	rjmp	.+14     	; 0x30c2 <dir_next+0xee>
    30b4:	83 e0       	ldi	r24, 0x03	; 3
    30b6:	05 c0       	rjmp	.+10     	; 0x30c2 <dir_next+0xee>
    30b8:	83 e0       	ldi	r24, 0x03	; 3
    30ba:	03 c0       	rjmp	.+6      	; 0x30c2 <dir_next+0xee>
    30bc:	81 e0       	ldi	r24, 0x01	; 1
    30be:	01 c0       	rjmp	.+2      	; 0x30c2 <dir_next+0xee>
    30c0:	83 e0       	ldi	r24, 0x03	; 3
    30c2:	df 91       	pop	r29
    30c4:	cf 91       	pop	r28
    30c6:	1f 91       	pop	r17
    30c8:	0f 91       	pop	r16
    30ca:	ff 90       	pop	r15
    30cc:	ef 90       	pop	r14
    30ce:	df 90       	pop	r13
    30d0:	cf 90       	pop	r12
    30d2:	08 95       	ret

000030d4 <dir_find>:
    30d4:	df 92       	push	r13
    30d6:	ef 92       	push	r14
    30d8:	ff 92       	push	r15
    30da:	0f 93       	push	r16
    30dc:	1f 93       	push	r17
    30de:	cf 93       	push	r28
    30e0:	df 93       	push	r29
    30e2:	7c 01       	movw	r14, r24
    30e4:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <dir_rewind>
    30e8:	81 11       	cpse	r24, r1
    30ea:	3e c0       	rjmp	.+124    	; 0x3168 <dir_find+0x94>
    30ec:	e0 91 fe 02 	lds	r30, 0x02FE	; 0x8002fe <FatFs>
    30f0:	f0 91 ff 02 	lds	r31, 0x02FF	; 0x8002ff <FatFs+0x1>
    30f4:	c6 81       	ldd	r28, Z+6	; 0x06
    30f6:	d7 81       	ldd	r29, Z+7	; 0x07
    30f8:	f7 01       	movw	r30, r14
    30fa:	20 81       	ld	r18, Z
    30fc:	31 81       	ldd	r19, Z+1	; 0x01
    30fe:	2f 70       	andi	r18, 0x0F	; 15
    3100:	33 27       	eor	r19, r19
    3102:	22 0f       	add	r18, r18
    3104:	33 1f       	adc	r19, r19
    3106:	22 95       	swap	r18
    3108:	32 95       	swap	r19
    310a:	30 7f       	andi	r19, 0xF0	; 240
    310c:	32 27       	eor	r19, r18
    310e:	20 7f       	andi	r18, 0xF0	; 240
    3110:	32 27       	eor	r19, r18
    3112:	44 85       	ldd	r20, Z+12	; 0x0c
    3114:	55 85       	ldd	r21, Z+13	; 0x0d
    3116:	66 85       	ldd	r22, Z+14	; 0x0e
    3118:	77 85       	ldd	r23, Z+15	; 0x0f
    311a:	00 e2       	ldi	r16, 0x20	; 32
    311c:	10 e0       	ldi	r17, 0x00	; 0
    311e:	ce 01       	movw	r24, r28
    3120:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    3124:	91 e0       	ldi	r25, 0x01	; 1
    3126:	81 11       	cpse	r24, r1
    3128:	01 c0       	rjmp	.+2      	; 0x312c <dir_find+0x58>
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	d9 2e       	mov	r13, r25
    312e:	91 11       	cpse	r25, r1
    3130:	16 c0       	rjmp	.+44     	; 0x315e <dir_find+0x8a>
    3132:	88 81       	ld	r24, Y
    3134:	88 23       	and	r24, r24
    3136:	a9 f0       	breq	.+42     	; 0x3162 <dir_find+0x8e>
    3138:	8b 85       	ldd	r24, Y+11	; 0x0b
    313a:	83 fd       	sbrc	r24, 3
    313c:	0a c0       	rjmp	.+20     	; 0x3152 <dir_find+0x7e>
    313e:	f7 01       	movw	r30, r14
    3140:	62 81       	ldd	r22, Z+2	; 0x02
    3142:	73 81       	ldd	r23, Z+3	; 0x03
    3144:	4b e0       	ldi	r20, 0x0B	; 11
    3146:	50 e0       	ldi	r21, 0x00	; 0
    3148:	ce 01       	movw	r24, r28
    314a:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <mem_cmp>
    314e:	89 2b       	or	r24, r25
    3150:	51 f0       	breq	.+20     	; 0x3166 <dir_find+0x92>
    3152:	c7 01       	movw	r24, r14
    3154:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <dir_next>
    3158:	88 23       	and	r24, r24
    315a:	71 f2       	breq	.-100    	; 0x30f8 <dir_find+0x24>
    315c:	05 c0       	rjmp	.+10     	; 0x3168 <dir_find+0x94>
    315e:	89 2f       	mov	r24, r25
    3160:	03 c0       	rjmp	.+6      	; 0x3168 <dir_find+0x94>
    3162:	83 e0       	ldi	r24, 0x03	; 3
    3164:	01 c0       	rjmp	.+2      	; 0x3168 <dir_find+0x94>
    3166:	8d 2d       	mov	r24, r13
    3168:	df 91       	pop	r29
    316a:	cf 91       	pop	r28
    316c:	1f 91       	pop	r17
    316e:	0f 91       	pop	r16
    3170:	ff 90       	pop	r15
    3172:	ef 90       	pop	r14
    3174:	df 90       	pop	r13
    3176:	08 95       	ret

00003178 <follow_path>:
    3178:	0f 93       	push	r16
    317a:	1f 93       	push	r17
    317c:	cf 93       	push	r28
    317e:	df 93       	push	r29
    3180:	00 d0       	rcall	.+0      	; 0x3182 <follow_path+0xa>
    3182:	cd b7       	in	r28, 0x3d	; 61
    3184:	de b7       	in	r29, 0x3e	; 62
    3186:	8c 01       	movw	r16, r24
    3188:	7a 83       	std	Y+2, r23	; 0x02
    318a:	69 83       	std	Y+1, r22	; 0x01
    318c:	03 c0       	rjmp	.+6      	; 0x3194 <follow_path+0x1c>
    318e:	31 96       	adiw	r30, 0x01	; 1
    3190:	fa 83       	std	Y+2, r31	; 0x02
    3192:	e9 83       	std	Y+1, r30	; 0x01
    3194:	e9 81       	ldd	r30, Y+1	; 0x01
    3196:	fa 81       	ldd	r31, Y+2	; 0x02
    3198:	80 81       	ld	r24, Z
    319a:	80 32       	cpi	r24, 0x20	; 32
    319c:	c1 f3       	breq	.-16     	; 0x318e <follow_path+0x16>
    319e:	8f 32       	cpi	r24, 0x2F	; 47
    31a0:	19 f4       	brne	.+6      	; 0x31a8 <follow_path+0x30>
    31a2:	31 96       	adiw	r30, 0x01	; 1
    31a4:	fa 83       	std	Y+2, r31	; 0x02
    31a6:	e9 83       	std	Y+1, r30	; 0x01
    31a8:	d8 01       	movw	r26, r16
    31aa:	14 96       	adiw	r26, 0x04	; 4
    31ac:	1d 92       	st	X+, r1
    31ae:	1d 92       	st	X+, r1
    31b0:	1d 92       	st	X+, r1
    31b2:	1c 92       	st	X, r1
    31b4:	17 97       	sbiw	r26, 0x07	; 7
    31b6:	e9 81       	ldd	r30, Y+1	; 0x01
    31b8:	fa 81       	ldd	r31, Y+2	; 0x02
    31ba:	80 81       	ld	r24, Z
    31bc:	81 32       	cpi	r24, 0x21	; 33
    31be:	60 f4       	brcc	.+24     	; 0x31d8 <follow_path+0x60>
    31c0:	c8 01       	movw	r24, r16
    31c2:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <dir_rewind>
    31c6:	e0 91 fe 02 	lds	r30, 0x02FE	; 0x8002fe <FatFs>
    31ca:	f0 91 ff 02 	lds	r31, 0x02FF	; 0x8002ff <FatFs+0x1>
    31ce:	06 80       	ldd	r0, Z+6	; 0x06
    31d0:	f7 81       	ldd	r31, Z+7	; 0x07
    31d2:	e0 2d       	mov	r30, r0
    31d4:	10 82       	st	Z, r1
    31d6:	42 c0       	rjmp	.+132    	; 0x325c <follow_path+0xe4>
    31d8:	be 01       	movw	r22, r28
    31da:	6f 5f       	subi	r22, 0xFF	; 255
    31dc:	7f 4f       	sbci	r23, 0xFF	; 255
    31de:	c8 01       	movw	r24, r16
    31e0:	0e 94 41 16 	call	0x2c82	; 0x2c82 <create_name>
    31e4:	81 11       	cpse	r24, r1
    31e6:	3a c0       	rjmp	.+116    	; 0x325c <follow_path+0xe4>
    31e8:	c8 01       	movw	r24, r16
    31ea:	0e 94 6a 18 	call	0x30d4	; 0x30d4 <dir_find>
    31ee:	88 23       	and	r24, r24
    31f0:	59 f0       	breq	.+22     	; 0x3208 <follow_path+0x90>
    31f2:	83 30       	cpi	r24, 0x03	; 3
    31f4:	99 f5       	brne	.+102    	; 0x325c <follow_path+0xe4>
    31f6:	d8 01       	movw	r26, r16
    31f8:	12 96       	adiw	r26, 0x02	; 2
    31fa:	ed 91       	ld	r30, X+
    31fc:	fc 91       	ld	r31, X
    31fe:	13 97       	sbiw	r26, 0x03	; 3
    3200:	93 85       	ldd	r25, Z+11	; 0x0b
    3202:	99 23       	and	r25, r25
    3204:	41 f1       	breq	.+80     	; 0x3256 <follow_path+0xde>
    3206:	2a c0       	rjmp	.+84     	; 0x325c <follow_path+0xe4>
    3208:	d8 01       	movw	r26, r16
    320a:	12 96       	adiw	r26, 0x02	; 2
    320c:	ed 91       	ld	r30, X+
    320e:	fc 91       	ld	r31, X
    3210:	13 97       	sbiw	r26, 0x03	; 3
    3212:	93 85       	ldd	r25, Z+11	; 0x0b
    3214:	91 11       	cpse	r25, r1
    3216:	22 c0       	rjmp	.+68     	; 0x325c <follow_path+0xe4>
    3218:	e0 91 fe 02 	lds	r30, 0x02FE	; 0x8002fe <FatFs>
    321c:	f0 91 ff 02 	lds	r31, 0x02FF	; 0x8002ff <FatFs+0x1>
    3220:	06 80       	ldd	r0, Z+6	; 0x06
    3222:	f7 81       	ldd	r31, Z+7	; 0x07
    3224:	e0 2d       	mov	r30, r0
    3226:	83 85       	ldd	r24, Z+11	; 0x0b
    3228:	84 ff       	sbrs	r24, 4
    322a:	17 c0       	rjmp	.+46     	; 0x325a <follow_path+0xe2>
    322c:	84 89       	ldd	r24, Z+20	; 0x14
    322e:	95 89       	ldd	r25, Z+21	; 0x15
    3230:	a0 e0       	ldi	r26, 0x00	; 0
    3232:	b0 e0       	ldi	r27, 0x00	; 0
    3234:	bc 01       	movw	r22, r24
    3236:	55 27       	eor	r21, r21
    3238:	44 27       	eor	r20, r20
    323a:	82 8d       	ldd	r24, Z+26	; 0x1a
    323c:	93 8d       	ldd	r25, Z+27	; 0x1b
    323e:	a0 e0       	ldi	r26, 0x00	; 0
    3240:	b0 e0       	ldi	r27, 0x00	; 0
    3242:	84 2b       	or	r24, r20
    3244:	95 2b       	or	r25, r21
    3246:	a6 2b       	or	r26, r22
    3248:	b7 2b       	or	r27, r23
    324a:	f8 01       	movw	r30, r16
    324c:	84 83       	std	Z+4, r24	; 0x04
    324e:	95 83       	std	Z+5, r25	; 0x05
    3250:	a6 83       	std	Z+6, r26	; 0x06
    3252:	b7 83       	std	Z+7, r27	; 0x07
    3254:	c1 cf       	rjmp	.-126    	; 0x31d8 <follow_path+0x60>
    3256:	84 e0       	ldi	r24, 0x04	; 4
    3258:	01 c0       	rjmp	.+2      	; 0x325c <follow_path+0xe4>
    325a:	84 e0       	ldi	r24, 0x04	; 4
    325c:	0f 90       	pop	r0
    325e:	0f 90       	pop	r0
    3260:	df 91       	pop	r29
    3262:	cf 91       	pop	r28
    3264:	1f 91       	pop	r17
    3266:	0f 91       	pop	r16
    3268:	08 95       	ret

0000326a <pf_mount>:
    326a:	4f 92       	push	r4
    326c:	5f 92       	push	r5
    326e:	6f 92       	push	r6
    3270:	7f 92       	push	r7
    3272:	8f 92       	push	r8
    3274:	9f 92       	push	r9
    3276:	af 92       	push	r10
    3278:	bf 92       	push	r11
    327a:	df 92       	push	r13
    327c:	ef 92       	push	r14
    327e:	ff 92       	push	r15
    3280:	0f 93       	push	r16
    3282:	1f 93       	push	r17
    3284:	cf 93       	push	r28
    3286:	df 93       	push	r29
    3288:	cd b7       	in	r28, 0x3d	; 61
    328a:	de b7       	in	r29, 0x3e	; 62
    328c:	a8 97       	sbiw	r28, 0x28	; 40
    328e:	0f b6       	in	r0, 0x3f	; 63
    3290:	f8 94       	cli
    3292:	de bf       	out	0x3e, r29	; 62
    3294:	0f be       	out	0x3f, r0	; 63
    3296:	cd bf       	out	0x3d, r28	; 61
    3298:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <FatFs+0x1>
    329c:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <FatFs>
    32a0:	00 97       	sbiw	r24, 0x00	; 0
    32a2:	09 f4       	brne	.+2      	; 0x32a6 <pf_mount+0x3c>
    32a4:	fb c0       	rjmp	.+502    	; 0x349c <pf_mount+0x232>
    32a6:	7c 01       	movw	r14, r24
    32a8:	0e 94 41 14 	call	0x2882	; 0x2882 <disk_initialize>
    32ac:	80 fd       	sbrc	r24, 0
    32ae:	f8 c0       	rjmp	.+496    	; 0x34a0 <pf_mount+0x236>
    32b0:	40 e0       	ldi	r20, 0x00	; 0
    32b2:	50 e0       	ldi	r21, 0x00	; 0
    32b4:	ba 01       	movw	r22, r20
    32b6:	ce 01       	movw	r24, r28
    32b8:	01 96       	adiw	r24, 0x01	; 1
    32ba:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <check_fs>
    32be:	d8 2e       	mov	r13, r24
    32c0:	41 e0       	ldi	r20, 0x01	; 1
    32c2:	84 13       	cpse	r24, r20
    32c4:	1c c0       	rjmp	.+56     	; 0x32fe <pf_mount+0x94>
    32c6:	00 e1       	ldi	r16, 0x10	; 16
    32c8:	10 e0       	ldi	r17, 0x00	; 0
    32ca:	2e eb       	ldi	r18, 0xBE	; 190
    32cc:	31 e0       	ldi	r19, 0x01	; 1
    32ce:	40 e0       	ldi	r20, 0x00	; 0
    32d0:	50 e0       	ldi	r21, 0x00	; 0
    32d2:	ba 01       	movw	r22, r20
    32d4:	ce 01       	movw	r24, r28
    32d6:	01 96       	adiw	r24, 0x01	; 1
    32d8:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    32dc:	81 11       	cpse	r24, r1
    32de:	13 c0       	rjmp	.+38     	; 0x3306 <pf_mount+0x9c>
    32e0:	8d 81       	ldd	r24, Y+5	; 0x05
    32e2:	88 23       	and	r24, r24
    32e4:	c1 f0       	breq	.+48     	; 0x3316 <pf_mount+0xac>
    32e6:	89 84       	ldd	r8, Y+9	; 0x09
    32e8:	9a 84       	ldd	r9, Y+10	; 0x0a
    32ea:	ab 84       	ldd	r10, Y+11	; 0x0b
    32ec:	bc 84       	ldd	r11, Y+12	; 0x0c
    32ee:	b5 01       	movw	r22, r10
    32f0:	a4 01       	movw	r20, r8
    32f2:	ce 01       	movw	r24, r28
    32f4:	01 96       	adiw	r24, 0x01	; 1
    32f6:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <check_fs>
    32fa:	d8 2e       	mov	r13, r24
    32fc:	0f c0       	rjmp	.+30     	; 0x331c <pf_mount+0xb2>
    32fe:	81 2c       	mov	r8, r1
    3300:	91 2c       	mov	r9, r1
    3302:	54 01       	movw	r10, r8
    3304:	0b c0       	rjmp	.+22     	; 0x331c <pf_mount+0xb2>
    3306:	81 2c       	mov	r8, r1
    3308:	91 2c       	mov	r9, r1
    330a:	54 01       	movw	r10, r8
    330c:	0f 2e       	mov	r0, r31
    330e:	f3 e0       	ldi	r31, 0x03	; 3
    3310:	df 2e       	mov	r13, r31
    3312:	f0 2d       	mov	r31, r0
    3314:	03 c0       	rjmp	.+6      	; 0x331c <pf_mount+0xb2>
    3316:	81 2c       	mov	r8, r1
    3318:	91 2c       	mov	r9, r1
    331a:	54 01       	movw	r10, r8
    331c:	53 e0       	ldi	r21, 0x03	; 3
    331e:	d5 16       	cp	r13, r21
    3320:	09 f4       	brne	.+2      	; 0x3324 <pf_mount+0xba>
    3322:	c0 c0       	rjmp	.+384    	; 0x34a4 <pf_mount+0x23a>
    3324:	d1 10       	cpse	r13, r1
    3326:	c0 c0       	rjmp	.+384    	; 0x34a8 <pf_mount+0x23e>
    3328:	04 e2       	ldi	r16, 0x24	; 36
    332a:	10 e0       	ldi	r17, 0x00	; 0
    332c:	2d e0       	ldi	r18, 0x0D	; 13
    332e:	30 e0       	ldi	r19, 0x00	; 0
    3330:	b5 01       	movw	r22, r10
    3332:	a4 01       	movw	r20, r8
    3334:	ce 01       	movw	r24, r28
    3336:	01 96       	adiw	r24, 0x01	; 1
    3338:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    333c:	81 11       	cpse	r24, r1
    333e:	b6 c0       	rjmp	.+364    	; 0x34ac <pf_mount+0x242>
    3340:	2a 85       	ldd	r18, Y+10	; 0x0a
    3342:	3b 85       	ldd	r19, Y+11	; 0x0b
    3344:	40 e0       	ldi	r20, 0x00	; 0
    3346:	50 e0       	ldi	r21, 0x00	; 0
    3348:	21 15       	cp	r18, r1
    334a:	31 05       	cpc	r19, r1
    334c:	41 05       	cpc	r20, r1
    334e:	51 05       	cpc	r21, r1
    3350:	21 f4       	brne	.+8      	; 0x335a <pf_mount+0xf0>
    3352:	28 8d       	ldd	r18, Y+24	; 0x18
    3354:	39 8d       	ldd	r19, Y+25	; 0x19
    3356:	4a 8d       	ldd	r20, Y+26	; 0x1a
    3358:	5b 8d       	ldd	r21, Y+27	; 0x1b
    335a:	ac 81       	ldd	r26, Y+4	; 0x04
    335c:	b0 e0       	ldi	r27, 0x00	; 0
    335e:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <__muluhisi3>
    3362:	6d a3       	std	Y+37, r22	; 0x25
    3364:	7e a3       	std	Y+38, r23	; 0x26
    3366:	8f a3       	std	Y+39, r24	; 0x27
    3368:	98 a7       	std	Y+40, r25	; 0x28
    336a:	8a 81       	ldd	r24, Y+2	; 0x02
    336c:	9b 81       	ldd	r25, Y+3	; 0x03
    336e:	88 0e       	add	r8, r24
    3370:	99 1e       	adc	r9, r25
    3372:	a1 1c       	adc	r10, r1
    3374:	b1 1c       	adc	r11, r1
    3376:	d7 01       	movw	r26, r14
    3378:	1c 96       	adiw	r26, 0x0c	; 12
    337a:	8d 92       	st	X+, r8
    337c:	9d 92       	st	X+, r9
    337e:	ad 92       	st	X+, r10
    3380:	bc 92       	st	X, r11
    3382:	1f 97       	sbiw	r26, 0x0f	; 15
    3384:	e9 81       	ldd	r30, Y+1	; 0x01
    3386:	11 96       	adiw	r26, 0x01	; 1
    3388:	ec 93       	st	X, r30
    338a:	11 97       	sbiw	r26, 0x01	; 1
    338c:	8d 81       	ldd	r24, Y+5	; 0x05
    338e:	9e 81       	ldd	r25, Y+6	; 0x06
    3390:	15 96       	adiw	r26, 0x05	; 5
    3392:	9c 93       	st	X, r25
    3394:	8e 93       	st	-X, r24
    3396:	14 97       	sbiw	r26, 0x04	; 4
    3398:	0f 81       	ldd	r16, Y+7	; 0x07
    339a:	18 85       	ldd	r17, Y+8	; 0x08
    339c:	20 e0       	ldi	r18, 0x00	; 0
    339e:	30 e0       	ldi	r19, 0x00	; 0
    33a0:	01 15       	cp	r16, r1
    33a2:	11 05       	cpc	r17, r1
    33a4:	21 05       	cpc	r18, r1
    33a6:	31 05       	cpc	r19, r1
    33a8:	21 f4       	brne	.+8      	; 0x33b2 <pf_mount+0x148>
    33aa:	0c 89       	ldd	r16, Y+20	; 0x14
    33ac:	1d 89       	ldd	r17, Y+21	; 0x15
    33ae:	2e 89       	ldd	r18, Y+22	; 0x16
    33b0:	3f 89       	ldd	r19, Y+23	; 0x17
    33b2:	4a 81       	ldd	r20, Y+2	; 0x02
    33b4:	5b 81       	ldd	r21, Y+3	; 0x03
    33b6:	04 1b       	sub	r16, r20
    33b8:	15 0b       	sbc	r17, r21
    33ba:	21 09       	sbc	r18, r1
    33bc:	31 09       	sbc	r19, r1
    33be:	4d a1       	ldd	r20, Y+37	; 0x25
    33c0:	5e a1       	ldd	r21, Y+38	; 0x26
    33c2:	6f a1       	ldd	r22, Y+39	; 0x27
    33c4:	78 a5       	ldd	r23, Y+40	; 0x28
    33c6:	04 1b       	sub	r16, r20
    33c8:	15 0b       	sbc	r17, r21
    33ca:	26 0b       	sbc	r18, r22
    33cc:	37 0b       	sbc	r19, r23
    33ce:	92 95       	swap	r25
    33d0:	82 95       	swap	r24
    33d2:	8f 70       	andi	r24, 0x0F	; 15
    33d4:	89 27       	eor	r24, r25
    33d6:	9f 70       	andi	r25, 0x0F	; 15
    33d8:	89 27       	eor	r24, r25
    33da:	2c 01       	movw	r4, r24
    33dc:	61 2c       	mov	r6, r1
    33de:	71 2c       	mov	r7, r1
    33e0:	c9 01       	movw	r24, r18
    33e2:	b8 01       	movw	r22, r16
    33e4:	64 19       	sub	r22, r4
    33e6:	75 09       	sbc	r23, r5
    33e8:	86 09       	sbc	r24, r6
    33ea:	97 09       	sbc	r25, r7
    33ec:	2e 2f       	mov	r18, r30
    33ee:	30 e0       	ldi	r19, 0x00	; 0
    33f0:	40 e0       	ldi	r20, 0x00	; 0
    33f2:	50 e0       	ldi	r21, 0x00	; 0
    33f4:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <__udivmodsi4>
    33f8:	ba 01       	movw	r22, r20
    33fa:	a9 01       	movw	r20, r18
    33fc:	4e 5f       	subi	r20, 0xFE	; 254
    33fe:	5f 4f       	sbci	r21, 0xFF	; 255
    3400:	6f 4f       	sbci	r22, 0xFF	; 255
    3402:	7f 4f       	sbci	r23, 0xFF	; 255
    3404:	d7 01       	movw	r26, r14
    3406:	18 96       	adiw	r26, 0x08	; 8
    3408:	4d 93       	st	X+, r20
    340a:	5d 93       	st	X+, r21
    340c:	6d 93       	st	X+, r22
    340e:	7c 93       	st	X, r23
    3410:	1b 97       	sbiw	r26, 0x0b	; 11
    3412:	47 3f       	cpi	r20, 0xF7	; 247
    3414:	bf e0       	ldi	r27, 0x0F	; 15
    3416:	5b 07       	cpc	r21, r27
    3418:	61 05       	cpc	r22, r1
    341a:	71 05       	cpc	r23, r1
    341c:	10 f4       	brcc	.+4      	; 0x3422 <pf_mount+0x1b8>
    341e:	81 e0       	ldi	r24, 0x01	; 1
    3420:	01 c0       	rjmp	.+2      	; 0x3424 <pf_mount+0x1ba>
    3422:	82 e0       	ldi	r24, 0x02	; 2
    3424:	47 3f       	cpi	r20, 0xF7	; 247
    3426:	5f 4f       	sbci	r21, 0xFF	; 255
    3428:	61 05       	cpc	r22, r1
    342a:	71 05       	cpc	r23, r1
    342c:	08 f0       	brcs	.+2      	; 0x3430 <pf_mount+0x1c6>
    342e:	83 e0       	ldi	r24, 0x03	; 3
    3430:	d7 01       	movw	r26, r14
    3432:	8c 93       	st	X, r24
    3434:	83 30       	cpi	r24, 0x03	; 3
    3436:	51 f4       	brne	.+20     	; 0x344c <pf_mount+0x1e2>
    3438:	88 a1       	ldd	r24, Y+32	; 0x20
    343a:	99 a1       	ldd	r25, Y+33	; 0x21
    343c:	aa a1       	ldd	r26, Y+34	; 0x22
    343e:	bb a1       	ldd	r27, Y+35	; 0x23
    3440:	f7 01       	movw	r30, r14
    3442:	80 8b       	std	Z+16, r24	; 0x10
    3444:	91 8b       	std	Z+17, r25	; 0x11
    3446:	a2 8b       	std	Z+18, r26	; 0x12
    3448:	b3 8b       	std	Z+19, r27	; 0x13
    344a:	0d c0       	rjmp	.+26     	; 0x3466 <pf_mount+0x1fc>
    344c:	8d a1       	ldd	r24, Y+37	; 0x25
    344e:	9e a1       	ldd	r25, Y+38	; 0x26
    3450:	af a1       	ldd	r26, Y+39	; 0x27
    3452:	b8 a5       	ldd	r27, Y+40	; 0x28
    3454:	88 0d       	add	r24, r8
    3456:	99 1d       	adc	r25, r9
    3458:	aa 1d       	adc	r26, r10
    345a:	bb 1d       	adc	r27, r11
    345c:	f7 01       	movw	r30, r14
    345e:	80 8b       	std	Z+16, r24	; 0x10
    3460:	91 8b       	std	Z+17, r25	; 0x11
    3462:	a2 8b       	std	Z+18, r26	; 0x12
    3464:	b3 8b       	std	Z+19, r27	; 0x13
    3466:	4d a1       	ldd	r20, Y+37	; 0x25
    3468:	5e a1       	ldd	r21, Y+38	; 0x26
    346a:	6f a1       	ldd	r22, Y+39	; 0x27
    346c:	78 a5       	ldd	r23, Y+40	; 0x28
    346e:	84 0e       	add	r8, r20
    3470:	95 1e       	adc	r9, r21
    3472:	a6 1e       	adc	r10, r22
    3474:	b7 1e       	adc	r11, r23
    3476:	84 0c       	add	r8, r4
    3478:	95 1c       	adc	r9, r5
    347a:	a6 1c       	adc	r10, r6
    347c:	b7 1c       	adc	r11, r7
    347e:	d7 01       	movw	r26, r14
    3480:	54 96       	adiw	r26, 0x14	; 20
    3482:	8d 92       	st	X+, r8
    3484:	9d 92       	st	X+, r9
    3486:	ad 92       	st	X+, r10
    3488:	bc 92       	st	X, r11
    348a:	57 97       	sbiw	r26, 0x17	; 23
    348c:	12 96       	adiw	r26, 0x02	; 2
    348e:	1c 92       	st	X, r1
    3490:	f0 92 ff 02 	sts	0x02FF, r15	; 0x8002ff <FatFs+0x1>
    3494:	e0 92 fe 02 	sts	0x02FE, r14	; 0x8002fe <FatFs>
    3498:	80 e0       	ldi	r24, 0x00	; 0
    349a:	09 c0       	rjmp	.+18     	; 0x34ae <pf_mount+0x244>
    349c:	80 e0       	ldi	r24, 0x00	; 0
    349e:	07 c0       	rjmp	.+14     	; 0x34ae <pf_mount+0x244>
    34a0:	82 e0       	ldi	r24, 0x02	; 2
    34a2:	05 c0       	rjmp	.+10     	; 0x34ae <pf_mount+0x244>
    34a4:	81 e0       	ldi	r24, 0x01	; 1
    34a6:	03 c0       	rjmp	.+6      	; 0x34ae <pf_mount+0x244>
    34a8:	87 e0       	ldi	r24, 0x07	; 7
    34aa:	01 c0       	rjmp	.+2      	; 0x34ae <pf_mount+0x244>
    34ac:	81 e0       	ldi	r24, 0x01	; 1
    34ae:	a8 96       	adiw	r28, 0x28	; 40
    34b0:	0f b6       	in	r0, 0x3f	; 63
    34b2:	f8 94       	cli
    34b4:	de bf       	out	0x3e, r29	; 62
    34b6:	0f be       	out	0x3f, r0	; 63
    34b8:	cd bf       	out	0x3d, r28	; 61
    34ba:	df 91       	pop	r29
    34bc:	cf 91       	pop	r28
    34be:	1f 91       	pop	r17
    34c0:	0f 91       	pop	r16
    34c2:	ff 90       	pop	r15
    34c4:	ef 90       	pop	r14
    34c6:	df 90       	pop	r13
    34c8:	bf 90       	pop	r11
    34ca:	af 90       	pop	r10
    34cc:	9f 90       	pop	r9
    34ce:	8f 90       	pop	r8
    34d0:	7f 90       	pop	r7
    34d2:	6f 90       	pop	r6
    34d4:	5f 90       	pop	r5
    34d6:	4f 90       	pop	r4
    34d8:	08 95       	ret

000034da <pf_open>:
    34da:	0f 93       	push	r16
    34dc:	1f 93       	push	r17
    34de:	cf 93       	push	r28
    34e0:	df 93       	push	r29
    34e2:	cd b7       	in	r28, 0x3d	; 61
    34e4:	de b7       	in	r29, 0x3e	; 62
    34e6:	ec 97       	sbiw	r28, 0x3c	; 60
    34e8:	0f b6       	in	r0, 0x3f	; 63
    34ea:	f8 94       	cli
    34ec:	de bf       	out	0x3e, r29	; 62
    34ee:	0f be       	out	0x3f, r0	; 63
    34f0:	cd bf       	out	0x3d, r28	; 61
    34f2:	00 91 fe 02 	lds	r16, 0x02FE	; 0x8002fe <FatFs>
    34f6:	10 91 ff 02 	lds	r17, 0x02FF	; 0x8002ff <FatFs+0x1>
    34fa:	01 15       	cp	r16, r1
    34fc:	11 05       	cpc	r17, r1
    34fe:	c9 f1       	breq	.+114    	; 0x3572 <pf_open+0x98>
    3500:	bc 01       	movw	r22, r24
    3502:	f8 01       	movw	r30, r16
    3504:	12 82       	std	Z+2, r1	; 0x02
    3506:	ce 01       	movw	r24, r28
    3508:	4d 96       	adiw	r24, 0x1d	; 29
    350a:	97 83       	std	Z+7, r25	; 0x07
    350c:	86 83       	std	Z+6, r24	; 0x06
    350e:	0c 97       	sbiw	r24, 0x0c	; 12
    3510:	9c 83       	std	Y+4, r25	; 0x04
    3512:	8b 83       	std	Y+3, r24	; 0x03
    3514:	40 97       	sbiw	r24, 0x10	; 16
    3516:	0e 94 bc 18 	call	0x3178	; 0x3178 <follow_path>
    351a:	81 11       	cpse	r24, r1
    351c:	2f c0       	rjmp	.+94     	; 0x357c <pf_open+0xa2>
    351e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3520:	88 23       	and	r24, r24
    3522:	49 f1       	breq	.+82     	; 0x3576 <pf_open+0x9c>
    3524:	88 a5       	ldd	r24, Y+40	; 0x28
    3526:	84 fd       	sbrc	r24, 4
    3528:	28 c0       	rjmp	.+80     	; 0x357a <pf_open+0xa0>
    352a:	89 a9       	ldd	r24, Y+49	; 0x31
    352c:	9a a9       	ldd	r25, Y+50	; 0x32
    352e:	a0 e0       	ldi	r26, 0x00	; 0
    3530:	b0 e0       	ldi	r27, 0x00	; 0
    3532:	bc 01       	movw	r22, r24
    3534:	55 27       	eor	r21, r21
    3536:	44 27       	eor	r20, r20
    3538:	8f a9       	ldd	r24, Y+55	; 0x37
    353a:	98 ad       	ldd	r25, Y+56	; 0x38
    353c:	a0 e0       	ldi	r26, 0x00	; 0
    353e:	b0 e0       	ldi	r27, 0x00	; 0
    3540:	84 2b       	or	r24, r20
    3542:	95 2b       	or	r25, r21
    3544:	a6 2b       	or	r26, r22
    3546:	b7 2b       	or	r27, r23
    3548:	f8 01       	movw	r30, r16
    354a:	80 a3       	std	Z+32, r24	; 0x20
    354c:	91 a3       	std	Z+33, r25	; 0x21
    354e:	a2 a3       	std	Z+34, r26	; 0x22
    3550:	b3 a3       	std	Z+35, r27	; 0x23
    3552:	89 ad       	ldd	r24, Y+57	; 0x39
    3554:	9a ad       	ldd	r25, Y+58	; 0x3a
    3556:	ab ad       	ldd	r26, Y+59	; 0x3b
    3558:	bc ad       	ldd	r27, Y+60	; 0x3c
    355a:	84 8f       	std	Z+28, r24	; 0x1c
    355c:	95 8f       	std	Z+29, r25	; 0x1d
    355e:	a6 8f       	std	Z+30, r26	; 0x1e
    3560:	b7 8f       	std	Z+31, r27	; 0x1f
    3562:	10 8e       	std	Z+24, r1	; 0x18
    3564:	11 8e       	std	Z+25, r1	; 0x19
    3566:	12 8e       	std	Z+26, r1	; 0x1a
    3568:	13 8e       	std	Z+27, r1	; 0x1b
    356a:	81 e0       	ldi	r24, 0x01	; 1
    356c:	82 83       	std	Z+2, r24	; 0x02
    356e:	80 e0       	ldi	r24, 0x00	; 0
    3570:	05 c0       	rjmp	.+10     	; 0x357c <pf_open+0xa2>
    3572:	86 e0       	ldi	r24, 0x06	; 6
    3574:	03 c0       	rjmp	.+6      	; 0x357c <pf_open+0xa2>
    3576:	83 e0       	ldi	r24, 0x03	; 3
    3578:	01 c0       	rjmp	.+2      	; 0x357c <pf_open+0xa2>
    357a:	83 e0       	ldi	r24, 0x03	; 3
    357c:	ec 96       	adiw	r28, 0x3c	; 60
    357e:	0f b6       	in	r0, 0x3f	; 63
    3580:	f8 94       	cli
    3582:	de bf       	out	0x3e, r29	; 62
    3584:	0f be       	out	0x3f, r0	; 63
    3586:	cd bf       	out	0x3d, r28	; 61
    3588:	df 91       	pop	r29
    358a:	cf 91       	pop	r28
    358c:	1f 91       	pop	r17
    358e:	0f 91       	pop	r16
    3590:	08 95       	ret

00003592 <pf_read>:
    3592:	2f 92       	push	r2
    3594:	3f 92       	push	r3
    3596:	4f 92       	push	r4
    3598:	5f 92       	push	r5
    359a:	6f 92       	push	r6
    359c:	7f 92       	push	r7
    359e:	8f 92       	push	r8
    35a0:	9f 92       	push	r9
    35a2:	af 92       	push	r10
    35a4:	bf 92       	push	r11
    35a6:	cf 92       	push	r12
    35a8:	df 92       	push	r13
    35aa:	ef 92       	push	r14
    35ac:	ff 92       	push	r15
    35ae:	0f 93       	push	r16
    35b0:	1f 93       	push	r17
    35b2:	cf 93       	push	r28
    35b4:	df 93       	push	r29
    35b6:	3c 01       	movw	r6, r24
    35b8:	6b 01       	movw	r12, r22
    35ba:	4a 01       	movw	r8, r20
    35bc:	e0 90 fe 02 	lds	r14, 0x02FE	; 0x8002fe <FatFs>
    35c0:	f0 90 ff 02 	lds	r15, 0x02FF	; 0x8002ff <FatFs+0x1>
    35c4:	fa 01       	movw	r30, r20
    35c6:	11 82       	std	Z+1, r1	; 0x01
    35c8:	10 82       	st	Z, r1
    35ca:	e1 14       	cp	r14, r1
    35cc:	f1 04       	cpc	r15, r1
    35ce:	09 f4       	brne	.+2      	; 0x35d2 <pf_read+0x40>
    35d0:	bb c0       	rjmp	.+374    	; 0x3748 <pf_read+0x1b6>
    35d2:	f7 01       	movw	r30, r14
    35d4:	82 81       	ldd	r24, Z+2	; 0x02
    35d6:	80 ff       	sbrs	r24, 0
    35d8:	b9 c0       	rjmp	.+370    	; 0x374c <pf_read+0x1ba>
    35da:	84 8d       	ldd	r24, Z+28	; 0x1c
    35dc:	95 8d       	ldd	r25, Z+29	; 0x1d
    35de:	a6 8d       	ldd	r26, Z+30	; 0x1e
    35e0:	b7 8d       	ldd	r27, Z+31	; 0x1f
    35e2:	40 8d       	ldd	r20, Z+24	; 0x18
    35e4:	51 8d       	ldd	r21, Z+25	; 0x19
    35e6:	62 8d       	ldd	r22, Z+26	; 0x1a
    35e8:	73 8d       	ldd	r23, Z+27	; 0x1b
    35ea:	84 1b       	sub	r24, r20
    35ec:	95 0b       	sbc	r25, r21
    35ee:	a6 0b       	sbc	r26, r22
    35f0:	b7 0b       	sbc	r27, r23
    35f2:	a6 01       	movw	r20, r12
    35f4:	60 e0       	ldi	r22, 0x00	; 0
    35f6:	70 e0       	ldi	r23, 0x00	; 0
    35f8:	84 17       	cp	r24, r20
    35fa:	95 07       	cpc	r25, r21
    35fc:	a6 07       	cpc	r26, r22
    35fe:	b7 07       	cpc	r27, r23
    3600:	08 f4       	brcc	.+2      	; 0x3604 <pf_read+0x72>
    3602:	6c 01       	movw	r12, r24
    3604:	53 01       	movw	r10, r6
    3606:	96 c0       	rjmp	.+300    	; 0x3734 <pf_read+0x1a2>
    3608:	f7 01       	movw	r30, r14
    360a:	20 8c       	ldd	r2, Z+24	; 0x18
    360c:	31 8c       	ldd	r3, Z+25	; 0x19
    360e:	42 8c       	ldd	r4, Z+26	; 0x1a
    3610:	53 8c       	ldd	r5, Z+27	; 0x1b
    3612:	d2 01       	movw	r26, r4
    3614:	c1 01       	movw	r24, r2
    3616:	91 70       	andi	r25, 0x01	; 1
    3618:	aa 27       	eor	r26, r26
    361a:	bb 27       	eor	r27, r27
    361c:	89 2b       	or	r24, r25
    361e:	8a 2b       	or	r24, r26
    3620:	8b 2b       	or	r24, r27
    3622:	09 f0       	breq	.+2      	; 0x3626 <pf_read+0x94>
    3624:	4e c0       	rjmp	.+156    	; 0x36c2 <pf_read+0x130>
    3626:	21 81       	ldd	r18, Z+1	; 0x01
    3628:	30 e0       	ldi	r19, 0x00	; 0
    362a:	40 e0       	ldi	r20, 0x00	; 0
    362c:	50 e0       	ldi	r21, 0x00	; 0
    362e:	c2 01       	movw	r24, r4
    3630:	b1 01       	movw	r22, r2
    3632:	05 2e       	mov	r0, r21
    3634:	59 e0       	ldi	r21, 0x09	; 9
    3636:	96 95       	lsr	r25
    3638:	87 95       	ror	r24
    363a:	77 95       	ror	r23
    363c:	67 95       	ror	r22
    363e:	5a 95       	dec	r21
    3640:	d1 f7       	brne	.-12     	; 0x3636 <pf_read+0xa4>
    3642:	50 2d       	mov	r21, r0
    3644:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <__udivmodsi4>
    3648:	67 2b       	or	r22, r23
    364a:	68 2b       	or	r22, r24
    364c:	69 2b       	or	r22, r25
    364e:	e9 f4       	brne	.+58     	; 0x368a <pf_read+0xf8>
    3650:	23 28       	or	r2, r3
    3652:	24 28       	or	r2, r4
    3654:	25 28       	or	r2, r5
    3656:	31 f4       	brne	.+12     	; 0x3664 <pf_read+0xd2>
    3658:	f7 01       	movw	r30, r14
    365a:	60 a1       	ldd	r22, Z+32	; 0x20
    365c:	71 a1       	ldd	r23, Z+33	; 0x21
    365e:	82 a1       	ldd	r24, Z+34	; 0x22
    3660:	93 a1       	ldd	r25, Z+35	; 0x23
    3662:	07 c0       	rjmp	.+14     	; 0x3672 <pf_read+0xe0>
    3664:	f7 01       	movw	r30, r14
    3666:	64 a1       	ldd	r22, Z+36	; 0x24
    3668:	75 a1       	ldd	r23, Z+37	; 0x25
    366a:	86 a1       	ldd	r24, Z+38	; 0x26
    366c:	97 a1       	ldd	r25, Z+39	; 0x27
    366e:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <get_fat>
    3672:	62 30       	cpi	r22, 0x02	; 2
    3674:	71 05       	cpc	r23, r1
    3676:	81 05       	cpc	r24, r1
    3678:	91 05       	cpc	r25, r1
    367a:	08 f4       	brcc	.+2      	; 0x367e <pf_read+0xec>
    367c:	61 c0       	rjmp	.+194    	; 0x3740 <pf_read+0x1ae>
    367e:	f7 01       	movw	r30, r14
    3680:	64 a3       	std	Z+36, r22	; 0x24
    3682:	75 a3       	std	Z+37, r23	; 0x25
    3684:	86 a3       	std	Z+38, r24	; 0x26
    3686:	97 a3       	std	Z+39, r25	; 0x27
    3688:	13 82       	std	Z+3, r1	; 0x03
    368a:	f7 01       	movw	r30, r14
    368c:	64 a1       	ldd	r22, Z+36	; 0x24
    368e:	75 a1       	ldd	r23, Z+37	; 0x25
    3690:	86 a1       	ldd	r24, Z+38	; 0x26
    3692:	97 a1       	ldd	r25, Z+39	; 0x27
    3694:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <clust2sect>
    3698:	61 15       	cp	r22, r1
    369a:	71 05       	cpc	r23, r1
    369c:	81 05       	cpc	r24, r1
    369e:	91 05       	cpc	r25, r1
    36a0:	09 f4       	brne	.+2      	; 0x36a4 <pf_read+0x112>
    36a2:	4e c0       	rjmp	.+156    	; 0x3740 <pf_read+0x1ae>
    36a4:	f7 01       	movw	r30, r14
    36a6:	23 81       	ldd	r18, Z+3	; 0x03
    36a8:	31 e0       	ldi	r19, 0x01	; 1
    36aa:	32 0f       	add	r19, r18
    36ac:	33 83       	std	Z+3, r19	; 0x03
    36ae:	dc 01       	movw	r26, r24
    36b0:	cb 01       	movw	r24, r22
    36b2:	82 0f       	add	r24, r18
    36b4:	91 1d       	adc	r25, r1
    36b6:	a1 1d       	adc	r26, r1
    36b8:	b1 1d       	adc	r27, r1
    36ba:	80 a7       	std	Z+40, r24	; 0x28
    36bc:	91 a7       	std	Z+41, r25	; 0x29
    36be:	a2 a7       	std	Z+42, r26	; 0x2a
    36c0:	b3 a7       	std	Z+43, r27	; 0x2b
    36c2:	f7 01       	movw	r30, r14
    36c4:	80 8d       	ldd	r24, Z+24	; 0x18
    36c6:	91 8d       	ldd	r25, Z+25	; 0x19
    36c8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    36ca:	b3 8d       	ldd	r27, Z+27	; 0x1b
    36cc:	9c 01       	movw	r18, r24
    36ce:	31 70       	andi	r19, 0x01	; 1
    36d0:	c0 e0       	ldi	r28, 0x00	; 0
    36d2:	d2 e0       	ldi	r29, 0x02	; 2
    36d4:	c2 1b       	sub	r28, r18
    36d6:	d3 0b       	sbc	r29, r19
    36d8:	cc 16       	cp	r12, r28
    36da:	dd 06       	cpc	r13, r29
    36dc:	08 f4       	brcc	.+2      	; 0x36e0 <pf_read+0x14e>
    36de:	e6 01       	movw	r28, r12
    36e0:	f7 01       	movw	r30, r14
    36e2:	40 a5       	ldd	r20, Z+40	; 0x28
    36e4:	51 a5       	ldd	r21, Z+41	; 0x29
    36e6:	62 a5       	ldd	r22, Z+42	; 0x2a
    36e8:	73 a5       	ldd	r23, Z+43	; 0x2b
    36ea:	61 14       	cp	r6, r1
    36ec:	71 04       	cpc	r7, r1
    36ee:	19 f4       	brne	.+6      	; 0x36f6 <pf_read+0x164>
    36f0:	80 e0       	ldi	r24, 0x00	; 0
    36f2:	90 e0       	ldi	r25, 0x00	; 0
    36f4:	02 c0       	rjmp	.+4      	; 0x36fa <pf_read+0x168>
    36f6:	8a 2d       	mov	r24, r10
    36f8:	9b 2d       	mov	r25, r11
    36fa:	8e 01       	movw	r16, r28
    36fc:	0e 94 68 13 	call	0x26d0	; 0x26d0 <disk_readp>
    3700:	81 11       	cpse	r24, r1
    3702:	1e c0       	rjmp	.+60     	; 0x3740 <pf_read+0x1ae>
    3704:	f7 01       	movw	r30, r14
    3706:	80 8d       	ldd	r24, Z+24	; 0x18
    3708:	91 8d       	ldd	r25, Z+25	; 0x19
    370a:	a2 8d       	ldd	r26, Z+26	; 0x1a
    370c:	b3 8d       	ldd	r27, Z+27	; 0x1b
    370e:	8c 0f       	add	r24, r28
    3710:	9d 1f       	adc	r25, r29
    3712:	a1 1d       	adc	r26, r1
    3714:	b1 1d       	adc	r27, r1
    3716:	80 8f       	std	Z+24, r24	; 0x18
    3718:	91 8f       	std	Z+25, r25	; 0x19
    371a:	a2 8f       	std	Z+26, r26	; 0x1a
    371c:	b3 8f       	std	Z+27, r27	; 0x1b
    371e:	ac 0e       	add	r10, r28
    3720:	bd 1e       	adc	r11, r29
    3722:	cc 1a       	sub	r12, r28
    3724:	dd 0a       	sbc	r13, r29
    3726:	f4 01       	movw	r30, r8
    3728:	80 81       	ld	r24, Z
    372a:	91 81       	ldd	r25, Z+1	; 0x01
    372c:	c8 0f       	add	r28, r24
    372e:	d9 1f       	adc	r29, r25
    3730:	d1 83       	std	Z+1, r29	; 0x01
    3732:	c0 83       	st	Z, r28
    3734:	c1 14       	cp	r12, r1
    3736:	d1 04       	cpc	r13, r1
    3738:	09 f0       	breq	.+2      	; 0x373c <pf_read+0x1aa>
    373a:	66 cf       	rjmp	.-308    	; 0x3608 <pf_read+0x76>
    373c:	80 e0       	ldi	r24, 0x00	; 0
    373e:	07 c0       	rjmp	.+14     	; 0x374e <pf_read+0x1bc>
    3740:	f7 01       	movw	r30, r14
    3742:	12 82       	std	Z+2, r1	; 0x02
    3744:	81 e0       	ldi	r24, 0x01	; 1
    3746:	03 c0       	rjmp	.+6      	; 0x374e <pf_read+0x1bc>
    3748:	86 e0       	ldi	r24, 0x06	; 6
    374a:	01 c0       	rjmp	.+2      	; 0x374e <pf_read+0x1bc>
    374c:	85 e0       	ldi	r24, 0x05	; 5
    374e:	df 91       	pop	r29
    3750:	cf 91       	pop	r28
    3752:	1f 91       	pop	r17
    3754:	0f 91       	pop	r16
    3756:	ff 90       	pop	r15
    3758:	ef 90       	pop	r14
    375a:	df 90       	pop	r13
    375c:	cf 90       	pop	r12
    375e:	bf 90       	pop	r11
    3760:	af 90       	pop	r10
    3762:	9f 90       	pop	r9
    3764:	8f 90       	pop	r8
    3766:	7f 90       	pop	r7
    3768:	6f 90       	pop	r6
    376a:	5f 90       	pop	r5
    376c:	4f 90       	pop	r4
    376e:	3f 90       	pop	r3
    3770:	2f 90       	pop	r2
    3772:	08 95       	ret

00003774 <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    3774:	4f 92       	push	r4
    3776:	5f 92       	push	r5
    3778:	6f 92       	push	r6
    377a:	7f 92       	push	r7
    377c:	8f 92       	push	r8
    377e:	9f 92       	push	r9
    3780:	af 92       	push	r10
    3782:	bf 92       	push	r11
    3784:	cf 92       	push	r12
    3786:	df 92       	push	r13
    3788:	ef 92       	push	r14
    378a:	ff 92       	push	r15
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
    3790:	00 d0       	rcall	.+0      	; 0x3792 <pf_lseek+0x1e>
    3792:	00 d0       	rcall	.+0      	; 0x3794 <pf_lseek+0x20>
    3794:	00 d0       	rcall	.+0      	; 0x3796 <pf_lseek+0x22>
    3796:	cd b7       	in	r28, 0x3d	; 61
    3798:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    379a:	20 91 fe 02 	lds	r18, 0x02FE	; 0x8002fe <FatFs>
    379e:	30 91 ff 02 	lds	r19, 0x02FF	; 0x8002ff <FatFs+0x1>
    37a2:	3e 83       	std	Y+6, r19	; 0x06
    37a4:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    37a6:	21 15       	cp	r18, r1
    37a8:	31 05       	cpc	r19, r1
    37aa:	09 f4       	brne	.+2      	; 0x37ae <pf_lseek+0x3a>
    37ac:	f4 c0       	rjmp	.+488    	; 0x3996 <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    37ae:	d9 01       	movw	r26, r18
    37b0:	12 96       	adiw	r26, 0x02	; 2
    37b2:	2c 91       	ld	r18, X
    37b4:	12 97       	sbiw	r26, 0x02	; 2
    37b6:	20 ff       	sbrs	r18, 0
    37b8:	f0 c0       	rjmp	.+480    	; 0x399a <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    37ba:	5c 96       	adiw	r26, 0x1c	; 28
    37bc:	cd 90       	ld	r12, X+
    37be:	dd 90       	ld	r13, X+
    37c0:	ed 90       	ld	r14, X+
    37c2:	fc 90       	ld	r15, X
    37c4:	5f 97       	sbiw	r26, 0x1f	; 31
    37c6:	c6 16       	cp	r12, r22
    37c8:	d7 06       	cpc	r13, r23
    37ca:	e8 06       	cpc	r14, r24
    37cc:	f9 06       	cpc	r15, r25
    37ce:	10 f0       	brcs	.+4      	; 0x37d4 <pf_lseek+0x60>
    37d0:	6b 01       	movw	r12, r22
    37d2:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    37d4:	ed 81       	ldd	r30, Y+5	; 0x05
    37d6:	fe 81       	ldd	r31, Y+6	; 0x06
    37d8:	40 8c       	ldd	r4, Z+24	; 0x18
    37da:	51 8c       	ldd	r5, Z+25	; 0x19
    37dc:	62 8c       	ldd	r6, Z+26	; 0x1a
    37de:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    37e0:	10 8e       	std	Z+24, r1	; 0x18
    37e2:	11 8e       	std	Z+25, r1	; 0x19
    37e4:	12 8e       	std	Z+26, r1	; 0x1a
    37e6:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    37e8:	c1 14       	cp	r12, r1
    37ea:	d1 04       	cpc	r13, r1
    37ec:	e1 04       	cpc	r14, r1
    37ee:	f1 04       	cpc	r15, r1
    37f0:	09 f4       	brne	.+2      	; 0x37f4 <pf_lseek+0x80>
    37f2:	d5 c0       	rjmp	.+426    	; 0x399e <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    37f4:	81 80       	ldd	r8, Z+1	; 0x01
    37f6:	91 2c       	mov	r9, r1
    37f8:	a1 2c       	mov	r10, r1
    37fa:	b1 2c       	mov	r11, r1
    37fc:	07 2e       	mov	r0, r23
    37fe:	79 e0       	ldi	r23, 0x09	; 9
    3800:	88 0c       	add	r8, r8
    3802:	99 1c       	adc	r9, r9
    3804:	aa 1c       	adc	r10, r10
    3806:	bb 1c       	adc	r11, r11
    3808:	7a 95       	dec	r23
    380a:	d1 f7       	brne	.-12     	; 0x3800 <pf_lseek+0x8c>
    380c:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    380e:	41 14       	cp	r4, r1
    3810:	51 04       	cpc	r5, r1
    3812:	61 04       	cpc	r6, r1
    3814:	71 04       	cpc	r7, r1
    3816:	09 f4       	brne	.+2      	; 0x381a <pf_lseek+0xa6>
    3818:	40 c0       	rjmp	.+128    	; 0x389a <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    381a:	c7 01       	movw	r24, r14
    381c:	b6 01       	movw	r22, r12
    381e:	61 50       	subi	r22, 0x01	; 1
    3820:	71 09       	sbc	r23, r1
    3822:	81 09       	sbc	r24, r1
    3824:	91 09       	sbc	r25, r1
    3826:	a5 01       	movw	r20, r10
    3828:	94 01       	movw	r18, r8
    382a:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <__udivmodsi4>
    382e:	29 83       	std	Y+1, r18	; 0x01
    3830:	3a 83       	std	Y+2, r19	; 0x02
    3832:	4b 83       	std	Y+3, r20	; 0x03
    3834:	5c 83       	std	Y+4, r21	; 0x04
    3836:	b1 e0       	ldi	r27, 0x01	; 1
    3838:	4b 1a       	sub	r4, r27
    383a:	51 08       	sbc	r5, r1
    383c:	61 08       	sbc	r6, r1
    383e:	71 08       	sbc	r7, r1
    3840:	c3 01       	movw	r24, r6
    3842:	b2 01       	movw	r22, r4
    3844:	a5 01       	movw	r20, r10
    3846:	94 01       	movw	r18, r8
    3848:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    384c:	89 81       	ldd	r24, Y+1	; 0x01
    384e:	9a 81       	ldd	r25, Y+2	; 0x02
    3850:	ab 81       	ldd	r26, Y+3	; 0x03
    3852:	bc 81       	ldd	r27, Y+4	; 0x04
    3854:	82 17       	cp	r24, r18
    3856:	93 07       	cpc	r25, r19
    3858:	a4 07       	cpc	r26, r20
    385a:	b5 07       	cpc	r27, r21
    385c:	f0 f0       	brcs	.+60     	; 0x389a <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    385e:	88 27       	eor	r24, r24
    3860:	99 27       	eor	r25, r25
    3862:	dc 01       	movw	r26, r24
    3864:	88 19       	sub	r24, r8
    3866:	99 09       	sbc	r25, r9
    3868:	aa 09       	sbc	r26, r10
    386a:	bb 09       	sbc	r27, r11
    386c:	48 22       	and	r4, r24
    386e:	59 22       	and	r5, r25
    3870:	6a 22       	and	r6, r26
    3872:	7b 22       	and	r7, r27
    3874:	ad 81       	ldd	r26, Y+5	; 0x05
    3876:	be 81       	ldd	r27, Y+6	; 0x06
    3878:	58 96       	adiw	r26, 0x18	; 24
    387a:	4d 92       	st	X+, r4
    387c:	5d 92       	st	X+, r5
    387e:	6d 92       	st	X+, r6
    3880:	7c 92       	st	X, r7
    3882:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    3884:	c4 18       	sub	r12, r4
    3886:	d5 08       	sbc	r13, r5
    3888:	e6 08       	sbc	r14, r6
    388a:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    388c:	94 96       	adiw	r26, 0x24	; 36
    388e:	6d 91       	ld	r22, X+
    3890:	7d 91       	ld	r23, X+
    3892:	8d 91       	ld	r24, X+
    3894:	9c 91       	ld	r25, X
    3896:	97 97       	sbiw	r26, 0x27	; 39
    3898:	33 c0       	rjmp	.+102    	; 0x3900 <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    389a:	ed 81       	ldd	r30, Y+5	; 0x05
    389c:	fe 81       	ldd	r31, Y+6	; 0x06
    389e:	60 a1       	ldd	r22, Z+32	; 0x20
    38a0:	71 a1       	ldd	r23, Z+33	; 0x21
    38a2:	82 a1       	ldd	r24, Z+34	; 0x22
    38a4:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    38a6:	64 a3       	std	Z+36, r22	; 0x24
    38a8:	75 a3       	std	Z+37, r23	; 0x25
    38aa:	86 a3       	std	Z+38, r24	; 0x26
    38ac:	97 a3       	std	Z+39, r25	; 0x27
    38ae:	28 c0       	rjmp	.+80     	; 0x3900 <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    38b0:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    38b4:	62 30       	cpi	r22, 0x02	; 2
    38b6:	71 05       	cpc	r23, r1
    38b8:	81 05       	cpc	r24, r1
    38ba:	91 05       	cpc	r25, r1
    38bc:	08 f4       	brcc	.+2      	; 0x38c0 <pf_lseek+0x14c>
    38be:	65 c0       	rjmp	.+202    	; 0x398a <pf_lseek+0x216>
    38c0:	ed 81       	ldd	r30, Y+5	; 0x05
    38c2:	fe 81       	ldd	r31, Y+6	; 0x06
    38c4:	40 84       	ldd	r4, Z+8	; 0x08
    38c6:	51 84       	ldd	r5, Z+9	; 0x09
    38c8:	62 84       	ldd	r6, Z+10	; 0x0a
    38ca:	73 84       	ldd	r7, Z+11	; 0x0b
    38cc:	64 15       	cp	r22, r4
    38ce:	75 05       	cpc	r23, r5
    38d0:	86 05       	cpc	r24, r6
    38d2:	97 05       	cpc	r25, r7
    38d4:	08 f0       	brcs	.+2      	; 0x38d8 <pf_lseek+0x164>
    38d6:	59 c0       	rjmp	.+178    	; 0x398a <pf_lseek+0x216>
			fs->curr_clust = clst;
    38d8:	64 a3       	std	Z+36, r22	; 0x24
    38da:	75 a3       	std	Z+37, r23	; 0x25
    38dc:	86 a3       	std	Z+38, r24	; 0x26
    38de:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    38e0:	40 8c       	ldd	r4, Z+24	; 0x18
    38e2:	51 8c       	ldd	r5, Z+25	; 0x19
    38e4:	62 8c       	ldd	r6, Z+26	; 0x1a
    38e6:	73 8c       	ldd	r7, Z+27	; 0x1b
    38e8:	48 0c       	add	r4, r8
    38ea:	59 1c       	adc	r5, r9
    38ec:	6a 1c       	adc	r6, r10
    38ee:	7b 1c       	adc	r7, r11
    38f0:	40 8e       	std	Z+24, r4	; 0x18
    38f2:	51 8e       	std	Z+25, r5	; 0x19
    38f4:	62 8e       	std	Z+26, r6	; 0x1a
    38f6:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    38f8:	c8 18       	sub	r12, r8
    38fa:	d9 08       	sbc	r13, r9
    38fc:	ea 08       	sbc	r14, r10
    38fe:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    3900:	8c 14       	cp	r8, r12
    3902:	9d 04       	cpc	r9, r13
    3904:	ae 04       	cpc	r10, r14
    3906:	bf 04       	cpc	r11, r15
    3908:	98 f2       	brcs	.-90     	; 0x38b0 <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    390a:	ad 81       	ldd	r26, Y+5	; 0x05
    390c:	be 81       	ldd	r27, Y+6	; 0x06
    390e:	58 96       	adiw	r26, 0x18	; 24
    3910:	8d 90       	ld	r8, X+
    3912:	9d 90       	ld	r9, X+
    3914:	ad 90       	ld	r10, X+
    3916:	bc 90       	ld	r11, X
    3918:	5b 97       	sbiw	r26, 0x1b	; 27
    391a:	8c 0c       	add	r8, r12
    391c:	9d 1c       	adc	r9, r13
    391e:	ae 1c       	adc	r10, r14
    3920:	bf 1c       	adc	r11, r15
    3922:	fd 01       	movw	r30, r26
    3924:	80 8e       	std	Z+24, r8	; 0x18
    3926:	91 8e       	std	Z+25, r9	; 0x19
    3928:	a2 8e       	std	Z+26, r10	; 0x1a
    392a:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    392c:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <clust2sect>
		if (!sect) goto fe_abort;
    3930:	61 15       	cp	r22, r1
    3932:	71 05       	cpc	r23, r1
    3934:	81 05       	cpc	r24, r1
    3936:	91 05       	cpc	r25, r1
    3938:	41 f1       	breq	.+80     	; 0x398a <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    393a:	46 01       	movw	r8, r12
    393c:	57 01       	movw	r10, r14
    393e:	07 2e       	mov	r0, r23
    3940:	79 e0       	ldi	r23, 0x09	; 9
    3942:	b6 94       	lsr	r11
    3944:	a7 94       	ror	r10
    3946:	97 94       	ror	r9
    3948:	87 94       	ror	r8
    394a:	7a 95       	dec	r23
    394c:	d1 f7       	brne	.-12     	; 0x3942 <pf_lseek+0x1ce>
    394e:	70 2d       	mov	r23, r0
    3950:	ad 81       	ldd	r26, Y+5	; 0x05
    3952:	be 81       	ldd	r27, Y+6	; 0x06
    3954:	13 96       	adiw	r26, 0x03	; 3
    3956:	8c 92       	st	X, r8
		if (ofs % 512)
    3958:	b1 e0       	ldi	r27, 0x01	; 1
    395a:	db 22       	and	r13, r27
    395c:	ee 24       	eor	r14, r14
    395e:	ff 24       	eor	r15, r15
    3960:	cd 28       	or	r12, r13
    3962:	ce 28       	or	r12, r14
    3964:	cf 28       	or	r12, r15
    3966:	e9 f0       	breq	.+58     	; 0x39a2 <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    3968:	21 e0       	ldi	r18, 0x01	; 1
    396a:	28 0d       	add	r18, r8
    396c:	ed 81       	ldd	r30, Y+5	; 0x05
    396e:	fe 81       	ldd	r31, Y+6	; 0x06
    3970:	23 83       	std	Z+3, r18	; 0x03
    3972:	dc 01       	movw	r26, r24
    3974:	cb 01       	movw	r24, r22
    3976:	88 0d       	add	r24, r8
    3978:	91 1d       	adc	r25, r1
    397a:	a1 1d       	adc	r26, r1
    397c:	b1 1d       	adc	r27, r1
    397e:	80 a7       	std	Z+40, r24	; 0x28
    3980:	91 a7       	std	Z+41, r25	; 0x29
    3982:	a2 a7       	std	Z+42, r26	; 0x2a
    3984:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    3986:	80 e0       	ldi	r24, 0x00	; 0
    3988:	0d c0       	rjmp	.+26     	; 0x39a4 <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    398a:	ad 81       	ldd	r26, Y+5	; 0x05
    398c:	be 81       	ldd	r27, Y+6	; 0x06
    398e:	12 96       	adiw	r26, 0x02	; 2
    3990:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    3992:	81 e0       	ldi	r24, 0x01	; 1
    3994:	07 c0       	rjmp	.+14     	; 0x39a4 <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    3996:	86 e0       	ldi	r24, 0x06	; 6
    3998:	05 c0       	rjmp	.+10     	; 0x39a4 <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    399a:	85 e0       	ldi	r24, 0x05	; 5
    399c:	03 c0       	rjmp	.+6      	; 0x39a4 <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    399e:	80 e0       	ldi	r24, 0x00	; 0
    39a0:	01 c0       	rjmp	.+2      	; 0x39a4 <pf_lseek+0x230>
    39a2:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    39a4:	26 96       	adiw	r28, 0x06	; 6
    39a6:	0f b6       	in	r0, 0x3f	; 63
    39a8:	f8 94       	cli
    39aa:	de bf       	out	0x3e, r29	; 62
    39ac:	0f be       	out	0x3f, r0	; 63
    39ae:	cd bf       	out	0x3d, r28	; 61
    39b0:	df 91       	pop	r29
    39b2:	cf 91       	pop	r28
    39b4:	ff 90       	pop	r15
    39b6:	ef 90       	pop	r14
    39b8:	df 90       	pop	r13
    39ba:	cf 90       	pop	r12
    39bc:	bf 90       	pop	r11
    39be:	af 90       	pop	r10
    39c0:	9f 90       	pop	r9
    39c2:	8f 90       	pop	r8
    39c4:	7f 90       	pop	r7
    39c6:	6f 90       	pop	r6
    39c8:	5f 90       	pop	r5
    39ca:	4f 90       	pop	r4
    39cc:	08 95       	ret

000039ce <RTC_ConvertFromDec>:
	unsigned char ch = ((c/10)<<4)|(c%10);
	return ch;
}
unsigned char RTC_ConvertFromDec(unsigned char c)//перевод в дес€тичный формат
{
	unsigned char ch = ((c>>4)*10+(0b00001111&c));
    39ce:	98 2f       	mov	r25, r24
    39d0:	92 95       	swap	r25
    39d2:	9f 70       	andi	r25, 0x0F	; 15
    39d4:	99 0f       	add	r25, r25
    39d6:	29 2f       	mov	r18, r25
    39d8:	22 0f       	add	r18, r18
    39da:	22 0f       	add	r18, r18
    39dc:	92 0f       	add	r25, r18
    39de:	8f 70       	andi	r24, 0x0F	; 15
	return ch;
}
    39e0:	89 0f       	add	r24, r25
    39e2:	08 95       	ret

000039e4 <RTC_init>:
// инициализаци€ начальных установок
void RTC_init(void){
	I2C_StartCondition();               // запуск i2c
    39e4:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <I2C_StartCondition>
	I2C_SendByte(0b11010000);   // передача адреса устройства, режим записи
    39e8:	80 ed       	ldi	r24, 0xD0	; 208
    39ea:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
	I2C_SendByte(0x0E);            // передача адреса пам€ти
    39ee:	8e e0       	ldi	r24, 0x0E	; 14
    39f0:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
	I2C_SendByte(0b00100000);      // запустить преобразование температуры и выход на 1 √ц
    39f4:	80 e2       	ldi	r24, 0x20	; 32
    39f6:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
	I2C_SendByte(0b00001000);      // разрешить выход 32 к√ц
    39fa:	88 e0       	ldi	r24, 0x08	; 8
    39fc:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    3a00:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <I2C_StopCondition>
    3a04:	08 95       	ret

00003a06 <I2C_Init>:
{
    I2C_StartCondition(); // ќтправим условие START
	I2C_SendByte(addr); // ќтправим в шину адрес устройства + бит чтени€-записи
	I2C_SendByte(c);// ќтправим байт данных
	I2C_StopCondition();// ќтправим условие STOP
}
    3a06:	80 e2       	ldi	r24, 0x20	; 32
    3a08:	80 b9       	out	0x00, r24	; 0
    3a0a:	08 95       	ret

00003a0c <I2C_StartCondition>:
    3a0c:	84 ea       	ldi	r24, 0xA4	; 164
    3a0e:	86 bf       	out	0x36, r24	; 54
    3a10:	06 b6       	in	r0, 0x36	; 54
    3a12:	07 fe       	sbrs	r0, 7
    3a14:	fd cf       	rjmp	.-6      	; 0x3a10 <I2C_StartCondition+0x4>
    3a16:	08 95       	ret

00003a18 <I2C_StopCondition>:
    3a18:	84 e9       	ldi	r24, 0x94	; 148
    3a1a:	86 bf       	out	0x36, r24	; 54
    3a1c:	08 95       	ret

00003a1e <I2C_SendByte>:
    3a1e:	83 b9       	out	0x03, r24	; 3
    3a20:	84 e8       	ldi	r24, 0x84	; 132
    3a22:	86 bf       	out	0x36, r24	; 54
    3a24:	06 b6       	in	r0, 0x36	; 54
    3a26:	07 fe       	sbrs	r0, 7
    3a28:	fd cf       	rjmp	.-6      	; 0x3a24 <I2C_SendByte+0x6>
    3a2a:	08 95       	ret

00003a2c <I2C_ReadByte>:
unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    3a2c:	84 ec       	ldi	r24, 0xC4	; 196
    3a2e:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    3a30:	06 b6       	in	r0, 0x36	; 54
    3a32:	07 fe       	sbrs	r0, 7
    3a34:	fd cf       	rjmp	.-6      	; 0x3a30 <I2C_ReadByte+0x4>
	return TWDR;//читаем регистр данных
    3a36:	83 b1       	in	r24, 0x03	; 3
}
    3a38:	08 95       	ret

00003a3a <I2C_ReadLastByte>:
unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
    3a3a:	84 e8       	ldi	r24, 0x84	; 132
    3a3c:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    3a3e:	06 b6       	in	r0, 0x36	; 54
    3a40:	07 fe       	sbrs	r0, 7
    3a42:	fd cf       	rjmp	.-6      	; 0x3a3e <I2C_ReadLastByte+0x4>
	return TWDR;//читаем регистр данных
    3a44:	83 b1       	in	r24, 0x03	; 3
    3a46:	08 95       	ret

00003a48 <USART_Init>:

extern uint8_t rx_flag;

void USART_Init( unsigned int speed)//»нициализаци€ модул€ USART
{	
  UBRRH = (unsigned char)(speed>>8);
    3a48:	90 bd       	out	0x20, r25	; 32
  UBRRL = (unsigned char)speed;
    3a4a:	89 b9       	out	0x09, r24	; 9
  UCSRB |= (1<<RXEN)|( 1<<TXEN); //¬ключаем прием и передачу по USART
    3a4c:	8a b1       	in	r24, 0x0a	; 10
    3a4e:	88 61       	ori	r24, 0x18	; 24
    3a50:	8a b9       	out	0x0a, r24	; 10
  //UCSR0B |= (1<<RXCIE0); //–азрешаем прерывание при приеме
  UCSRA |= (1<<U2X); // ƒл€ 8 мгц, удвоение скорости
    3a52:	8b b1       	in	r24, 0x0b	; 11
    3a54:	82 60       	ori	r24, 0x02	; 2
    3a56:	8b b9       	out	0x0b, r24	; 11
  UCSRC |= (1<<URSEL)|(1<<USBS)|(1<<UCSZ1)|(1<<UCSZ0);// ќбращаемс€ именно к регистру UCSRC (URSEL=1),
    3a58:	80 b5       	in	r24, 0x20	; 32
    3a5a:	8e 68       	ori	r24, 0x8E	; 142
    3a5c:	80 bd       	out	0x20, r24	; 32
    3a5e:	08 95       	ret

00003a60 <Print_Boards_Main>:
		n = 0;
	}
	speed = 2*314*RADIUS*n/4; //период 2 сек+2 магнита
	
	return speed;
}
    3a60:	2f 92       	push	r2
    3a62:	3f 92       	push	r3
    3a64:	4f 92       	push	r4
    3a66:	5f 92       	push	r5
    3a68:	6f 92       	push	r6
    3a6a:	7f 92       	push	r7
    3a6c:	8f 92       	push	r8
    3a6e:	9f 92       	push	r9
    3a70:	af 92       	push	r10
    3a72:	bf 92       	push	r11
    3a74:	cf 92       	push	r12
    3a76:	df 92       	push	r13
    3a78:	ef 92       	push	r14
    3a7a:	ff 92       	push	r15
    3a7c:	0f 93       	push	r16
    3a7e:	1f 93       	push	r17
    3a80:	cf 93       	push	r28
    3a82:	df 93       	push	r29
    3a84:	0f ef       	ldi	r16, 0xFF	; 255
    3a86:	1f ef       	ldi	r17, 0xFF	; 255
    3a88:	21 e0       	ldi	r18, 0x01	; 1
    3a8a:	30 e0       	ldi	r19, 0x00	; 0
    3a8c:	40 ed       	ldi	r20, 0xD0	; 208
    3a8e:	51 e0       	ldi	r21, 0x01	; 1
    3a90:	61 e0       	ldi	r22, 0x01	; 1
    3a92:	70 e0       	ldi	r23, 0x00	; 0
    3a94:	8f e0       	ldi	r24, 0x0F	; 15
    3a96:	90 e0       	ldi	r25, 0x00	; 0
    3a98:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3a9c:	0f 2e       	mov	r0, r31
    3a9e:	fe e0       	ldi	r31, 0x0E	; 14
    3aa0:	cf 2e       	mov	r12, r31
    3aa2:	d1 2c       	mov	r13, r1
    3aa4:	f0 2d       	mov	r31, r0
    3aa6:	e1 2c       	mov	r14, r1
    3aa8:	f1 2c       	mov	r15, r1
    3aaa:	0f 2e       	mov	r0, r31
    3aac:	f4 ee       	ldi	r31, 0xE4	; 228
    3aae:	8f 2e       	mov	r8, r31
    3ab0:	99 24       	eor	r9, r9
    3ab2:	9a 94       	dec	r9
    3ab4:	f0 2d       	mov	r31, r0
    3ab6:	aa 24       	eor	r10, r10
    3ab8:	a3 94       	inc	r10
    3aba:	b1 2c       	mov	r11, r1
    3abc:	03 ef       	ldi	r16, 0xF3	; 243
    3abe:	1f ef       	ldi	r17, 0xFF	; 255
    3ac0:	25 c0       	rjmp	.+74     	; 0x3b0c <Print_Boards_Main+0xac>
    3ac2:	11 23       	and	r17, r17
    3ac4:	44 f0       	brlt	.+16     	; 0x3ad6 <Print_Boards_Main+0x76>
    3ac6:	21 e0       	ldi	r18, 0x01	; 1
    3ac8:	c2 1a       	sub	r12, r18
    3aca:	d1 08       	sbc	r13, r1
    3acc:	82 e0       	ldi	r24, 0x02	; 2
    3ace:	88 0e       	add	r8, r24
    3ad0:	91 1c       	adc	r9, r1
    3ad2:	08 0d       	add	r16, r8
    3ad4:	19 1d       	adc	r17, r9
    3ad6:	2f ef       	ldi	r18, 0xFF	; 255
    3ad8:	e2 1a       	sub	r14, r18
    3ada:	f2 0a       	sbc	r15, r18
    3adc:	82 e0       	ldi	r24, 0x02	; 2
    3ade:	a8 0e       	add	r10, r24
    3ae0:	b1 1c       	adc	r11, r1
    3ae2:	0a 0d       	add	r16, r10
    3ae4:	1b 1d       	adc	r17, r11
    3ae6:	cf e0       	ldi	r28, 0x0F	; 15
    3ae8:	d0 e0       	ldi	r29, 0x00	; 0
    3aea:	3e 01       	movw	r6, r28
    3aec:	6c 18       	sub	r6, r12
    3aee:	7d 08       	sbc	r7, r13
    3af0:	ce 19       	sub	r28, r14
    3af2:	df 09       	sbc	r29, r15
    3af4:	4f ef       	ldi	r20, 0xFF	; 255
    3af6:	5f ef       	ldi	r21, 0xFF	; 255
    3af8:	b3 01       	movw	r22, r6
    3afa:	ce 01       	movw	r24, r28
    3afc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3b00:	4f ef       	ldi	r20, 0xFF	; 255
    3b02:	5f ef       	ldi	r21, 0xFF	; 255
    3b04:	be 01       	movw	r22, r28
    3b06:	c3 01       	movw	r24, r6
    3b08:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3b0c:	ec 14       	cp	r14, r12
    3b0e:	fd 04       	cpc	r15, r13
    3b10:	c4 f2       	brlt	.-80     	; 0x3ac2 <Print_Boards_Main+0x62>
    3b12:	0f ef       	ldi	r16, 0xFF	; 255
    3b14:	1f ef       	ldi	r17, 0xFF	; 255
    3b16:	20 e3       	ldi	r18, 0x30	; 48
    3b18:	31 e0       	ldi	r19, 0x01	; 1
    3b1a:	4e ed       	ldi	r20, 0xDE	; 222
    3b1c:	51 e0       	ldi	r21, 0x01	; 1
    3b1e:	6f e0       	ldi	r22, 0x0F	; 15
    3b20:	70 e0       	ldi	r23, 0x00	; 0
    3b22:	8e ed       	ldi	r24, 0xDE	; 222
    3b24:	91 e0       	ldi	r25, 0x01	; 1
    3b26:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3b2a:	0e e0       	ldi	r16, 0x0E	; 14
    3b2c:	10 e0       	ldi	r17, 0x00	; 0
    3b2e:	80 e0       	ldi	r24, 0x00	; 0
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	0f 2e       	mov	r0, r31
    3b34:	f4 ee       	ldi	r31, 0xE4	; 228
    3b36:	8f 2e       	mov	r8, r31
    3b38:	99 24       	eor	r9, r9
    3b3a:	9a 94       	dec	r9
    3b3c:	f0 2d       	mov	r31, r0
    3b3e:	cc 24       	eor	r12, r12
    3b40:	c3 94       	inc	r12
    3b42:	d1 2c       	mov	r13, r1
    3b44:	0f 2e       	mov	r0, r31
    3b46:	f3 ef       	ldi	r31, 0xF3	; 243
    3b48:	ef 2e       	mov	r14, r31
    3b4a:	ff 24       	eor	r15, r15
    3b4c:	fa 94       	dec	r15
    3b4e:	f0 2d       	mov	r31, r0
    3b50:	28 c0       	rjmp	.+80     	; 0x3ba2 <Print_Boards_Main+0x142>
    3b52:	ff 20       	and	r15, r15
    3b54:	3c f0       	brlt	.+14     	; 0x3b64 <Print_Boards_Main+0x104>
    3b56:	01 50       	subi	r16, 0x01	; 1
    3b58:	11 09       	sbc	r17, r1
    3b5a:	22 e0       	ldi	r18, 0x02	; 2
    3b5c:	82 0e       	add	r8, r18
    3b5e:	91 1c       	adc	r9, r1
    3b60:	e8 0c       	add	r14, r8
    3b62:	f9 1c       	adc	r15, r9
    3b64:	5c 01       	movw	r10, r24
    3b66:	2f ef       	ldi	r18, 0xFF	; 255
    3b68:	a2 1a       	sub	r10, r18
    3b6a:	b2 0a       	sbc	r11, r18
    3b6c:	22 e0       	ldi	r18, 0x02	; 2
    3b6e:	c2 0e       	add	r12, r18
    3b70:	d1 1c       	adc	r13, r1
    3b72:	ec 0c       	add	r14, r12
    3b74:	fd 1c       	adc	r15, r13
    3b76:	cf e0       	ldi	r28, 0x0F	; 15
    3b78:	d0 e0       	ldi	r29, 0x00	; 0
    3b7a:	be 01       	movw	r22, r28
    3b7c:	60 1b       	sub	r22, r16
    3b7e:	71 0b       	sbc	r23, r17
    3b80:	4f ef       	ldi	r20, 0xFF	; 255
    3b82:	5f ef       	ldi	r21, 0xFF	; 255
    3b84:	8f 52       	subi	r24, 0x2F	; 47
    3b86:	9e 4f       	sbci	r25, 0xFE	; 254
    3b88:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3b8c:	be 01       	movw	r22, r28
    3b8e:	6a 19       	sub	r22, r10
    3b90:	7b 09       	sbc	r23, r11
    3b92:	4f ef       	ldi	r20, 0xFF	; 255
    3b94:	5f ef       	ldi	r21, 0xFF	; 255
    3b96:	c8 01       	movw	r24, r16
    3b98:	80 53       	subi	r24, 0x30	; 48
    3b9a:	9e 4f       	sbci	r25, 0xFE	; 254
    3b9c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3ba0:	c5 01       	movw	r24, r10
    3ba2:	80 17       	cp	r24, r16
    3ba4:	91 07       	cpc	r25, r17
    3ba6:	ac f2       	brlt	.-86     	; 0x3b52 <Print_Boards_Main+0xf2>
    3ba8:	0f ef       	ldi	r16, 0xFF	; 255
    3baa:	1f ef       	ldi	r17, 0xFF	; 255
    3bac:	20 e3       	ldi	r18, 0x30	; 48
    3bae:	31 e0       	ldi	r19, 0x01	; 1
    3bb0:	41 e0       	ldi	r20, 0x01	; 1
    3bb2:	50 e0       	ldi	r21, 0x00	; 0
    3bb4:	6f e0       	ldi	r22, 0x0F	; 15
    3bb6:	70 e0       	ldi	r23, 0x00	; 0
    3bb8:	81 e0       	ldi	r24, 0x01	; 1
    3bba:	90 e0       	ldi	r25, 0x00	; 0
    3bbc:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3bc0:	0e e0       	ldi	r16, 0x0E	; 14
    3bc2:	10 e0       	ldi	r17, 0x00	; 0
    3bc4:	c0 e0       	ldi	r28, 0x00	; 0
    3bc6:	d0 e0       	ldi	r29, 0x00	; 0
    3bc8:	0f 2e       	mov	r0, r31
    3bca:	f4 ee       	ldi	r31, 0xE4	; 228
    3bcc:	8f 2e       	mov	r8, r31
    3bce:	99 24       	eor	r9, r9
    3bd0:	9a 94       	dec	r9
    3bd2:	f0 2d       	mov	r31, r0
    3bd4:	cc 24       	eor	r12, r12
    3bd6:	c3 94       	inc	r12
    3bd8:	d1 2c       	mov	r13, r1
    3bda:	0f 2e       	mov	r0, r31
    3bdc:	f3 ef       	ldi	r31, 0xF3	; 243
    3bde:	ef 2e       	mov	r14, r31
    3be0:	ff 24       	eor	r15, r15
    3be2:	fa 94       	dec	r15
    3be4:	f0 2d       	mov	r31, r0
    3be6:	2c c0       	rjmp	.+88     	; 0x3c40 <Print_Boards_Main+0x1e0>
    3be8:	ff 20       	and	r15, r15
    3bea:	3c f0       	brlt	.+14     	; 0x3bfa <Print_Boards_Main+0x19a>
    3bec:	01 50       	subi	r16, 0x01	; 1
    3bee:	11 09       	sbc	r17, r1
    3bf0:	82 e0       	ldi	r24, 0x02	; 2
    3bf2:	88 0e       	add	r8, r24
    3bf4:	91 1c       	adc	r9, r1
    3bf6:	e8 0c       	add	r14, r8
    3bf8:	f9 1c       	adc	r15, r9
    3bfa:	3e 01       	movw	r6, r28
    3bfc:	2f ef       	ldi	r18, 0xFF	; 255
    3bfe:	62 1a       	sub	r6, r18
    3c00:	72 0a       	sbc	r7, r18
    3c02:	82 e0       	ldi	r24, 0x02	; 2
    3c04:	c8 0e       	add	r12, r24
    3c06:	d1 1c       	adc	r13, r1
    3c08:	ec 0c       	add	r14, r12
    3c0a:	fd 1c       	adc	r15, r13
    3c0c:	0f 2e       	mov	r0, r31
    3c0e:	ff e0       	ldi	r31, 0x0F	; 15
    3c10:	af 2e       	mov	r10, r31
    3c12:	b1 2c       	mov	r11, r1
    3c14:	f0 2d       	mov	r31, r0
    3c16:	4f ef       	ldi	r20, 0xFF	; 255
    3c18:	5f ef       	ldi	r21, 0xFF	; 255
    3c1a:	b8 01       	movw	r22, r16
    3c1c:	60 5d       	subi	r22, 0xD0	; 208
    3c1e:	7e 4f       	sbci	r23, 0xFE	; 254
    3c20:	c5 01       	movw	r24, r10
    3c22:	86 19       	sub	r24, r6
    3c24:	97 09       	sbc	r25, r7
    3c26:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3c2a:	be 01       	movw	r22, r28
    3c2c:	6f 5c       	subi	r22, 0xCF	; 207
    3c2e:	7e 4f       	sbci	r23, 0xFE	; 254
    3c30:	4f ef       	ldi	r20, 0xFF	; 255
    3c32:	5f ef       	ldi	r21, 0xFF	; 255
    3c34:	c5 01       	movw	r24, r10
    3c36:	80 1b       	sub	r24, r16
    3c38:	91 0b       	sbc	r25, r17
    3c3a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3c3e:	e3 01       	movw	r28, r6
    3c40:	c0 17       	cp	r28, r16
    3c42:	d1 07       	cpc	r29, r17
    3c44:	8c f2       	brlt	.-94     	; 0x3be8 <Print_Boards_Main+0x188>
    3c46:	0f ef       	ldi	r16, 0xFF	; 255
    3c48:	1f ef       	ldi	r17, 0xFF	; 255
    3c4a:	2e e3       	ldi	r18, 0x3E	; 62
    3c4c:	31 e0       	ldi	r19, 0x01	; 1
    3c4e:	40 ed       	ldi	r20, 0xD0	; 208
    3c50:	51 e0       	ldi	r21, 0x01	; 1
    3c52:	6e e3       	ldi	r22, 0x3E	; 62
    3c54:	71 e0       	ldi	r23, 0x01	; 1
    3c56:	8f e0       	ldi	r24, 0x0F	; 15
    3c58:	90 e0       	ldi	r25, 0x00	; 0
    3c5a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3c5e:	0e e0       	ldi	r16, 0x0E	; 14
    3c60:	10 e0       	ldi	r17, 0x00	; 0
    3c62:	c0 e0       	ldi	r28, 0x00	; 0
    3c64:	d0 e0       	ldi	r29, 0x00	; 0
    3c66:	0f 2e       	mov	r0, r31
    3c68:	f4 ee       	ldi	r31, 0xE4	; 228
    3c6a:	8f 2e       	mov	r8, r31
    3c6c:	99 24       	eor	r9, r9
    3c6e:	9a 94       	dec	r9
    3c70:	f0 2d       	mov	r31, r0
    3c72:	cc 24       	eor	r12, r12
    3c74:	c3 94       	inc	r12
    3c76:	d1 2c       	mov	r13, r1
    3c78:	0f 2e       	mov	r0, r31
    3c7a:	f3 ef       	ldi	r31, 0xF3	; 243
    3c7c:	ef 2e       	mov	r14, r31
    3c7e:	ff 24       	eor	r15, r15
    3c80:	fa 94       	dec	r15
    3c82:	f0 2d       	mov	r31, r0
    3c84:	27 c0       	rjmp	.+78     	; 0x3cd4 <Print_Boards_Main+0x274>
    3c86:	ff 20       	and	r15, r15
    3c88:	3c f0       	brlt	.+14     	; 0x3c98 <Print_Boards_Main+0x238>
    3c8a:	01 50       	subi	r16, 0x01	; 1
    3c8c:	11 09       	sbc	r17, r1
    3c8e:	22 e0       	ldi	r18, 0x02	; 2
    3c90:	82 0e       	add	r8, r18
    3c92:	91 1c       	adc	r9, r1
    3c94:	e8 0c       	add	r14, r8
    3c96:	f9 1c       	adc	r15, r9
    3c98:	5e 01       	movw	r10, r28
    3c9a:	8f ef       	ldi	r24, 0xFF	; 255
    3c9c:	a8 1a       	sub	r10, r24
    3c9e:	b8 0a       	sbc	r11, r24
    3ca0:	22 e0       	ldi	r18, 0x02	; 2
    3ca2:	c2 0e       	add	r12, r18
    3ca4:	d1 1c       	adc	r13, r1
    3ca6:	ec 0c       	add	r14, r12
    3ca8:	fd 1c       	adc	r15, r13
    3caa:	4f ef       	ldi	r20, 0xFF	; 255
    3cac:	5f ef       	ldi	r21, 0xFF	; 255
    3cae:	b8 01       	movw	r22, r16
    3cb0:	60 5d       	subi	r22, 0xD0	; 208
    3cb2:	7e 4f       	sbci	r23, 0xFE	; 254
    3cb4:	ce 01       	movw	r24, r28
    3cb6:	8f 52       	subi	r24, 0x2F	; 47
    3cb8:	9e 4f       	sbci	r25, 0xFE	; 254
    3cba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3cbe:	be 01       	movw	r22, r28
    3cc0:	6f 5c       	subi	r22, 0xCF	; 207
    3cc2:	7e 4f       	sbci	r23, 0xFE	; 254
    3cc4:	4f ef       	ldi	r20, 0xFF	; 255
    3cc6:	5f ef       	ldi	r21, 0xFF	; 255
    3cc8:	c8 01       	movw	r24, r16
    3cca:	80 53       	subi	r24, 0x30	; 48
    3ccc:	9e 4f       	sbci	r25, 0xFE	; 254
    3cce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3cd2:	e5 01       	movw	r28, r10
    3cd4:	c0 17       	cp	r28, r16
    3cd6:	d1 07       	cpc	r29, r17
    3cd8:	b4 f2       	brlt	.-84     	; 0x3c86 <Print_Boards_Main+0x226>
    3cda:	0f ef       	ldi	r16, 0xFF	; 255
    3cdc:	1f ef       	ldi	r17, 0xFF	; 255
    3cde:	2c ed       	ldi	r18, 0xDC	; 220
    3ce0:	30 e0       	ldi	r19, 0x00	; 0
    3ce2:	44 ea       	ldi	r20, 0xA4	; 164
    3ce4:	50 e0       	ldi	r21, 0x00	; 0
    3ce6:	6e e3       	ldi	r22, 0x3E	; 62
    3ce8:	71 e0       	ldi	r23, 0x01	; 1
    3cea:	84 ea       	ldi	r24, 0xA4	; 164
    3cec:	90 e0       	ldi	r25, 0x00	; 0
    3cee:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3cf2:	21 ee       	ldi	r18, 0xE1	; 225
    3cf4:	30 e0       	ldi	r19, 0x00	; 0
    3cf6:	48 ea       	ldi	r20, 0xA8	; 168
    3cf8:	50 e0       	ldi	r21, 0x00	; 0
    3cfa:	6e e3       	ldi	r22, 0x3E	; 62
    3cfc:	71 e0       	ldi	r23, 0x01	; 1
    3cfe:	88 ea       	ldi	r24, 0xA8	; 168
    3d00:	90 e0       	ldi	r25, 0x00	; 0
    3d02:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d06:	2c ed       	ldi	r18, 0xDC	; 220
    3d08:	30 e0       	ldi	r19, 0x00	; 0
    3d0a:	45 e5       	ldi	r20, 0x55	; 85
    3d0c:	51 e0       	ldi	r21, 0x01	; 1
    3d0e:	6c ed       	ldi	r22, 0xDC	; 220
    3d10:	70 e0       	ldi	r23, 0x00	; 0
    3d12:	8b e3       	ldi	r24, 0x3B	; 59
    3d14:	91 e0       	ldi	r25, 0x01	; 1
    3d16:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d1a:	2c ed       	ldi	r18, 0xDC	; 220
    3d1c:	30 e0       	ldi	r19, 0x00	; 0
    3d1e:	4a e3       	ldi	r20, 0x3A	; 58
    3d20:	51 e0       	ldi	r21, 0x01	; 1
    3d22:	6e e3       	ldi	r22, 0x3E	; 62
    3d24:	71 e0       	ldi	r23, 0x01	; 1
    3d26:	8a e3       	ldi	r24, 0x3A	; 58
    3d28:	91 e0       	ldi	r25, 0x01	; 1
    3d2a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d2e:	21 ee       	ldi	r18, 0xE1	; 225
    3d30:	30 e0       	ldi	r19, 0x00	; 0
    3d32:	46 e3       	ldi	r20, 0x36	; 54
    3d34:	51 e0       	ldi	r21, 0x01	; 1
    3d36:	6e e3       	ldi	r22, 0x3E	; 62
    3d38:	71 e0       	ldi	r23, 0x01	; 1
    3d3a:	86 e3       	ldi	r24, 0x36	; 54
    3d3c:	91 e0       	ldi	r25, 0x01	; 1
    3d3e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d42:	2c ed       	ldi	r18, 0xDC	; 220
    3d44:	30 e0       	ldi	r19, 0x00	; 0
    3d46:	4e ed       	ldi	r20, 0xDE	; 222
    3d48:	51 e0       	ldi	r21, 0x01	; 1
    3d4a:	6c ed       	ldi	r22, 0xDC	; 220
    3d4c:	70 e0       	ldi	r23, 0x00	; 0
    3d4e:	85 ec       	ldi	r24, 0xC5	; 197
    3d50:	91 e0       	ldi	r25, 0x01	; 1
    3d52:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d56:	26 ee       	ldi	r18, 0xE6	; 230
    3d58:	30 e0       	ldi	r19, 0x00	; 0
    3d5a:	4b eb       	ldi	r20, 0xBB	; 187
    3d5c:	51 e0       	ldi	r21, 0x01	; 1
    3d5e:	66 ee       	ldi	r22, 0xE6	; 230
    3d60:	70 e0       	ldi	r23, 0x00	; 0
    3d62:	80 e6       	ldi	r24, 0x60	; 96
    3d64:	91 e0       	ldi	r25, 0x01	; 1
    3d66:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d6a:	2e ec       	ldi	r18, 0xCE	; 206
    3d6c:	30 e0       	ldi	r19, 0x00	; 0
    3d6e:	4b eb       	ldi	r20, 0xBB	; 187
    3d70:	51 e0       	ldi	r21, 0x01	; 1
    3d72:	6e ec       	ldi	r22, 0xCE	; 206
    3d74:	70 e0       	ldi	r23, 0x00	; 0
    3d76:	80 e6       	ldi	r24, 0x60	; 96
    3d78:	91 e0       	ldi	r25, 0x01	; 1
    3d7a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3d7e:	4f ef       	ldi	r20, 0xFF	; 255
    3d80:	5f ef       	ldi	r21, 0xFF	; 255
    3d82:	6a ed       	ldi	r22, 0xDA	; 218
    3d84:	70 e0       	ldi	r23, 0x00	; 0
    3d86:	86 e5       	ldi	r24, 0x56	; 86
    3d88:	91 e0       	ldi	r25, 0x01	; 1
    3d8a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3d8e:	0c e0       	ldi	r16, 0x0C	; 12
    3d90:	10 e0       	ldi	r17, 0x00	; 0
    3d92:	c0 e0       	ldi	r28, 0x00	; 0
    3d94:	d0 e0       	ldi	r29, 0x00	; 0
    3d96:	0f 2e       	mov	r0, r31
    3d98:	f8 ee       	ldi	r31, 0xE8	; 232
    3d9a:	8f 2e       	mov	r8, r31
    3d9c:	99 24       	eor	r9, r9
    3d9e:	9a 94       	dec	r9
    3da0:	f0 2d       	mov	r31, r0
    3da2:	aa 24       	eor	r10, r10
    3da4:	a3 94       	inc	r10
    3da6:	b1 2c       	mov	r11, r1
    3da8:	0f 2e       	mov	r0, r31
    3daa:	f5 ef       	ldi	r31, 0xF5	; 245
    3dac:	ef 2e       	mov	r14, r31
    3dae:	ff 24       	eor	r15, r15
    3db0:	fa 94       	dec	r15
    3db2:	f0 2d       	mov	r31, r0
    3db4:	43 c0       	rjmp	.+134    	; 0x3e3c <Print_Boards_Main+0x3dc>
    3db6:	ff 20       	and	r15, r15
    3db8:	3c f0       	brlt	.+14     	; 0x3dc8 <Print_Boards_Main+0x368>
    3dba:	01 50       	subi	r16, 0x01	; 1
    3dbc:	11 09       	sbc	r17, r1
    3dbe:	82 e0       	ldi	r24, 0x02	; 2
    3dc0:	88 0e       	add	r8, r24
    3dc2:	91 1c       	adc	r9, r1
    3dc4:	e8 0c       	add	r14, r8
    3dc6:	f9 1c       	adc	r15, r9
    3dc8:	6e 01       	movw	r12, r28
    3dca:	2f ef       	ldi	r18, 0xFF	; 255
    3dcc:	c2 1a       	sub	r12, r18
    3dce:	d2 0a       	sbc	r13, r18
    3dd0:	82 e0       	ldi	r24, 0x02	; 2
    3dd2:	a8 0e       	add	r10, r24
    3dd4:	b1 1c       	adc	r11, r1
    3dd6:	ea 0c       	add	r14, r10
    3dd8:	fb 1c       	adc	r15, r11
    3dda:	0f 2e       	mov	r0, r31
    3ddc:	f2 e6       	ldi	r31, 0x62	; 98
    3dde:	4f 2e       	mov	r4, r31
    3de0:	55 24       	eor	r5, r5
    3de2:	53 94       	inc	r5
    3de4:	f0 2d       	mov	r31, r0
    3de6:	32 01       	movw	r6, r4
    3de8:	6c 18       	sub	r6, r12
    3dea:	7d 08       	sbc	r7, r13
    3dec:	4f ef       	ldi	r20, 0xFF	; 255
    3dee:	5f ef       	ldi	r21, 0xFF	; 255
    3df0:	b8 01       	movw	r22, r16
    3df2:	66 52       	subi	r22, 0x26	; 38
    3df4:	7f 4f       	sbci	r23, 0xFF	; 255
    3df6:	c3 01       	movw	r24, r6
    3df8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3dfc:	0f 2e       	mov	r0, r31
    3dfe:	fa ed       	ldi	r31, 0xDA	; 218
    3e00:	2f 2e       	mov	r2, r31
    3e02:	31 2c       	mov	r3, r1
    3e04:	f0 2d       	mov	r31, r0
    3e06:	b1 01       	movw	r22, r2
    3e08:	60 1b       	sub	r22, r16
    3e0a:	71 0b       	sbc	r23, r17
    3e0c:	4f ef       	ldi	r20, 0xFF	; 255
    3e0e:	5f ef       	ldi	r21, 0xFF	; 255
    3e10:	c3 01       	movw	r24, r6
    3e12:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3e16:	be 01       	movw	r22, r28
    3e18:	65 52       	subi	r22, 0x25	; 37
    3e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    3e1c:	40 1a       	sub	r4, r16
    3e1e:	51 0a       	sbc	r5, r17
    3e20:	4f ef       	ldi	r20, 0xFF	; 255
    3e22:	5f ef       	ldi	r21, 0xFF	; 255
    3e24:	c2 01       	movw	r24, r4
    3e26:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3e2a:	b1 01       	movw	r22, r2
    3e2c:	6c 19       	sub	r22, r12
    3e2e:	7d 09       	sbc	r23, r13
    3e30:	4f ef       	ldi	r20, 0xFF	; 255
    3e32:	5f ef       	ldi	r21, 0xFF	; 255
    3e34:	c2 01       	movw	r24, r4
    3e36:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3e3a:	e6 01       	movw	r28, r12
    3e3c:	c0 17       	cp	r28, r16
    3e3e:	d1 07       	cpc	r29, r17
    3e40:	0c f4       	brge	.+2      	; 0x3e44 <Print_Boards_Main+0x3e4>
    3e42:	b9 cf       	rjmp	.-142    	; 0x3db6 <Print_Boards_Main+0x356>
    3e44:	4f ef       	ldi	r20, 0xFF	; 255
    3e46:	5f ef       	ldi	r21, 0xFF	; 255
    3e48:	6a ed       	ldi	r22, 0xDA	; 218
    3e4a:	70 e0       	ldi	r23, 0x00	; 0
    3e4c:	85 ec       	ldi	r24, 0xC5	; 197
    3e4e:	91 e0       	ldi	r25, 0x01	; 1
    3e50:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3e54:	0c e0       	ldi	r16, 0x0C	; 12
    3e56:	10 e0       	ldi	r17, 0x00	; 0
    3e58:	c0 e0       	ldi	r28, 0x00	; 0
    3e5a:	d0 e0       	ldi	r29, 0x00	; 0
    3e5c:	0f 2e       	mov	r0, r31
    3e5e:	f8 ee       	ldi	r31, 0xE8	; 232
    3e60:	8f 2e       	mov	r8, r31
    3e62:	99 24       	eor	r9, r9
    3e64:	9a 94       	dec	r9
    3e66:	f0 2d       	mov	r31, r0
    3e68:	cc 24       	eor	r12, r12
    3e6a:	c3 94       	inc	r12
    3e6c:	d1 2c       	mov	r13, r1
    3e6e:	0f 2e       	mov	r0, r31
    3e70:	f5 ef       	ldi	r31, 0xF5	; 245
    3e72:	ef 2e       	mov	r14, r31
    3e74:	ff 24       	eor	r15, r15
    3e76:	fa 94       	dec	r15
    3e78:	f0 2d       	mov	r31, r0
    3e7a:	40 c0       	rjmp	.+128    	; 0x3efc <Print_Boards_Main+0x49c>
    3e7c:	ff 20       	and	r15, r15
    3e7e:	3c f0       	brlt	.+14     	; 0x3e8e <Print_Boards_Main+0x42e>
    3e80:	01 50       	subi	r16, 0x01	; 1
    3e82:	11 09       	sbc	r17, r1
    3e84:	22 e0       	ldi	r18, 0x02	; 2
    3e86:	82 0e       	add	r8, r18
    3e88:	91 1c       	adc	r9, r1
    3e8a:	e8 0c       	add	r14, r8
    3e8c:	f9 1c       	adc	r15, r9
    3e8e:	2e 01       	movw	r4, r28
    3e90:	8f ef       	ldi	r24, 0xFF	; 255
    3e92:	48 1a       	sub	r4, r24
    3e94:	58 0a       	sbc	r5, r24
    3e96:	22 e0       	ldi	r18, 0x02	; 2
    3e98:	c2 0e       	add	r12, r18
    3e9a:	d1 1c       	adc	r13, r1
    3e9c:	ec 0c       	add	r14, r12
    3e9e:	fd 1c       	adc	r15, r13
    3ea0:	5e 01       	movw	r10, r28
    3ea2:	86 e4       	ldi	r24, 0x46	; 70
    3ea4:	a8 1a       	sub	r10, r24
    3ea6:	8e ef       	ldi	r24, 0xFE	; 254
    3ea8:	b8 0a       	sbc	r11, r24
    3eaa:	4f ef       	ldi	r20, 0xFF	; 255
    3eac:	5f ef       	ldi	r21, 0xFF	; 255
    3eae:	b8 01       	movw	r22, r16
    3eb0:	66 52       	subi	r22, 0x26	; 38
    3eb2:	7f 4f       	sbci	r23, 0xFF	; 255
    3eb4:	c5 01       	movw	r24, r10
    3eb6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3eba:	0f 2e       	mov	r0, r31
    3ebc:	fa ed       	ldi	r31, 0xDA	; 218
    3ebe:	6f 2e       	mov	r6, r31
    3ec0:	71 2c       	mov	r7, r1
    3ec2:	f0 2d       	mov	r31, r0
    3ec4:	b3 01       	movw	r22, r6
    3ec6:	60 1b       	sub	r22, r16
    3ec8:	71 0b       	sbc	r23, r17
    3eca:	4f ef       	ldi	r20, 0xFF	; 255
    3ecc:	5f ef       	ldi	r21, 0xFF	; 255
    3ece:	c5 01       	movw	r24, r10
    3ed0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3ed4:	be 01       	movw	r22, r28
    3ed6:	65 52       	subi	r22, 0x25	; 37
    3ed8:	7f 4f       	sbci	r23, 0xFF	; 255
    3eda:	4f ef       	ldi	r20, 0xFF	; 255
    3edc:	5f ef       	ldi	r21, 0xFF	; 255
    3ede:	e8 01       	movw	r28, r16
    3ee0:	c7 54       	subi	r28, 0x47	; 71
    3ee2:	de 4f       	sbci	r29, 0xFE	; 254
    3ee4:	ce 01       	movw	r24, r28
    3ee6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3eea:	b3 01       	movw	r22, r6
    3eec:	64 19       	sub	r22, r4
    3eee:	75 09       	sbc	r23, r5
    3ef0:	4f ef       	ldi	r20, 0xFF	; 255
    3ef2:	5f ef       	ldi	r21, 0xFF	; 255
    3ef4:	ce 01       	movw	r24, r28
    3ef6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3efa:	e2 01       	movw	r28, r4
    3efc:	c0 17       	cp	r28, r16
    3efe:	d1 07       	cpc	r29, r17
    3f00:	0c f4       	brge	.+2      	; 0x3f04 <Print_Boards_Main+0x4a4>
    3f02:	bc cf       	rjmp	.-136    	; 0x3e7c <Print_Boards_Main+0x41c>
    3f04:	0f ef       	ldi	r16, 0xFF	; 255
    3f06:	1f ef       	ldi	r17, 0xFF	; 255
    3f08:	26 ee       	ldi	r18, 0xE6	; 230
    3f0a:	30 e0       	ldi	r19, 0x00	; 0
    3f0c:	4f e7       	ldi	r20, 0x7F	; 127
    3f0e:	50 e0       	ldi	r21, 0x00	; 0
    3f10:	66 ee       	ldi	r22, 0xE6	; 230
    3f12:	70 e0       	ldi	r23, 0x00	; 0
    3f14:	84 e2       	ldi	r24, 0x24	; 36
    3f16:	90 e0       	ldi	r25, 0x00	; 0
    3f18:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3f1c:	2e ec       	ldi	r18, 0xCE	; 206
    3f1e:	30 e0       	ldi	r19, 0x00	; 0
    3f20:	4f e7       	ldi	r20, 0x7F	; 127
    3f22:	50 e0       	ldi	r21, 0x00	; 0
    3f24:	6e ec       	ldi	r22, 0xCE	; 206
    3f26:	70 e0       	ldi	r23, 0x00	; 0
    3f28:	84 e2       	ldi	r24, 0x24	; 36
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    3f30:	4f ef       	ldi	r20, 0xFF	; 255
    3f32:	5f ef       	ldi	r21, 0xFF	; 255
    3f34:	6a ed       	ldi	r22, 0xDA	; 218
    3f36:	70 e0       	ldi	r23, 0x00	; 0
    3f38:	8a e1       	ldi	r24, 0x1A	; 26
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3f40:	0c e0       	ldi	r16, 0x0C	; 12
    3f42:	10 e0       	ldi	r17, 0x00	; 0
    3f44:	c0 e0       	ldi	r28, 0x00	; 0
    3f46:	d0 e0       	ldi	r29, 0x00	; 0
    3f48:	0f 2e       	mov	r0, r31
    3f4a:	f8 ee       	ldi	r31, 0xE8	; 232
    3f4c:	8f 2e       	mov	r8, r31
    3f4e:	99 24       	eor	r9, r9
    3f50:	9a 94       	dec	r9
    3f52:	f0 2d       	mov	r31, r0
    3f54:	aa 24       	eor	r10, r10
    3f56:	a3 94       	inc	r10
    3f58:	b1 2c       	mov	r11, r1
    3f5a:	0f 2e       	mov	r0, r31
    3f5c:	f5 ef       	ldi	r31, 0xF5	; 245
    3f5e:	ef 2e       	mov	r14, r31
    3f60:	ff 24       	eor	r15, r15
    3f62:	fa 94       	dec	r15
    3f64:	f0 2d       	mov	r31, r0
    3f66:	42 c0       	rjmp	.+132    	; 0x3fec <Print_Boards_Main+0x58c>
    3f68:	ff 20       	and	r15, r15
    3f6a:	3c f0       	brlt	.+14     	; 0x3f7a <Print_Boards_Main+0x51a>
    3f6c:	01 50       	subi	r16, 0x01	; 1
    3f6e:	11 09       	sbc	r17, r1
    3f70:	22 e0       	ldi	r18, 0x02	; 2
    3f72:	82 0e       	add	r8, r18
    3f74:	91 1c       	adc	r9, r1
    3f76:	e8 0c       	add	r14, r8
    3f78:	f9 1c       	adc	r15, r9
    3f7a:	6e 01       	movw	r12, r28
    3f7c:	8f ef       	ldi	r24, 0xFF	; 255
    3f7e:	c8 1a       	sub	r12, r24
    3f80:	d8 0a       	sbc	r13, r24
    3f82:	22 e0       	ldi	r18, 0x02	; 2
    3f84:	a2 0e       	add	r10, r18
    3f86:	b1 1c       	adc	r11, r1
    3f88:	ea 0c       	add	r14, r10
    3f8a:	fb 1c       	adc	r15, r11
    3f8c:	0f 2e       	mov	r0, r31
    3f8e:	f6 e2       	ldi	r31, 0x26	; 38
    3f90:	4f 2e       	mov	r4, r31
    3f92:	51 2c       	mov	r5, r1
    3f94:	f0 2d       	mov	r31, r0
    3f96:	32 01       	movw	r6, r4
    3f98:	6c 18       	sub	r6, r12
    3f9a:	7d 08       	sbc	r7, r13
    3f9c:	4f ef       	ldi	r20, 0xFF	; 255
    3f9e:	5f ef       	ldi	r21, 0xFF	; 255
    3fa0:	b8 01       	movw	r22, r16
    3fa2:	66 52       	subi	r22, 0x26	; 38
    3fa4:	7f 4f       	sbci	r23, 0xFF	; 255
    3fa6:	c3 01       	movw	r24, r6
    3fa8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3fac:	0f 2e       	mov	r0, r31
    3fae:	fa ed       	ldi	r31, 0xDA	; 218
    3fb0:	2f 2e       	mov	r2, r31
    3fb2:	31 2c       	mov	r3, r1
    3fb4:	f0 2d       	mov	r31, r0
    3fb6:	b1 01       	movw	r22, r2
    3fb8:	60 1b       	sub	r22, r16
    3fba:	71 0b       	sbc	r23, r17
    3fbc:	4f ef       	ldi	r20, 0xFF	; 255
    3fbe:	5f ef       	ldi	r21, 0xFF	; 255
    3fc0:	c3 01       	movw	r24, r6
    3fc2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3fc6:	be 01       	movw	r22, r28
    3fc8:	65 52       	subi	r22, 0x25	; 37
    3fca:	7f 4f       	sbci	r23, 0xFF	; 255
    3fcc:	40 1a       	sub	r4, r16
    3fce:	51 0a       	sbc	r5, r17
    3fd0:	4f ef       	ldi	r20, 0xFF	; 255
    3fd2:	5f ef       	ldi	r21, 0xFF	; 255
    3fd4:	c2 01       	movw	r24, r4
    3fd6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3fda:	b1 01       	movw	r22, r2
    3fdc:	6c 19       	sub	r22, r12
    3fde:	7d 09       	sbc	r23, r13
    3fe0:	4f ef       	ldi	r20, 0xFF	; 255
    3fe2:	5f ef       	ldi	r21, 0xFF	; 255
    3fe4:	c2 01       	movw	r24, r4
    3fe6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    3fea:	e6 01       	movw	r28, r12
    3fec:	c0 17       	cp	r28, r16
    3fee:	d1 07       	cpc	r29, r17
    3ff0:	0c f4       	brge	.+2      	; 0x3ff4 <Print_Boards_Main+0x594>
    3ff2:	ba cf       	rjmp	.-140    	; 0x3f68 <Print_Boards_Main+0x508>
    3ff4:	4f ef       	ldi	r20, 0xFF	; 255
    3ff6:	5f ef       	ldi	r21, 0xFF	; 255
    3ff8:	6a ed       	ldi	r22, 0xDA	; 218
    3ffa:	70 e0       	ldi	r23, 0x00	; 0
    3ffc:	89 e8       	ldi	r24, 0x89	; 137
    3ffe:	90 e0       	ldi	r25, 0x00	; 0
    4000:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    4004:	0c e0       	ldi	r16, 0x0C	; 12
    4006:	10 e0       	ldi	r17, 0x00	; 0
    4008:	c0 e0       	ldi	r28, 0x00	; 0
    400a:	d0 e0       	ldi	r29, 0x00	; 0
    400c:	0f 2e       	mov	r0, r31
    400e:	f8 ee       	ldi	r31, 0xE8	; 232
    4010:	8f 2e       	mov	r8, r31
    4012:	99 24       	eor	r9, r9
    4014:	9a 94       	dec	r9
    4016:	f0 2d       	mov	r31, r0
    4018:	cc 24       	eor	r12, r12
    401a:	c3 94       	inc	r12
    401c:	d1 2c       	mov	r13, r1
    401e:	0f 2e       	mov	r0, r31
    4020:	f5 ef       	ldi	r31, 0xF5	; 245
    4022:	ef 2e       	mov	r14, r31
    4024:	ff 24       	eor	r15, r15
    4026:	fa 94       	dec	r15
    4028:	f0 2d       	mov	r31, r0
    402a:	3f c0       	rjmp	.+126    	; 0x40aa <Print_Boards_Main+0x64a>
    402c:	ff 20       	and	r15, r15
    402e:	3c f0       	brlt	.+14     	; 0x403e <Print_Boards_Main+0x5de>
    4030:	01 50       	subi	r16, 0x01	; 1
    4032:	11 09       	sbc	r17, r1
    4034:	82 e0       	ldi	r24, 0x02	; 2
    4036:	88 0e       	add	r8, r24
    4038:	91 1c       	adc	r9, r1
    403a:	e8 0c       	add	r14, r8
    403c:	f9 1c       	adc	r15, r9
    403e:	2e 01       	movw	r4, r28
    4040:	2f ef       	ldi	r18, 0xFF	; 255
    4042:	42 1a       	sub	r4, r18
    4044:	52 0a       	sbc	r5, r18
    4046:	82 e0       	ldi	r24, 0x02	; 2
    4048:	c8 0e       	add	r12, r24
    404a:	d1 1c       	adc	r13, r1
    404c:	ec 0c       	add	r14, r12
    404e:	fd 1c       	adc	r15, r13
    4050:	5e 01       	movw	r10, r28
    4052:	2e e7       	ldi	r18, 0x7E	; 126
    4054:	a2 0e       	add	r10, r18
    4056:	b1 1c       	adc	r11, r1
    4058:	4f ef       	ldi	r20, 0xFF	; 255
    405a:	5f ef       	ldi	r21, 0xFF	; 255
    405c:	b8 01       	movw	r22, r16
    405e:	66 52       	subi	r22, 0x26	; 38
    4060:	7f 4f       	sbci	r23, 0xFF	; 255
    4062:	c5 01       	movw	r24, r10
    4064:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    4068:	0f 2e       	mov	r0, r31
    406a:	fa ed       	ldi	r31, 0xDA	; 218
    406c:	6f 2e       	mov	r6, r31
    406e:	71 2c       	mov	r7, r1
    4070:	f0 2d       	mov	r31, r0
    4072:	b3 01       	movw	r22, r6
    4074:	60 1b       	sub	r22, r16
    4076:	71 0b       	sbc	r23, r17
    4078:	4f ef       	ldi	r20, 0xFF	; 255
    407a:	5f ef       	ldi	r21, 0xFF	; 255
    407c:	c5 01       	movw	r24, r10
    407e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    4082:	be 01       	movw	r22, r28
    4084:	65 52       	subi	r22, 0x25	; 37
    4086:	7f 4f       	sbci	r23, 0xFF	; 255
    4088:	4f ef       	ldi	r20, 0xFF	; 255
    408a:	5f ef       	ldi	r21, 0xFF	; 255
    408c:	e8 01       	movw	r28, r16
    408e:	c3 58       	subi	r28, 0x83	; 131
    4090:	df 4f       	sbci	r29, 0xFF	; 255
    4092:	ce 01       	movw	r24, r28
    4094:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    4098:	b3 01       	movw	r22, r6
    409a:	64 19       	sub	r22, r4
    409c:	75 09       	sbc	r23, r5
    409e:	4f ef       	ldi	r20, 0xFF	; 255
    40a0:	5f ef       	ldi	r21, 0xFF	; 255
    40a2:	ce 01       	movw	r24, r28
    40a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <ILI9486_drawPixel>
    40a8:	e2 01       	movw	r28, r4
    40aa:	c0 17       	cp	r28, r16
    40ac:	d1 07       	cpc	r29, r17
    40ae:	0c f4       	brge	.+2      	; 0x40b2 <Print_Boards_Main+0x652>
    40b0:	bd cf       	rjmp	.-134    	; 0x402c <Print_Boards_Main+0x5cc>
    40b2:	0f ef       	ldi	r16, 0xFF	; 255
    40b4:	1f ef       	ldi	r17, 0xFF	; 255
    40b6:	2c ed       	ldi	r18, 0xDC	; 220
    40b8:	30 e0       	ldi	r19, 0x00	; 0
    40ba:	49 e1       	ldi	r20, 0x19	; 25
    40bc:	50 e0       	ldi	r21, 0x00	; 0
    40be:	6c ed       	ldi	r22, 0xDC	; 220
    40c0:	70 e0       	ldi	r23, 0x00	; 0
    40c2:	81 e0       	ldi	r24, 0x01	; 1
    40c4:	90 e0       	ldi	r25, 0x00	; 0
    40c6:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    40ca:	2c ed       	ldi	r18, 0xDC	; 220
    40cc:	30 e0       	ldi	r19, 0x00	; 0
    40ce:	43 ea       	ldi	r20, 0xA3	; 163
    40d0:	50 e0       	ldi	r21, 0x00	; 0
    40d2:	6c ed       	ldi	r22, 0xDC	; 220
    40d4:	70 e0       	ldi	r23, 0x00	; 0
    40d6:	89 e8       	ldi	r24, 0x89	; 137
    40d8:	90 e0       	ldi	r25, 0x00	; 0
    40da:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    40de:	28 ed       	ldi	r18, 0xD8	; 216
    40e0:	30 e0       	ldi	r19, 0x00	; 0
    40e2:	45 e5       	ldi	r20, 0x55	; 85
    40e4:	51 e0       	ldi	r21, 0x01	; 1
    40e6:	68 ed       	ldi	r22, 0xD8	; 216
    40e8:	70 e0       	ldi	r23, 0x00	; 0
    40ea:	89 e8       	ldi	r24, 0x89	; 137
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    40f2:	28 ed       	ldi	r18, 0xD8	; 216
    40f4:	30 e0       	ldi	r19, 0x00	; 0
    40f6:	4a e1       	ldi	r20, 0x1A	; 26
    40f8:	50 e0       	ldi	r21, 0x00	; 0
    40fa:	68 ed       	ldi	r22, 0xD8	; 216
    40fc:	70 e0       	ldi	r23, 0x00	; 0
    40fe:	81 e0       	ldi	r24, 0x01	; 1
    4100:	90 e0       	ldi	r25, 0x00	; 0
    4102:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4106:	28 ed       	ldi	r18, 0xD8	; 216
    4108:	30 e0       	ldi	r19, 0x00	; 0
    410a:	4e ed       	ldi	r20, 0xDE	; 222
    410c:	51 e0       	ldi	r21, 0x01	; 1
    410e:	68 ed       	ldi	r22, 0xD8	; 216
    4110:	70 e0       	ldi	r23, 0x00	; 0
    4112:	85 ec       	ldi	r24, 0xC5	; 197
    4114:	91 e0       	ldi	r25, 0x01	; 1
    4116:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    411a:	28 e7       	ldi	r18, 0x78	; 120
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	4e ed       	ldi	r20, 0xDE	; 222
    4120:	51 e0       	ldi	r21, 0x01	; 1
    4122:	68 e7       	ldi	r22, 0x78	; 120
    4124:	70 e0       	ldi	r23, 0x00	; 0
    4126:	81 e0       	ldi	r24, 0x01	; 1
    4128:	90 e0       	ldi	r25, 0x00	; 0
    412a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    412e:	2c e7       	ldi	r18, 0x7C	; 124
    4130:	30 e0       	ldi	r19, 0x00	; 0
    4132:	45 e9       	ldi	r20, 0x95	; 149
    4134:	50 e0       	ldi	r21, 0x00	; 0
    4136:	6c e7       	ldi	r22, 0x7C	; 124
    4138:	70 e0       	ldi	r23, 0x00	; 0
    413a:	81 e0       	ldi	r24, 0x01	; 1
    413c:	90 e0       	ldi	r25, 0x00	; 0
    413e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4142:	2c e7       	ldi	r18, 0x7C	; 124
    4144:	30 e0       	ldi	r19, 0x00	; 0
    4146:	4e ed       	ldi	r20, 0xDE	; 222
    4148:	51 e0       	ldi	r21, 0x01	; 1
    414a:	6c e7       	ldi	r22, 0x7C	; 124
    414c:	70 e0       	ldi	r23, 0x00	; 0
    414e:	8a e4       	ldi	r24, 0x4A	; 74
    4150:	91 e0       	ldi	r25, 0x01	; 1
    4152:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4156:	24 e6       	ldi	r18, 0x64	; 100
    4158:	30 e0       	ldi	r19, 0x00	; 0
    415a:	41 ea       	ldi	r20, 0xA1	; 161
    415c:	50 e0       	ldi	r21, 0x00	; 0
    415e:	61 e0       	ldi	r22, 0x01	; 1
    4160:	70 e0       	ldi	r23, 0x00	; 0
    4162:	81 e9       	ldi	r24, 0x91	; 145
    4164:	90 e0       	ldi	r25, 0x00	; 0
    4166:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    416a:	24 e6       	ldi	r18, 0x64	; 100
    416c:	30 e0       	ldi	r19, 0x00	; 0
    416e:	4c e3       	ldi	r20, 0x3C	; 60
    4170:	51 e0       	ldi	r21, 0x01	; 1
    4172:	61 e0       	ldi	r22, 0x01	; 1
    4174:	70 e0       	ldi	r23, 0x00	; 0
    4176:	8c e4       	ldi	r24, 0x4C	; 76
    4178:	91 e0       	ldi	r25, 0x01	; 1
    417a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    417e:	20 e6       	ldi	r18, 0x60	; 96
    4180:	30 e0       	ldi	r19, 0x00	; 0
    4182:	45 ea       	ldi	r20, 0xA5	; 165
    4184:	50 e0       	ldi	r21, 0x00	; 0
    4186:	61 e0       	ldi	r22, 0x01	; 1
    4188:	70 e0       	ldi	r23, 0x00	; 0
    418a:	85 e9       	ldi	r24, 0x95	; 149
    418c:	90 e0       	ldi	r25, 0x00	; 0
    418e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4192:	20 e6       	ldi	r18, 0x60	; 96
    4194:	30 e0       	ldi	r19, 0x00	; 0
    4196:	48 e3       	ldi	r20, 0x38	; 56
    4198:	51 e0       	ldi	r21, 0x01	; 1
    419a:	61 e0       	ldi	r22, 0x01	; 1
    419c:	70 e0       	ldi	r23, 0x00	; 0
    419e:	88 e4       	ldi	r24, 0x48	; 72
    41a0:	91 e0       	ldi	r25, 0x01	; 1
    41a2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    41a6:	2f ef       	ldi	r18, 0xFF	; 255
    41a8:	3f ef       	ldi	r19, 0xFF	; 255
    41aa:	41 e6       	ldi	r20, 0x61	; 97
    41ac:	50 e0       	ldi	r21, 0x00	; 0
    41ae:	6f e9       	ldi	r22, 0x9F	; 159
    41b0:	70 e0       	ldi	r23, 0x00	; 0
    41b2:	8f ee       	ldi	r24, 0xEF	; 239
    41b4:	90 e0       	ldi	r25, 0x00	; 0
    41b6:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    41ba:	00 e0       	ldi	r16, 0x00	; 0
    41bc:	10 e0       	ldi	r17, 0x00	; 0
    41be:	28 e7       	ldi	r18, 0x78	; 120
    41c0:	30 e0       	ldi	r19, 0x00	; 0
    41c2:	47 e4       	ldi	r20, 0x47	; 71
    41c4:	51 e0       	ldi	r21, 0x01	; 1
    41c6:	68 e7       	ldi	r22, 0x78	; 120
    41c8:	70 e0       	ldi	r23, 0x00	; 0
    41ca:	88 e9       	ldi	r24, 0x98	; 152
    41cc:	90 e0       	ldi	r25, 0x00	; 0
    41ce:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    41d2:	28 ed       	ldi	r18, 0xD8	; 216
    41d4:	30 e0       	ldi	r19, 0x00	; 0
    41d6:	4d e3       	ldi	r20, 0x3D	; 61
    41d8:	51 e0       	ldi	r21, 0x01	; 1
    41da:	68 ed       	ldi	r22, 0xD8	; 216
    41dc:	70 e0       	ldi	r23, 0x00	; 0
    41de:	81 ea       	ldi	r24, 0xA1	; 161
    41e0:	90 e0       	ldi	r25, 0x00	; 0
    41e2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    41e6:	29 ed       	ldi	r18, 0xD9	; 217
    41e8:	30 e0       	ldi	r19, 0x00	; 0
    41ea:	41 e0       	ldi	r20, 0x01	; 1
    41ec:	50 e0       	ldi	r21, 0x00	; 0
    41ee:	6b ed       	ldi	r22, 0xDB	; 219
    41f0:	70 e0       	ldi	r23, 0x00	; 0
    41f2:	81 e0       	ldi	r24, 0x01	; 1
    41f4:	90 e0       	ldi	r25, 0x00	; 0
    41f6:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    41fa:	29 ed       	ldi	r18, 0xD9	; 217
    41fc:	30 e0       	ldi	r19, 0x00	; 0
    41fe:	4e ed       	ldi	r20, 0xDE	; 222
    4200:	51 e0       	ldi	r21, 0x01	; 1
    4202:	6b ed       	ldi	r22, 0xDB	; 219
    4204:	70 e0       	ldi	r23, 0x00	; 0
    4206:	8e ed       	ldi	r24, 0xDE	; 222
    4208:	91 e0       	ldi	r25, 0x01	; 1
    420a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    420e:	2b e7       	ldi	r18, 0x7B	; 123
    4210:	30 e0       	ldi	r19, 0x00	; 0
    4212:	41 e0       	ldi	r20, 0x01	; 1
    4214:	50 e0       	ldi	r21, 0x00	; 0
    4216:	69 e7       	ldi	r22, 0x79	; 121
    4218:	70 e0       	ldi	r23, 0x00	; 0
    421a:	81 e0       	ldi	r24, 0x01	; 1
    421c:	90 e0       	ldi	r25, 0x00	; 0
    421e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4222:	2b e7       	ldi	r18, 0x7B	; 123
    4224:	30 e0       	ldi	r19, 0x00	; 0
    4226:	4e ed       	ldi	r20, 0xDE	; 222
    4228:	51 e0       	ldi	r21, 0x01	; 1
    422a:	69 e7       	ldi	r22, 0x79	; 121
    422c:	70 e0       	ldi	r23, 0x00	; 0
    422e:	8e ed       	ldi	r24, 0xDE	; 222
    4230:	91 e0       	ldi	r25, 0x01	; 1
    4232:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4236:	21 e0       	ldi	r18, 0x01	; 1
    4238:	30 e0       	ldi	r19, 0x00	; 0
    423a:	44 e9       	ldi	r20, 0x94	; 148
    423c:	50 e0       	ldi	r21, 0x00	; 0
    423e:	61 e0       	ldi	r22, 0x01	; 1
    4240:	70 e0       	ldi	r23, 0x00	; 0
    4242:	82 e9       	ldi	r24, 0x92	; 146
    4244:	90 e0       	ldi	r25, 0x00	; 0
    4246:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    424a:	21 e0       	ldi	r18, 0x01	; 1
    424c:	30 e0       	ldi	r19, 0x00	; 0
    424e:	4b e4       	ldi	r20, 0x4B	; 75
    4250:	51 e0       	ldi	r21, 0x01	; 1
    4252:	61 e0       	ldi	r22, 0x01	; 1
    4254:	70 e0       	ldi	r23, 0x00	; 0
    4256:	89 e4       	ldi	r24, 0x49	; 73
    4258:	91 e0       	ldi	r25, 0x01	; 1
    425a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    425e:	2e e3       	ldi	r18, 0x3E	; 62
    4260:	31 e0       	ldi	r19, 0x01	; 1
    4262:	47 ea       	ldi	r20, 0xA7	; 167
    4264:	50 e0       	ldi	r21, 0x00	; 0
    4266:	6e e3       	ldi	r22, 0x3E	; 62
    4268:	71 e0       	ldi	r23, 0x01	; 1
    426a:	85 ea       	ldi	r24, 0xA5	; 165
    426c:	90 e0       	ldi	r25, 0x00	; 0
    426e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4272:	2e e3       	ldi	r18, 0x3E	; 62
    4274:	31 e0       	ldi	r19, 0x01	; 1
    4276:	49 e3       	ldi	r20, 0x39	; 57
    4278:	51 e0       	ldi	r21, 0x01	; 1
    427a:	6e e3       	ldi	r22, 0x3E	; 62
    427c:	71 e0       	ldi	r23, 0x01	; 1
    427e:	87 e3       	ldi	r24, 0x37	; 55
    4280:	91 e0       	ldi	r25, 0x01	; 1
    4282:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4286:	c5 ea       	ldi	r28, 0xA5	; 165
    4288:	d0 e0       	ldi	r29, 0x00	; 0
    428a:	0b c0       	rjmp	.+22     	; 0x42a2 <Print_Boards_Main+0x842>
    428c:	00 e0       	ldi	r16, 0x00	; 0
    428e:	10 e0       	ldi	r17, 0x00	; 0
    4290:	26 ee       	ldi	r18, 0xE6	; 230
    4292:	30 e0       	ldi	r19, 0x00	; 0
    4294:	ae 01       	movw	r20, r28
    4296:	6c ed       	ldi	r22, 0xDC	; 220
    4298:	70 e0       	ldi	r23, 0x00	; 0
    429a:	ce 01       	movw	r24, r28
    429c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    42a0:	21 96       	adiw	r28, 0x01	; 1
    42a2:	c8 3a       	cpi	r28, 0xA8	; 168
    42a4:	d1 05       	cpc	r29, r1
    42a6:	90 f3       	brcs	.-28     	; 0x428c <Print_Boards_Main+0x82c>
    42a8:	c7 e3       	ldi	r28, 0x37	; 55
    42aa:	d1 e0       	ldi	r29, 0x01	; 1
    42ac:	0b c0       	rjmp	.+22     	; 0x42c4 <Print_Boards_Main+0x864>
    42ae:	00 e0       	ldi	r16, 0x00	; 0
    42b0:	10 e0       	ldi	r17, 0x00	; 0
    42b2:	26 ee       	ldi	r18, 0xE6	; 230
    42b4:	30 e0       	ldi	r19, 0x00	; 0
    42b6:	ae 01       	movw	r20, r28
    42b8:	6c ed       	ldi	r22, 0xDC	; 220
    42ba:	70 e0       	ldi	r23, 0x00	; 0
    42bc:	ce 01       	movw	r24, r28
    42be:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    42c2:	21 96       	adiw	r28, 0x01	; 1
    42c4:	ca 33       	cpi	r28, 0x3A	; 58
    42c6:	81 e0       	ldi	r24, 0x01	; 1
    42c8:	d8 07       	cpc	r29, r24
    42ca:	88 f3       	brcs	.-30     	; 0x42ae <Print_Boards_Main+0x84e>
    42cc:	c9 ed       	ldi	r28, 0xD9	; 217
    42ce:	d0 e0       	ldi	r29, 0x00	; 0
    42d0:	0b c0       	rjmp	.+22     	; 0x42e8 <Print_Boards_Main+0x888>
    42d2:	00 e0       	ldi	r16, 0x00	; 0
    42d4:	10 e0       	ldi	r17, 0x00	; 0
    42d6:	9e 01       	movw	r18, r28
    42d8:	4a ea       	ldi	r20, 0xAA	; 170
    42da:	50 e0       	ldi	r21, 0x00	; 0
    42dc:	be 01       	movw	r22, r28
    42de:	80 ea       	ldi	r24, 0xA0	; 160
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    42e6:	21 96       	adiw	r28, 0x01	; 1
    42e8:	cc 3d       	cpi	r28, 0xDC	; 220
    42ea:	d1 05       	cpc	r29, r1
    42ec:	90 f3       	brcs	.-28     	; 0x42d2 <Print_Boards_Main+0x872>
    42ee:	c9 ed       	ldi	r28, 0xD9	; 217
    42f0:	d0 e0       	ldi	r29, 0x00	; 0
    42f2:	0b c0       	rjmp	.+22     	; 0x430a <Print_Boards_Main+0x8aa>
    42f4:	00 e0       	ldi	r16, 0x00	; 0
    42f6:	10 e0       	ldi	r17, 0x00	; 0
    42f8:	9e 01       	movw	r18, r28
    42fa:	40 e4       	ldi	r20, 0x40	; 64
    42fc:	51 e0       	ldi	r21, 0x01	; 1
    42fe:	be 01       	movw	r22, r28
    4300:	86 e3       	ldi	r24, 0x36	; 54
    4302:	91 e0       	ldi	r25, 0x01	; 1
    4304:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4308:	21 96       	adiw	r28, 0x01	; 1
    430a:	cc 3d       	cpi	r28, 0xDC	; 220
    430c:	d1 05       	cpc	r29, r1
    430e:	90 f3       	brcs	.-28     	; 0x42f4 <Print_Boards_Main+0x894>
    4310:	c9 e7       	ldi	r28, 0x79	; 121
    4312:	d0 e0       	ldi	r29, 0x00	; 0
    4314:	0b c0       	rjmp	.+22     	; 0x432c <Print_Boards_Main+0x8cc>
    4316:	00 e0       	ldi	r16, 0x00	; 0
    4318:	10 e0       	ldi	r17, 0x00	; 0
    431a:	9e 01       	movw	r18, r28
    431c:	40 ea       	ldi	r20, 0xA0	; 160
    431e:	50 e0       	ldi	r21, 0x00	; 0
    4320:	be 01       	movw	r22, r28
    4322:	8c e8       	ldi	r24, 0x8C	; 140
    4324:	90 e0       	ldi	r25, 0x00	; 0
    4326:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    432a:	21 96       	adiw	r28, 0x01	; 1
    432c:	cc 37       	cpi	r28, 0x7C	; 124
    432e:	d1 05       	cpc	r29, r1
    4330:	90 f3       	brcs	.-28     	; 0x4316 <Print_Boards_Main+0x8b6>
    4332:	c9 e7       	ldi	r28, 0x79	; 121
    4334:	d0 e0       	ldi	r29, 0x00	; 0
    4336:	0b c0       	rjmp	.+22     	; 0x434e <Print_Boards_Main+0x8ee>
    4338:	00 e0       	ldi	r16, 0x00	; 0
    433a:	10 e0       	ldi	r17, 0x00	; 0
    433c:	9e 01       	movw	r18, r28
    433e:	44 e5       	ldi	r20, 0x54	; 84
    4340:	51 e0       	ldi	r21, 0x01	; 1
    4342:	be 01       	movw	r22, r28
    4344:	80 e4       	ldi	r24, 0x40	; 64
    4346:	91 e0       	ldi	r25, 0x01	; 1
    4348:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    434c:	21 96       	adiw	r28, 0x01	; 1
    434e:	cc 37       	cpi	r28, 0x7C	; 124
    4350:	d1 05       	cpc	r29, r1
    4352:	90 f3       	brcs	.-28     	; 0x4338 <Print_Boards_Main+0x8d8>
    4354:	c2 ea       	ldi	r28, 0xA2	; 162
    4356:	d0 e0       	ldi	r29, 0x00	; 0
    4358:	0b c0       	rjmp	.+22     	; 0x4370 <Print_Boards_Main+0x910>
    435a:	00 e0       	ldi	r16, 0x00	; 0
    435c:	10 e0       	ldi	r17, 0x00	; 0
    435e:	24 e6       	ldi	r18, 0x64	; 100
    4360:	30 e0       	ldi	r19, 0x00	; 0
    4362:	ae 01       	movw	r20, r28
    4364:	60 e6       	ldi	r22, 0x60	; 96
    4366:	70 e0       	ldi	r23, 0x00	; 0
    4368:	ce 01       	movw	r24, r28
    436a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    436e:	21 96       	adiw	r28, 0x01	; 1
    4370:	c5 3a       	cpi	r28, 0xA5	; 165
    4372:	d1 05       	cpc	r29, r1
    4374:	90 f3       	brcs	.-28     	; 0x435a <Print_Boards_Main+0x8fa>
    4376:	c9 e3       	ldi	r28, 0x39	; 57
    4378:	d1 e0       	ldi	r29, 0x01	; 1
    437a:	0b c0       	rjmp	.+22     	; 0x4392 <Print_Boards_Main+0x932>
    437c:	00 e0       	ldi	r16, 0x00	; 0
    437e:	10 e0       	ldi	r17, 0x00	; 0
    4380:	24 e6       	ldi	r18, 0x64	; 100
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	ae 01       	movw	r20, r28
    4386:	60 e6       	ldi	r22, 0x60	; 96
    4388:	70 e0       	ldi	r23, 0x00	; 0
    438a:	ce 01       	movw	r24, r28
    438c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4390:	21 96       	adiw	r28, 0x01	; 1
    4392:	cc 33       	cpi	r28, 0x3C	; 60
    4394:	21 e0       	ldi	r18, 0x01	; 1
    4396:	d2 07       	cpc	r29, r18
    4398:	88 f3       	brcs	.-30     	; 0x437c <Print_Boards_Main+0x91c>
    439a:	60 e0       	ldi	r22, 0x00	; 0
    439c:	70 e0       	ldi	r23, 0x00	; 0
    439e:	80 ee       	ldi	r24, 0xE0	; 224
    43a0:	9f ef       	ldi	r25, 0xFF	; 255
    43a2:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    43a6:	60 ed       	ldi	r22, 0xD0	; 208
    43a8:	70 e0       	ldi	r23, 0x00	; 0
    43aa:	8d e5       	ldi	r24, 0x5D	; 93
    43ac:	91 e0       	ldi	r25, 0x01	; 1
    43ae:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    43b2:	61 e0       	ldi	r22, 0x01	; 1
    43b4:	8b e0       	ldi	r24, 0x0B	; 11
    43b6:	91 e0       	ldi	r25, 0x01	; 1
    43b8:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    43bc:	60 e0       	ldi	r22, 0x00	; 0
    43be:	70 e0       	ldi	r23, 0x00	; 0
    43c0:	82 ea       	ldi	r24, 0xA2	; 162
    43c2:	9b ef       	ldi	r25, 0xFB	; 251
    43c4:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    43c8:	60 ed       	ldi	r22, 0xD0	; 208
    43ca:	70 e0       	ldi	r23, 0x00	; 0
    43cc:	88 e2       	ldi	r24, 0x28	; 40
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    43d4:	61 e0       	ldi	r22, 0x01	; 1
    43d6:	83 e1       	ldi	r24, 0x13	; 19
    43d8:	91 e0       	ldi	r25, 0x01	; 1
    43da:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    43de:	df 91       	pop	r29
    43e0:	cf 91       	pop	r28
    43e2:	1f 91       	pop	r17
    43e4:	0f 91       	pop	r16
    43e6:	ff 90       	pop	r15
    43e8:	ef 90       	pop	r14
    43ea:	df 90       	pop	r13
    43ec:	cf 90       	pop	r12
    43ee:	bf 90       	pop	r11
    43f0:	af 90       	pop	r10
    43f2:	9f 90       	pop	r9
    43f4:	8f 90       	pop	r8
    43f6:	7f 90       	pop	r7
    43f8:	6f 90       	pop	r6
    43fa:	5f 90       	pop	r5
    43fc:	4f 90       	pop	r4
    43fe:	3f 90       	pop	r3
    4400:	2f 90       	pop	r2
    4402:	08 95       	ret

00004404 <Print_Menu_Page_Static>:
    4404:	80 e0       	ldi	r24, 0x00	; 0
    4406:	90 e0       	ldi	r25, 0x00	; 0
    4408:	0e 94 0c 04 	call	0x818	; 0x818 <ILI9486_FillScreen>
    440c:	81 e0       	ldi	r24, 0x01	; 1
    440e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <ILI9486_SetRotation>
    4412:	6e e1       	ldi	r22, 0x1E	; 30
    4414:	70 e0       	ldi	r23, 0x00	; 0
    4416:	86 e9       	ldi	r24, 0x96	; 150
    4418:	90 e0       	ldi	r25, 0x00	; 0
    441a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    441e:	6f ef       	ldi	r22, 0xFF	; 255
    4420:	7f ef       	ldi	r23, 0xFF	; 255
    4422:	80 e0       	ldi	r24, 0x00	; 0
    4424:	90 e0       	ldi	r25, 0x00	; 0
    4426:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    442a:	60 e0       	ldi	r22, 0x00	; 0
    442c:	8a e1       	ldi	r24, 0x1A	; 26
    442e:	91 e0       	ldi	r25, 0x01	; 1
    4430:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    4434:	66 e4       	ldi	r22, 0x46	; 70
    4436:	70 e0       	ldi	r23, 0x00	; 0
    4438:	86 e6       	ldi	r24, 0x66	; 102
    443a:	90 e0       	ldi	r25, 0x00	; 0
    443c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4440:	60 e0       	ldi	r22, 0x00	; 0
    4442:	70 e0       	ldi	r23, 0x00	; 0
    4444:	8f ef       	ldi	r24, 0xFF	; 255
    4446:	9f ef       	ldi	r25, 0xFF	; 255
    4448:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    444c:	60 e0       	ldi	r22, 0x00	; 0
    444e:	84 e2       	ldi	r24, 0x24	; 36
    4450:	91 e0       	ldi	r25, 0x01	; 1
    4452:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    4456:	6e e6       	ldi	r22, 0x6E	; 110
    4458:	70 e0       	ldi	r23, 0x00	; 0
    445a:	86 e6       	ldi	r24, 0x66	; 102
    445c:	90 e0       	ldi	r25, 0x00	; 0
    445e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4462:	60 e0       	ldi	r22, 0x00	; 0
    4464:	83 e3       	ldi	r24, 0x33	; 51
    4466:	91 e0       	ldi	r25, 0x01	; 1
    4468:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    446c:	66 e9       	ldi	r22, 0x96	; 150
    446e:	70 e0       	ldi	r23, 0x00	; 0
    4470:	86 e6       	ldi	r24, 0x66	; 102
    4472:	90 e0       	ldi	r25, 0x00	; 0
    4474:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4478:	60 e0       	ldi	r22, 0x00	; 0
    447a:	81 e4       	ldi	r24, 0x41	; 65
    447c:	91 e0       	ldi	r25, 0x01	; 1
    447e:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    4482:	6e eb       	ldi	r22, 0xBE	; 190
    4484:	70 e0       	ldi	r23, 0x00	; 0
    4486:	86 e6       	ldi	r24, 0x66	; 102
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    448e:	60 e0       	ldi	r22, 0x00	; 0
    4490:	8f e4       	ldi	r24, 0x4F	; 79
    4492:	91 e0       	ldi	r25, 0x01	; 1
    4494:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    4498:	08 95       	ret

0000449a <Print_Menu_Page>:
    449a:	cf 92       	push	r12
    449c:	df 92       	push	r13
    449e:	ef 92       	push	r14
    44a0:	ff 92       	push	r15
    44a2:	0f 93       	push	r16
    44a4:	1f 93       	push	r17
    44a6:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up_down_count>
    44aa:	83 78       	andi	r24, 0x83	; 131
    44ac:	1c f4       	brge	.+6      	; 0x44b4 <Print_Menu_Page+0x1a>
    44ae:	81 50       	subi	r24, 0x01	; 1
    44b0:	8c 6f       	ori	r24, 0xFC	; 252
    44b2:	8f 5f       	subi	r24, 0xFF	; 255
    44b4:	81 30       	cpi	r24, 0x01	; 1
    44b6:	09 f4       	brne	.+2      	; 0x44ba <Print_Menu_Page+0x20>
    44b8:	92 c0       	rjmp	.+292    	; 0x45de <Print_Menu_Page+0x144>
    44ba:	1c f4       	brge	.+6      	; 0x44c2 <Print_Menu_Page+0x28>
    44bc:	88 23       	and	r24, r24
    44be:	41 f0       	breq	.+16     	; 0x44d0 <Print_Menu_Page+0x36>
    44c0:	26 c2       	rjmp	.+1100   	; 0x490e <Print_Menu_Page+0x474>
    44c2:	82 30       	cpi	r24, 0x02	; 2
    44c4:	09 f4       	brne	.+2      	; 0x44c8 <Print_Menu_Page+0x2e>
    44c6:	14 c1       	rjmp	.+552    	; 0x46f0 <Print_Menu_Page+0x256>
    44c8:	83 30       	cpi	r24, 0x03	; 3
    44ca:	09 f4       	brne	.+2      	; 0x44ce <Print_Menu_Page+0x34>
    44cc:	9a c1       	rjmp	.+820    	; 0x4802 <Print_Menu_Page+0x368>
    44ce:	1f c2       	rjmp	.+1086   	; 0x490e <Print_Menu_Page+0x474>
    44d0:	cc 24       	eor	r12, r12
    44d2:	ca 94       	dec	r12
    44d4:	dc 2c       	mov	r13, r12
    44d6:	0f 2e       	mov	r0, r31
    44d8:	f3 e6       	ldi	r31, 0x63	; 99
    44da:	ef 2e       	mov	r14, r31
    44dc:	f1 2c       	mov	r15, r1
    44de:	f0 2d       	mov	r31, r0
    44e0:	08 e4       	ldi	r16, 0x48	; 72
    44e2:	10 e0       	ldi	r17, 0x00	; 0
    44e4:	23 e5       	ldi	r18, 0x53	; 83
    44e6:	30 e0       	ldi	r19, 0x00	; 0
    44e8:	47 e5       	ldi	r20, 0x57	; 87
    44ea:	50 e0       	ldi	r21, 0x00	; 0
    44ec:	63 e4       	ldi	r22, 0x43	; 67
    44ee:	70 e0       	ldi	r23, 0x00	; 0
    44f0:	88 e4       	ldi	r24, 0x48	; 72
    44f2:	90 e0       	ldi	r25, 0x00	; 0
    44f4:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    44f8:	c1 2c       	mov	r12, r1
    44fa:	d1 2c       	mov	r13, r1
    44fc:	0f 2e       	mov	r0, r31
    44fe:	fb e8       	ldi	r31, 0x8B	; 139
    4500:	ef 2e       	mov	r14, r31
    4502:	f1 2c       	mov	r15, r1
    4504:	f0 2d       	mov	r31, r0
    4506:	2b e7       	ldi	r18, 0x7B	; 123
    4508:	30 e0       	ldi	r19, 0x00	; 0
    450a:	47 e5       	ldi	r20, 0x57	; 87
    450c:	50 e0       	ldi	r21, 0x00	; 0
    450e:	6b e6       	ldi	r22, 0x6B	; 107
    4510:	70 e0       	ldi	r23, 0x00	; 0
    4512:	88 e4       	ldi	r24, 0x48	; 72
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    451a:	0f 2e       	mov	r0, r31
    451c:	f3 eb       	ldi	r31, 0xB3	; 179
    451e:	ef 2e       	mov	r14, r31
    4520:	f1 2c       	mov	r15, r1
    4522:	f0 2d       	mov	r31, r0
    4524:	23 ea       	ldi	r18, 0xA3	; 163
    4526:	30 e0       	ldi	r19, 0x00	; 0
    4528:	47 e5       	ldi	r20, 0x57	; 87
    452a:	50 e0       	ldi	r21, 0x00	; 0
    452c:	63 e9       	ldi	r22, 0x93	; 147
    452e:	70 e0       	ldi	r23, 0x00	; 0
    4530:	88 e4       	ldi	r24, 0x48	; 72
    4532:	90 e0       	ldi	r25, 0x00	; 0
    4534:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4538:	0f 2e       	mov	r0, r31
    453a:	fb ed       	ldi	r31, 0xDB	; 219
    453c:	ef 2e       	mov	r14, r31
    453e:	f1 2c       	mov	r15, r1
    4540:	f0 2d       	mov	r31, r0
    4542:	2b ec       	ldi	r18, 0xCB	; 203
    4544:	30 e0       	ldi	r19, 0x00	; 0
    4546:	47 e5       	ldi	r20, 0x57	; 87
    4548:	50 e0       	ldi	r21, 0x00	; 0
    454a:	6b eb       	ldi	r22, 0xBB	; 187
    454c:	70 e0       	ldi	r23, 0x00	; 0
    454e:	88 e4       	ldi	r24, 0x48	; 72
    4550:	90 e0       	ldi	r25, 0x00	; 0
    4552:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4556:	cc 24       	eor	r12, r12
    4558:	ca 94       	dec	r12
    455a:	dc 2c       	mov	r13, r12
    455c:	0f 2e       	mov	r0, r31
    455e:	f3 e6       	ldi	r31, 0x63	; 99
    4560:	ef 2e       	mov	r14, r31
    4562:	f1 2c       	mov	r15, r1
    4564:	f0 2d       	mov	r31, r0
    4566:	0d e8       	ldi	r16, 0x8D	; 141
    4568:	11 e0       	ldi	r17, 0x01	; 1
    456a:	23 e5       	ldi	r18, 0x53	; 83
    456c:	30 e0       	ldi	r19, 0x00	; 0
    456e:	4e e7       	ldi	r20, 0x7E	; 126
    4570:	51 e0       	ldi	r21, 0x01	; 1
    4572:	63 e4       	ldi	r22, 0x43	; 67
    4574:	70 e0       	ldi	r23, 0x00	; 0
    4576:	8d e8       	ldi	r24, 0x8D	; 141
    4578:	91 e0       	ldi	r25, 0x01	; 1
    457a:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    457e:	c1 2c       	mov	r12, r1
    4580:	d1 2c       	mov	r13, r1
    4582:	0f 2e       	mov	r0, r31
    4584:	fb e8       	ldi	r31, 0x8B	; 139
    4586:	ef 2e       	mov	r14, r31
    4588:	f1 2c       	mov	r15, r1
    458a:	f0 2d       	mov	r31, r0
    458c:	2b e7       	ldi	r18, 0x7B	; 123
    458e:	30 e0       	ldi	r19, 0x00	; 0
    4590:	4e e7       	ldi	r20, 0x7E	; 126
    4592:	51 e0       	ldi	r21, 0x01	; 1
    4594:	6b e6       	ldi	r22, 0x6B	; 107
    4596:	70 e0       	ldi	r23, 0x00	; 0
    4598:	8d e8       	ldi	r24, 0x8D	; 141
    459a:	91 e0       	ldi	r25, 0x01	; 1
    459c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    45a0:	0f 2e       	mov	r0, r31
    45a2:	f3 eb       	ldi	r31, 0xB3	; 179
    45a4:	ef 2e       	mov	r14, r31
    45a6:	f1 2c       	mov	r15, r1
    45a8:	f0 2d       	mov	r31, r0
    45aa:	23 ea       	ldi	r18, 0xA3	; 163
    45ac:	30 e0       	ldi	r19, 0x00	; 0
    45ae:	4e e7       	ldi	r20, 0x7E	; 126
    45b0:	51 e0       	ldi	r21, 0x01	; 1
    45b2:	63 e9       	ldi	r22, 0x93	; 147
    45b4:	70 e0       	ldi	r23, 0x00	; 0
    45b6:	8d e8       	ldi	r24, 0x8D	; 141
    45b8:	91 e0       	ldi	r25, 0x01	; 1
    45ba:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    45be:	0f 2e       	mov	r0, r31
    45c0:	fb ed       	ldi	r31, 0xDB	; 219
    45c2:	ef 2e       	mov	r14, r31
    45c4:	f1 2c       	mov	r15, r1
    45c6:	f0 2d       	mov	r31, r0
    45c8:	2b ec       	ldi	r18, 0xCB	; 203
    45ca:	30 e0       	ldi	r19, 0x00	; 0
    45cc:	4e e7       	ldi	r20, 0x7E	; 126
    45ce:	51 e0       	ldi	r21, 0x01	; 1
    45d0:	6b eb       	ldi	r22, 0xBB	; 187
    45d2:	70 e0       	ldi	r23, 0x00	; 0
    45d4:	8d e8       	ldi	r24, 0x8D	; 141
    45d6:	91 e0       	ldi	r25, 0x01	; 1
    45d8:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    45dc:	98 c1       	rjmp	.+816    	; 0x490e <Print_Menu_Page+0x474>
    45de:	c1 2c       	mov	r12, r1
    45e0:	d1 2c       	mov	r13, r1
    45e2:	0f 2e       	mov	r0, r31
    45e4:	f3 e6       	ldi	r31, 0x63	; 99
    45e6:	ef 2e       	mov	r14, r31
    45e8:	f1 2c       	mov	r15, r1
    45ea:	f0 2d       	mov	r31, r0
    45ec:	08 e4       	ldi	r16, 0x48	; 72
    45ee:	10 e0       	ldi	r17, 0x00	; 0
    45f0:	23 e5       	ldi	r18, 0x53	; 83
    45f2:	30 e0       	ldi	r19, 0x00	; 0
    45f4:	47 e5       	ldi	r20, 0x57	; 87
    45f6:	50 e0       	ldi	r21, 0x00	; 0
    45f8:	63 e4       	ldi	r22, 0x43	; 67
    45fa:	70 e0       	ldi	r23, 0x00	; 0
    45fc:	88 e4       	ldi	r24, 0x48	; 72
    45fe:	90 e0       	ldi	r25, 0x00	; 0
    4600:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4604:	cc 24       	eor	r12, r12
    4606:	ca 94       	dec	r12
    4608:	dc 2c       	mov	r13, r12
    460a:	0f 2e       	mov	r0, r31
    460c:	fb e8       	ldi	r31, 0x8B	; 139
    460e:	ef 2e       	mov	r14, r31
    4610:	f1 2c       	mov	r15, r1
    4612:	f0 2d       	mov	r31, r0
    4614:	2b e7       	ldi	r18, 0x7B	; 123
    4616:	30 e0       	ldi	r19, 0x00	; 0
    4618:	47 e5       	ldi	r20, 0x57	; 87
    461a:	50 e0       	ldi	r21, 0x00	; 0
    461c:	6b e6       	ldi	r22, 0x6B	; 107
    461e:	70 e0       	ldi	r23, 0x00	; 0
    4620:	88 e4       	ldi	r24, 0x48	; 72
    4622:	90 e0       	ldi	r25, 0x00	; 0
    4624:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4628:	c1 2c       	mov	r12, r1
    462a:	d1 2c       	mov	r13, r1
    462c:	0f 2e       	mov	r0, r31
    462e:	f3 eb       	ldi	r31, 0xB3	; 179
    4630:	ef 2e       	mov	r14, r31
    4632:	f1 2c       	mov	r15, r1
    4634:	f0 2d       	mov	r31, r0
    4636:	23 ea       	ldi	r18, 0xA3	; 163
    4638:	30 e0       	ldi	r19, 0x00	; 0
    463a:	47 e5       	ldi	r20, 0x57	; 87
    463c:	50 e0       	ldi	r21, 0x00	; 0
    463e:	63 e9       	ldi	r22, 0x93	; 147
    4640:	70 e0       	ldi	r23, 0x00	; 0
    4642:	88 e4       	ldi	r24, 0x48	; 72
    4644:	90 e0       	ldi	r25, 0x00	; 0
    4646:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    464a:	0f 2e       	mov	r0, r31
    464c:	fb ed       	ldi	r31, 0xDB	; 219
    464e:	ef 2e       	mov	r14, r31
    4650:	f1 2c       	mov	r15, r1
    4652:	f0 2d       	mov	r31, r0
    4654:	2b ec       	ldi	r18, 0xCB	; 203
    4656:	30 e0       	ldi	r19, 0x00	; 0
    4658:	47 e5       	ldi	r20, 0x57	; 87
    465a:	50 e0       	ldi	r21, 0x00	; 0
    465c:	6b eb       	ldi	r22, 0xBB	; 187
    465e:	70 e0       	ldi	r23, 0x00	; 0
    4660:	88 e4       	ldi	r24, 0x48	; 72
    4662:	90 e0       	ldi	r25, 0x00	; 0
    4664:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4668:	0f 2e       	mov	r0, r31
    466a:	f3 e6       	ldi	r31, 0x63	; 99
    466c:	ef 2e       	mov	r14, r31
    466e:	f1 2c       	mov	r15, r1
    4670:	f0 2d       	mov	r31, r0
    4672:	0d e8       	ldi	r16, 0x8D	; 141
    4674:	11 e0       	ldi	r17, 0x01	; 1
    4676:	23 e5       	ldi	r18, 0x53	; 83
    4678:	30 e0       	ldi	r19, 0x00	; 0
    467a:	4e e7       	ldi	r20, 0x7E	; 126
    467c:	51 e0       	ldi	r21, 0x01	; 1
    467e:	63 e4       	ldi	r22, 0x43	; 67
    4680:	70 e0       	ldi	r23, 0x00	; 0
    4682:	8d e8       	ldi	r24, 0x8D	; 141
    4684:	91 e0       	ldi	r25, 0x01	; 1
    4686:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    468a:	cc 24       	eor	r12, r12
    468c:	ca 94       	dec	r12
    468e:	dc 2c       	mov	r13, r12
    4690:	0f 2e       	mov	r0, r31
    4692:	fb e8       	ldi	r31, 0x8B	; 139
    4694:	ef 2e       	mov	r14, r31
    4696:	f1 2c       	mov	r15, r1
    4698:	f0 2d       	mov	r31, r0
    469a:	2b e7       	ldi	r18, 0x7B	; 123
    469c:	30 e0       	ldi	r19, 0x00	; 0
    469e:	4e e7       	ldi	r20, 0x7E	; 126
    46a0:	51 e0       	ldi	r21, 0x01	; 1
    46a2:	6b e6       	ldi	r22, 0x6B	; 107
    46a4:	70 e0       	ldi	r23, 0x00	; 0
    46a6:	8d e8       	ldi	r24, 0x8D	; 141
    46a8:	91 e0       	ldi	r25, 0x01	; 1
    46aa:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    46ae:	c1 2c       	mov	r12, r1
    46b0:	d1 2c       	mov	r13, r1
    46b2:	0f 2e       	mov	r0, r31
    46b4:	f3 eb       	ldi	r31, 0xB3	; 179
    46b6:	ef 2e       	mov	r14, r31
    46b8:	f1 2c       	mov	r15, r1
    46ba:	f0 2d       	mov	r31, r0
    46bc:	23 ea       	ldi	r18, 0xA3	; 163
    46be:	30 e0       	ldi	r19, 0x00	; 0
    46c0:	4e e7       	ldi	r20, 0x7E	; 126
    46c2:	51 e0       	ldi	r21, 0x01	; 1
    46c4:	63 e9       	ldi	r22, 0x93	; 147
    46c6:	70 e0       	ldi	r23, 0x00	; 0
    46c8:	8d e8       	ldi	r24, 0x8D	; 141
    46ca:	91 e0       	ldi	r25, 0x01	; 1
    46cc:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    46d0:	0f 2e       	mov	r0, r31
    46d2:	fb ed       	ldi	r31, 0xDB	; 219
    46d4:	ef 2e       	mov	r14, r31
    46d6:	f1 2c       	mov	r15, r1
    46d8:	f0 2d       	mov	r31, r0
    46da:	2b ec       	ldi	r18, 0xCB	; 203
    46dc:	30 e0       	ldi	r19, 0x00	; 0
    46de:	4e e7       	ldi	r20, 0x7E	; 126
    46e0:	51 e0       	ldi	r21, 0x01	; 1
    46e2:	6b eb       	ldi	r22, 0xBB	; 187
    46e4:	70 e0       	ldi	r23, 0x00	; 0
    46e6:	8d e8       	ldi	r24, 0x8D	; 141
    46e8:	91 e0       	ldi	r25, 0x01	; 1
    46ea:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    46ee:	0f c1       	rjmp	.+542    	; 0x490e <Print_Menu_Page+0x474>
    46f0:	c1 2c       	mov	r12, r1
    46f2:	d1 2c       	mov	r13, r1
    46f4:	0f 2e       	mov	r0, r31
    46f6:	f3 e6       	ldi	r31, 0x63	; 99
    46f8:	ef 2e       	mov	r14, r31
    46fa:	f1 2c       	mov	r15, r1
    46fc:	f0 2d       	mov	r31, r0
    46fe:	08 e4       	ldi	r16, 0x48	; 72
    4700:	10 e0       	ldi	r17, 0x00	; 0
    4702:	23 e5       	ldi	r18, 0x53	; 83
    4704:	30 e0       	ldi	r19, 0x00	; 0
    4706:	47 e5       	ldi	r20, 0x57	; 87
    4708:	50 e0       	ldi	r21, 0x00	; 0
    470a:	63 e4       	ldi	r22, 0x43	; 67
    470c:	70 e0       	ldi	r23, 0x00	; 0
    470e:	88 e4       	ldi	r24, 0x48	; 72
    4710:	90 e0       	ldi	r25, 0x00	; 0
    4712:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4716:	0f 2e       	mov	r0, r31
    4718:	fb e8       	ldi	r31, 0x8B	; 139
    471a:	ef 2e       	mov	r14, r31
    471c:	f1 2c       	mov	r15, r1
    471e:	f0 2d       	mov	r31, r0
    4720:	2b e7       	ldi	r18, 0x7B	; 123
    4722:	30 e0       	ldi	r19, 0x00	; 0
    4724:	47 e5       	ldi	r20, 0x57	; 87
    4726:	50 e0       	ldi	r21, 0x00	; 0
    4728:	6b e6       	ldi	r22, 0x6B	; 107
    472a:	70 e0       	ldi	r23, 0x00	; 0
    472c:	88 e4       	ldi	r24, 0x48	; 72
    472e:	90 e0       	ldi	r25, 0x00	; 0
    4730:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4734:	cc 24       	eor	r12, r12
    4736:	ca 94       	dec	r12
    4738:	dc 2c       	mov	r13, r12
    473a:	0f 2e       	mov	r0, r31
    473c:	f3 eb       	ldi	r31, 0xB3	; 179
    473e:	ef 2e       	mov	r14, r31
    4740:	f1 2c       	mov	r15, r1
    4742:	f0 2d       	mov	r31, r0
    4744:	23 ea       	ldi	r18, 0xA3	; 163
    4746:	30 e0       	ldi	r19, 0x00	; 0
    4748:	47 e5       	ldi	r20, 0x57	; 87
    474a:	50 e0       	ldi	r21, 0x00	; 0
    474c:	63 e9       	ldi	r22, 0x93	; 147
    474e:	70 e0       	ldi	r23, 0x00	; 0
    4750:	88 e4       	ldi	r24, 0x48	; 72
    4752:	90 e0       	ldi	r25, 0x00	; 0
    4754:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4758:	c1 2c       	mov	r12, r1
    475a:	d1 2c       	mov	r13, r1
    475c:	0f 2e       	mov	r0, r31
    475e:	fb ed       	ldi	r31, 0xDB	; 219
    4760:	ef 2e       	mov	r14, r31
    4762:	f1 2c       	mov	r15, r1
    4764:	f0 2d       	mov	r31, r0
    4766:	2b ec       	ldi	r18, 0xCB	; 203
    4768:	30 e0       	ldi	r19, 0x00	; 0
    476a:	47 e5       	ldi	r20, 0x57	; 87
    476c:	50 e0       	ldi	r21, 0x00	; 0
    476e:	6b eb       	ldi	r22, 0xBB	; 187
    4770:	70 e0       	ldi	r23, 0x00	; 0
    4772:	88 e4       	ldi	r24, 0x48	; 72
    4774:	90 e0       	ldi	r25, 0x00	; 0
    4776:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    477a:	0f 2e       	mov	r0, r31
    477c:	f3 e6       	ldi	r31, 0x63	; 99
    477e:	ef 2e       	mov	r14, r31
    4780:	f1 2c       	mov	r15, r1
    4782:	f0 2d       	mov	r31, r0
    4784:	0d e8       	ldi	r16, 0x8D	; 141
    4786:	11 e0       	ldi	r17, 0x01	; 1
    4788:	23 e5       	ldi	r18, 0x53	; 83
    478a:	30 e0       	ldi	r19, 0x00	; 0
    478c:	4e e7       	ldi	r20, 0x7E	; 126
    478e:	51 e0       	ldi	r21, 0x01	; 1
    4790:	63 e4       	ldi	r22, 0x43	; 67
    4792:	70 e0       	ldi	r23, 0x00	; 0
    4794:	8d e8       	ldi	r24, 0x8D	; 141
    4796:	91 e0       	ldi	r25, 0x01	; 1
    4798:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    479c:	0f 2e       	mov	r0, r31
    479e:	fb e8       	ldi	r31, 0x8B	; 139
    47a0:	ef 2e       	mov	r14, r31
    47a2:	f1 2c       	mov	r15, r1
    47a4:	f0 2d       	mov	r31, r0
    47a6:	2b e7       	ldi	r18, 0x7B	; 123
    47a8:	30 e0       	ldi	r19, 0x00	; 0
    47aa:	4e e7       	ldi	r20, 0x7E	; 126
    47ac:	51 e0       	ldi	r21, 0x01	; 1
    47ae:	6b e6       	ldi	r22, 0x6B	; 107
    47b0:	70 e0       	ldi	r23, 0x00	; 0
    47b2:	8d e8       	ldi	r24, 0x8D	; 141
    47b4:	91 e0       	ldi	r25, 0x01	; 1
    47b6:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    47ba:	cc 24       	eor	r12, r12
    47bc:	ca 94       	dec	r12
    47be:	dc 2c       	mov	r13, r12
    47c0:	0f 2e       	mov	r0, r31
    47c2:	f3 eb       	ldi	r31, 0xB3	; 179
    47c4:	ef 2e       	mov	r14, r31
    47c6:	f1 2c       	mov	r15, r1
    47c8:	f0 2d       	mov	r31, r0
    47ca:	23 ea       	ldi	r18, 0xA3	; 163
    47cc:	30 e0       	ldi	r19, 0x00	; 0
    47ce:	4e e7       	ldi	r20, 0x7E	; 126
    47d0:	51 e0       	ldi	r21, 0x01	; 1
    47d2:	63 e9       	ldi	r22, 0x93	; 147
    47d4:	70 e0       	ldi	r23, 0x00	; 0
    47d6:	8d e8       	ldi	r24, 0x8D	; 141
    47d8:	91 e0       	ldi	r25, 0x01	; 1
    47da:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    47de:	c1 2c       	mov	r12, r1
    47e0:	d1 2c       	mov	r13, r1
    47e2:	0f 2e       	mov	r0, r31
    47e4:	fb ed       	ldi	r31, 0xDB	; 219
    47e6:	ef 2e       	mov	r14, r31
    47e8:	f1 2c       	mov	r15, r1
    47ea:	f0 2d       	mov	r31, r0
    47ec:	2b ec       	ldi	r18, 0xCB	; 203
    47ee:	30 e0       	ldi	r19, 0x00	; 0
    47f0:	4e e7       	ldi	r20, 0x7E	; 126
    47f2:	51 e0       	ldi	r21, 0x01	; 1
    47f4:	6b eb       	ldi	r22, 0xBB	; 187
    47f6:	70 e0       	ldi	r23, 0x00	; 0
    47f8:	8d e8       	ldi	r24, 0x8D	; 141
    47fa:	91 e0       	ldi	r25, 0x01	; 1
    47fc:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4800:	86 c0       	rjmp	.+268    	; 0x490e <Print_Menu_Page+0x474>
    4802:	c1 2c       	mov	r12, r1
    4804:	d1 2c       	mov	r13, r1
    4806:	0f 2e       	mov	r0, r31
    4808:	f3 e6       	ldi	r31, 0x63	; 99
    480a:	ef 2e       	mov	r14, r31
    480c:	f1 2c       	mov	r15, r1
    480e:	f0 2d       	mov	r31, r0
    4810:	08 e4       	ldi	r16, 0x48	; 72
    4812:	10 e0       	ldi	r17, 0x00	; 0
    4814:	23 e5       	ldi	r18, 0x53	; 83
    4816:	30 e0       	ldi	r19, 0x00	; 0
    4818:	47 e5       	ldi	r20, 0x57	; 87
    481a:	50 e0       	ldi	r21, 0x00	; 0
    481c:	63 e4       	ldi	r22, 0x43	; 67
    481e:	70 e0       	ldi	r23, 0x00	; 0
    4820:	88 e4       	ldi	r24, 0x48	; 72
    4822:	90 e0       	ldi	r25, 0x00	; 0
    4824:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4828:	0f 2e       	mov	r0, r31
    482a:	fb e8       	ldi	r31, 0x8B	; 139
    482c:	ef 2e       	mov	r14, r31
    482e:	f1 2c       	mov	r15, r1
    4830:	f0 2d       	mov	r31, r0
    4832:	2b e7       	ldi	r18, 0x7B	; 123
    4834:	30 e0       	ldi	r19, 0x00	; 0
    4836:	47 e5       	ldi	r20, 0x57	; 87
    4838:	50 e0       	ldi	r21, 0x00	; 0
    483a:	6b e6       	ldi	r22, 0x6B	; 107
    483c:	70 e0       	ldi	r23, 0x00	; 0
    483e:	88 e4       	ldi	r24, 0x48	; 72
    4840:	90 e0       	ldi	r25, 0x00	; 0
    4842:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4846:	0f 2e       	mov	r0, r31
    4848:	f3 eb       	ldi	r31, 0xB3	; 179
    484a:	ef 2e       	mov	r14, r31
    484c:	f1 2c       	mov	r15, r1
    484e:	f0 2d       	mov	r31, r0
    4850:	23 ea       	ldi	r18, 0xA3	; 163
    4852:	30 e0       	ldi	r19, 0x00	; 0
    4854:	47 e5       	ldi	r20, 0x57	; 87
    4856:	50 e0       	ldi	r21, 0x00	; 0
    4858:	63 e9       	ldi	r22, 0x93	; 147
    485a:	70 e0       	ldi	r23, 0x00	; 0
    485c:	88 e4       	ldi	r24, 0x48	; 72
    485e:	90 e0       	ldi	r25, 0x00	; 0
    4860:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4864:	cc 24       	eor	r12, r12
    4866:	ca 94       	dec	r12
    4868:	dc 2c       	mov	r13, r12
    486a:	0f 2e       	mov	r0, r31
    486c:	fb ed       	ldi	r31, 0xDB	; 219
    486e:	ef 2e       	mov	r14, r31
    4870:	f1 2c       	mov	r15, r1
    4872:	f0 2d       	mov	r31, r0
    4874:	2b ec       	ldi	r18, 0xCB	; 203
    4876:	30 e0       	ldi	r19, 0x00	; 0
    4878:	47 e5       	ldi	r20, 0x57	; 87
    487a:	50 e0       	ldi	r21, 0x00	; 0
    487c:	6b eb       	ldi	r22, 0xBB	; 187
    487e:	70 e0       	ldi	r23, 0x00	; 0
    4880:	88 e4       	ldi	r24, 0x48	; 72
    4882:	90 e0       	ldi	r25, 0x00	; 0
    4884:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4888:	c1 2c       	mov	r12, r1
    488a:	d1 2c       	mov	r13, r1
    488c:	0f 2e       	mov	r0, r31
    488e:	f3 e6       	ldi	r31, 0x63	; 99
    4890:	ef 2e       	mov	r14, r31
    4892:	f1 2c       	mov	r15, r1
    4894:	f0 2d       	mov	r31, r0
    4896:	0d e8       	ldi	r16, 0x8D	; 141
    4898:	11 e0       	ldi	r17, 0x01	; 1
    489a:	23 e5       	ldi	r18, 0x53	; 83
    489c:	30 e0       	ldi	r19, 0x00	; 0
    489e:	4e e7       	ldi	r20, 0x7E	; 126
    48a0:	51 e0       	ldi	r21, 0x01	; 1
    48a2:	63 e4       	ldi	r22, 0x43	; 67
    48a4:	70 e0       	ldi	r23, 0x00	; 0
    48a6:	8d e8       	ldi	r24, 0x8D	; 141
    48a8:	91 e0       	ldi	r25, 0x01	; 1
    48aa:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    48ae:	0f 2e       	mov	r0, r31
    48b0:	fb e8       	ldi	r31, 0x8B	; 139
    48b2:	ef 2e       	mov	r14, r31
    48b4:	f1 2c       	mov	r15, r1
    48b6:	f0 2d       	mov	r31, r0
    48b8:	2b e7       	ldi	r18, 0x7B	; 123
    48ba:	30 e0       	ldi	r19, 0x00	; 0
    48bc:	4e e7       	ldi	r20, 0x7E	; 126
    48be:	51 e0       	ldi	r21, 0x01	; 1
    48c0:	6b e6       	ldi	r22, 0x6B	; 107
    48c2:	70 e0       	ldi	r23, 0x00	; 0
    48c4:	8d e8       	ldi	r24, 0x8D	; 141
    48c6:	91 e0       	ldi	r25, 0x01	; 1
    48c8:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    48cc:	0f 2e       	mov	r0, r31
    48ce:	f3 eb       	ldi	r31, 0xB3	; 179
    48d0:	ef 2e       	mov	r14, r31
    48d2:	f1 2c       	mov	r15, r1
    48d4:	f0 2d       	mov	r31, r0
    48d6:	23 ea       	ldi	r18, 0xA3	; 163
    48d8:	30 e0       	ldi	r19, 0x00	; 0
    48da:	4e e7       	ldi	r20, 0x7E	; 126
    48dc:	51 e0       	ldi	r21, 0x01	; 1
    48de:	63 e9       	ldi	r22, 0x93	; 147
    48e0:	70 e0       	ldi	r23, 0x00	; 0
    48e2:	8d e8       	ldi	r24, 0x8D	; 141
    48e4:	91 e0       	ldi	r25, 0x01	; 1
    48e6:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    48ea:	cc 24       	eor	r12, r12
    48ec:	ca 94       	dec	r12
    48ee:	dc 2c       	mov	r13, r12
    48f0:	0f 2e       	mov	r0, r31
    48f2:	fb ed       	ldi	r31, 0xDB	; 219
    48f4:	ef 2e       	mov	r14, r31
    48f6:	f1 2c       	mov	r15, r1
    48f8:	f0 2d       	mov	r31, r0
    48fa:	2b ec       	ldi	r18, 0xCB	; 203
    48fc:	30 e0       	ldi	r19, 0x00	; 0
    48fe:	4e e7       	ldi	r20, 0x7E	; 126
    4900:	51 e0       	ldi	r21, 0x01	; 1
    4902:	6b eb       	ldi	r22, 0xBB	; 187
    4904:	70 e0       	ldi	r23, 0x00	; 0
    4906:	8d e8       	ldi	r24, 0x8D	; 141
    4908:	91 e0       	ldi	r25, 0x01	; 1
    490a:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    490e:	1f 91       	pop	r17
    4910:	0f 91       	pop	r16
    4912:	ff 90       	pop	r15
    4914:	ef 90       	pop	r14
    4916:	df 90       	pop	r13
    4918:	cf 90       	pop	r12
    491a:	08 95       	ret

0000491c <DrawWeatherVane>:
    491c:	0f 93       	push	r16
    491e:	1f 93       	push	r17
    4920:	2f ef       	ldi	r18, 0xFF	; 255
    4922:	3f ef       	ldi	r19, 0xFF	; 255
    4924:	4b e4       	ldi	r20, 0x4B	; 75
    4926:	50 e0       	ldi	r21, 0x00	; 0
    4928:	6f e9       	ldi	r22, 0x9F	; 159
    492a:	70 e0       	ldi	r23, 0x00	; 0
    492c:	8f ee       	ldi	r24, 0xEF	; 239
    492e:	90 e0       	ldi	r25, 0x00	; 0
    4930:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4934:	2f ef       	ldi	r18, 0xFF	; 255
    4936:	3f ef       	ldi	r19, 0xFF	; 255
    4938:	4c e4       	ldi	r20, 0x4C	; 76
    493a:	50 e0       	ldi	r21, 0x00	; 0
    493c:	6f e9       	ldi	r22, 0x9F	; 159
    493e:	70 e0       	ldi	r23, 0x00	; 0
    4940:	8f ee       	ldi	r24, 0xEF	; 239
    4942:	90 e0       	ldi	r25, 0x00	; 0
    4944:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4948:	2f ef       	ldi	r18, 0xFF	; 255
    494a:	3f ef       	ldi	r19, 0xFF	; 255
    494c:	40 e5       	ldi	r20, 0x50	; 80
    494e:	50 e0       	ldi	r21, 0x00	; 0
    4950:	6f e9       	ldi	r22, 0x9F	; 159
    4952:	70 e0       	ldi	r23, 0x00	; 0
    4954:	8f ee       	ldi	r24, 0xEF	; 239
    4956:	90 e0       	ldi	r25, 0x00	; 0
    4958:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    495c:	2f ef       	ldi	r18, 0xFF	; 255
    495e:	3f ef       	ldi	r19, 0xFF	; 255
    4960:	41 e5       	ldi	r20, 0x51	; 81
    4962:	50 e0       	ldi	r21, 0x00	; 0
    4964:	6f e9       	ldi	r22, 0x9F	; 159
    4966:	70 e0       	ldi	r23, 0x00	; 0
    4968:	8f ee       	ldi	r24, 0xEF	; 239
    496a:	90 e0       	ldi	r25, 0x00	; 0
    496c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4970:	0f ef       	ldi	r16, 0xFF	; 255
    4972:	1f ef       	ldi	r17, 0xFF	; 255
    4974:	26 e1       	ldi	r18, 0x16	; 22
    4976:	30 e0       	ldi	r19, 0x00	; 0
    4978:	46 e1       	ldi	r20, 0x16	; 22
    497a:	50 e0       	ldi	r21, 0x00	; 0
    497c:	69 e4       	ldi	r22, 0x49	; 73
    497e:	70 e0       	ldi	r23, 0x00	; 0
    4980:	86 ee       	ldi	r24, 0xE6	; 230
    4982:	90 e0       	ldi	r25, 0x00	; 0
    4984:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4988:	24 e1       	ldi	r18, 0x14	; 20
    498a:	30 e0       	ldi	r19, 0x00	; 0
    498c:	44 e1       	ldi	r20, 0x14	; 20
    498e:	50 e0       	ldi	r21, 0x00	; 0
    4990:	6a e4       	ldi	r22, 0x4A	; 74
    4992:	70 e0       	ldi	r23, 0x00	; 0
    4994:	87 ee       	ldi	r24, 0xE7	; 231
    4996:	90 e0       	ldi	r25, 0x00	; 0
    4998:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    499c:	00 e0       	ldi	r16, 0x00	; 0
    499e:	10 e0       	ldi	r17, 0x00	; 0
    49a0:	22 e1       	ldi	r18, 0x12	; 18
    49a2:	30 e0       	ldi	r19, 0x00	; 0
    49a4:	42 e1       	ldi	r20, 0x12	; 18
    49a6:	50 e0       	ldi	r21, 0x00	; 0
    49a8:	6b e4       	ldi	r22, 0x4B	; 75
    49aa:	70 e0       	ldi	r23, 0x00	; 0
    49ac:	88 ee       	ldi	r24, 0xE8	; 232
    49ae:	90 e0       	ldi	r25, 0x00	; 0
    49b0:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
    49b4:	60 e0       	ldi	r22, 0x00	; 0
    49b6:	70 e0       	ldi	r23, 0x00	; 0
    49b8:	80 ee       	ldi	r24, 0xE0	; 224
    49ba:	9f e1       	ldi	r25, 0x1F	; 31
    49bc:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    49c0:	69 e4       	ldi	r22, 0x49	; 73
    49c2:	70 e0       	ldi	r23, 0x00	; 0
    49c4:	89 ee       	ldi	r24, 0xE9	; 233
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    49cc:	61 e0       	ldi	r22, 0x01	; 1
    49ce:	84 e4       	ldi	r24, 0x44	; 68
    49d0:	92 e0       	ldi	r25, 0x02	; 2
    49d2:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    49d6:	0f ef       	ldi	r16, 0xFF	; 255
    49d8:	1f ef       	ldi	r17, 0xFF	; 255
    49da:	26 e1       	ldi	r18, 0x16	; 22
    49dc:	30 e0       	ldi	r19, 0x00	; 0
    49de:	46 e1       	ldi	r20, 0x16	; 22
    49e0:	50 e0       	ldi	r21, 0x00	; 0
    49e2:	61 ee       	ldi	r22, 0xE1	; 225
    49e4:	70 e0       	ldi	r23, 0x00	; 0
    49e6:	86 ee       	ldi	r24, 0xE6	; 230
    49e8:	90 e0       	ldi	r25, 0x00	; 0
    49ea:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    49ee:	24 e1       	ldi	r18, 0x14	; 20
    49f0:	30 e0       	ldi	r19, 0x00	; 0
    49f2:	44 e1       	ldi	r20, 0x14	; 20
    49f4:	50 e0       	ldi	r21, 0x00	; 0
    49f6:	62 ee       	ldi	r22, 0xE2	; 226
    49f8:	70 e0       	ldi	r23, 0x00	; 0
    49fa:	87 ee       	ldi	r24, 0xE7	; 231
    49fc:	90 e0       	ldi	r25, 0x00	; 0
    49fe:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4a02:	00 e0       	ldi	r16, 0x00	; 0
    4a04:	10 e0       	ldi	r17, 0x00	; 0
    4a06:	22 e1       	ldi	r18, 0x12	; 18
    4a08:	30 e0       	ldi	r19, 0x00	; 0
    4a0a:	42 e1       	ldi	r20, 0x12	; 18
    4a0c:	50 e0       	ldi	r21, 0x00	; 0
    4a0e:	63 ee       	ldi	r22, 0xE3	; 227
    4a10:	70 e0       	ldi	r23, 0x00	; 0
    4a12:	88 ee       	ldi	r24, 0xE8	; 232
    4a14:	90 e0       	ldi	r25, 0x00	; 0
    4a16:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
    4a1a:	60 e0       	ldi	r22, 0x00	; 0
    4a1c:	70 e0       	ldi	r23, 0x00	; 0
    4a1e:	80 ee       	ldi	r24, 0xE0	; 224
    4a20:	9f e1       	ldi	r25, 0x1F	; 31
    4a22:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    4a26:	61 ee       	ldi	r22, 0xE1	; 225
    4a28:	70 e0       	ldi	r23, 0x00	; 0
    4a2a:	8a ee       	ldi	r24, 0xEA	; 234
    4a2c:	90 e0       	ldi	r25, 0x00	; 0
    4a2e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4a32:	61 e0       	ldi	r22, 0x01	; 1
    4a34:	8f e3       	ldi	r24, 0x3F	; 63
    4a36:	91 e0       	ldi	r25, 0x01	; 1
    4a38:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4a3c:	0f ef       	ldi	r16, 0xFF	; 255
    4a3e:	1f ef       	ldi	r17, 0xFF	; 255
    4a40:	26 e1       	ldi	r18, 0x16	; 22
    4a42:	30 e0       	ldi	r19, 0x00	; 0
    4a44:	46 e1       	ldi	r20, 0x16	; 22
    4a46:	50 e0       	ldi	r21, 0x00	; 0
    4a48:	65 e9       	ldi	r22, 0x95	; 149
    4a4a:	70 e0       	ldi	r23, 0x00	; 0
    4a4c:	89 e9       	ldi	r24, 0x99	; 153
    4a4e:	90 e0       	ldi	r25, 0x00	; 0
    4a50:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4a54:	24 e1       	ldi	r18, 0x14	; 20
    4a56:	30 e0       	ldi	r19, 0x00	; 0
    4a58:	44 e1       	ldi	r20, 0x14	; 20
    4a5a:	50 e0       	ldi	r21, 0x00	; 0
    4a5c:	66 e9       	ldi	r22, 0x96	; 150
    4a5e:	70 e0       	ldi	r23, 0x00	; 0
    4a60:	8a e9       	ldi	r24, 0x9A	; 154
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4a68:	00 e0       	ldi	r16, 0x00	; 0
    4a6a:	10 e0       	ldi	r17, 0x00	; 0
    4a6c:	22 e1       	ldi	r18, 0x12	; 18
    4a6e:	30 e0       	ldi	r19, 0x00	; 0
    4a70:	42 e1       	ldi	r20, 0x12	; 18
    4a72:	50 e0       	ldi	r21, 0x00	; 0
    4a74:	67 e9       	ldi	r22, 0x97	; 151
    4a76:	70 e0       	ldi	r23, 0x00	; 0
    4a78:	8b e9       	ldi	r24, 0x9B	; 155
    4a7a:	90 e0       	ldi	r25, 0x00	; 0
    4a7c:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
    4a80:	60 e0       	ldi	r22, 0x00	; 0
    4a82:	70 e0       	ldi	r23, 0x00	; 0
    4a84:	80 ee       	ldi	r24, 0xE0	; 224
    4a86:	9f e1       	ldi	r25, 0x1F	; 31
    4a88:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    4a8c:	65 e9       	ldi	r22, 0x95	; 149
    4a8e:	70 e0       	ldi	r23, 0x00	; 0
    4a90:	8e e9       	ldi	r24, 0x9E	; 158
    4a92:	90 e0       	ldi	r25, 0x00	; 0
    4a94:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4a98:	61 e0       	ldi	r22, 0x01	; 1
    4a9a:	82 e5       	ldi	r24, 0x52	; 82
    4a9c:	92 e0       	ldi	r25, 0x02	; 2
    4a9e:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4aa2:	0f ef       	ldi	r16, 0xFF	; 255
    4aa4:	1f ef       	ldi	r17, 0xFF	; 255
    4aa6:	26 e1       	ldi	r18, 0x16	; 22
    4aa8:	30 e0       	ldi	r19, 0x00	; 0
    4aaa:	46 e1       	ldi	r20, 0x16	; 22
    4aac:	50 e0       	ldi	r21, 0x00	; 0
    4aae:	65 e9       	ldi	r22, 0x95	; 149
    4ab0:	70 e0       	ldi	r23, 0x00	; 0
    4ab2:	80 e3       	ldi	r24, 0x30	; 48
    4ab4:	91 e0       	ldi	r25, 0x01	; 1
    4ab6:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4aba:	24 e1       	ldi	r18, 0x14	; 20
    4abc:	30 e0       	ldi	r19, 0x00	; 0
    4abe:	44 e1       	ldi	r20, 0x14	; 20
    4ac0:	50 e0       	ldi	r21, 0x00	; 0
    4ac2:	66 e9       	ldi	r22, 0x96	; 150
    4ac4:	70 e0       	ldi	r23, 0x00	; 0
    4ac6:	81 e3       	ldi	r24, 0x31	; 49
    4ac8:	91 e0       	ldi	r25, 0x01	; 1
    4aca:	0e 94 93 07 	call	0xf26	; 0xf26 <ILI9486_DrawRect>
    4ace:	00 e0       	ldi	r16, 0x00	; 0
    4ad0:	10 e0       	ldi	r17, 0x00	; 0
    4ad2:	22 e1       	ldi	r18, 0x12	; 18
    4ad4:	30 e0       	ldi	r19, 0x00	; 0
    4ad6:	42 e1       	ldi	r20, 0x12	; 18
    4ad8:	50 e0       	ldi	r21, 0x00	; 0
    4ada:	67 e9       	ldi	r22, 0x97	; 151
    4adc:	70 e0       	ldi	r23, 0x00	; 0
    4ade:	82 e3       	ldi	r24, 0x32	; 50
    4ae0:	91 e0       	ldi	r25, 0x01	; 1
    4ae2:	0e 94 5f 04 	call	0x8be	; 0x8be <ILI9486_fillRect>
    4ae6:	60 e0       	ldi	r22, 0x00	; 0
    4ae8:	70 e0       	ldi	r23, 0x00	; 0
    4aea:	80 ee       	ldi	r24, 0xE0	; 224
    4aec:	9f e1       	ldi	r25, 0x1F	; 31
    4aee:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    4af2:	65 e9       	ldi	r22, 0x95	; 149
    4af4:	70 e0       	ldi	r23, 0x00	; 0
    4af6:	85 e3       	ldi	r24, 0x35	; 53
    4af8:	91 e0       	ldi	r25, 0x01	; 1
    4afa:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4afe:	61 e0       	ldi	r22, 0x01	; 1
    4b00:	8e e4       	ldi	r24, 0x4E	; 78
    4b02:	92 e0       	ldi	r25, 0x02	; 2
    4b04:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4b08:	0f ef       	ldi	r16, 0xFF	; 255
    4b0a:	1f ef       	ldi	r17, 0xFF	; 255
    4b0c:	2a e6       	ldi	r18, 0x6A	; 106
    4b0e:	30 e0       	ldi	r19, 0x00	; 0
    4b10:	4a eb       	ldi	r20, 0xBA	; 186
    4b12:	50 e0       	ldi	r21, 0x00	; 0
    4b14:	62 e7       	ldi	r22, 0x72	; 114
    4b16:	70 e0       	ldi	r23, 0x00	; 0
    4b18:	82 ec       	ldi	r24, 0xC2	; 194
    4b1a:	90 e0       	ldi	r25, 0x00	; 0
    4b1c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b20:	29 e6       	ldi	r18, 0x69	; 105
    4b22:	30 e0       	ldi	r19, 0x00	; 0
    4b24:	4b eb       	ldi	r20, 0xBB	; 187
    4b26:	50 e0       	ldi	r21, 0x00	; 0
    4b28:	61 e7       	ldi	r22, 0x71	; 113
    4b2a:	70 e0       	ldi	r23, 0x00	; 0
    4b2c:	83 ec       	ldi	r24, 0xC3	; 195
    4b2e:	90 e0       	ldi	r25, 0x00	; 0
    4b30:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b34:	2b e6       	ldi	r18, 0x6B	; 107
    4b36:	30 e0       	ldi	r19, 0x00	; 0
    4b38:	49 eb       	ldi	r20, 0xB9	; 185
    4b3a:	50 e0       	ldi	r21, 0x00	; 0
    4b3c:	63 e7       	ldi	r22, 0x73	; 115
    4b3e:	70 e0       	ldi	r23, 0x00	; 0
    4b40:	81 ec       	ldi	r24, 0xC1	; 193
    4b42:	90 e0       	ldi	r25, 0x00	; 0
    4b44:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b48:	22 e7       	ldi	r18, 0x72	; 114
    4b4a:	30 e0       	ldi	r19, 0x00	; 0
    4b4c:	4c e1       	ldi	r20, 0x1C	; 28
    4b4e:	51 e0       	ldi	r21, 0x01	; 1
    4b50:	6a e6       	ldi	r22, 0x6A	; 106
    4b52:	70 e0       	ldi	r23, 0x00	; 0
    4b54:	84 e2       	ldi	r24, 0x24	; 36
    4b56:	91 e0       	ldi	r25, 0x01	; 1
    4b58:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b5c:	21 e7       	ldi	r18, 0x71	; 113
    4b5e:	30 e0       	ldi	r19, 0x00	; 0
    4b60:	4b e1       	ldi	r20, 0x1B	; 27
    4b62:	51 e0       	ldi	r21, 0x01	; 1
    4b64:	69 e6       	ldi	r22, 0x69	; 105
    4b66:	70 e0       	ldi	r23, 0x00	; 0
    4b68:	83 e2       	ldi	r24, 0x23	; 35
    4b6a:	91 e0       	ldi	r25, 0x01	; 1
    4b6c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b70:	23 e7       	ldi	r18, 0x73	; 115
    4b72:	30 e0       	ldi	r19, 0x00	; 0
    4b74:	4d e1       	ldi	r20, 0x1D	; 29
    4b76:	51 e0       	ldi	r21, 0x01	; 1
    4b78:	6b e6       	ldi	r22, 0x6B	; 107
    4b7a:	70 e0       	ldi	r23, 0x00	; 0
    4b7c:	85 e2       	ldi	r24, 0x25	; 37
    4b7e:	91 e0       	ldi	r25, 0x01	; 1
    4b80:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b84:	2c ec       	ldi	r18, 0xCC	; 204
    4b86:	30 e0       	ldi	r19, 0x00	; 0
    4b88:	4c e1       	ldi	r20, 0x1C	; 28
    4b8a:	51 e0       	ldi	r21, 0x01	; 1
    4b8c:	64 ed       	ldi	r22, 0xD4	; 212
    4b8e:	70 e0       	ldi	r23, 0x00	; 0
    4b90:	84 e2       	ldi	r24, 0x24	; 36
    4b92:	91 e0       	ldi	r25, 0x01	; 1
    4b94:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4b98:	2b ec       	ldi	r18, 0xCB	; 203
    4b9a:	30 e0       	ldi	r19, 0x00	; 0
    4b9c:	4d e1       	ldi	r20, 0x1D	; 29
    4b9e:	51 e0       	ldi	r21, 0x01	; 1
    4ba0:	63 ed       	ldi	r22, 0xD3	; 211
    4ba2:	70 e0       	ldi	r23, 0x00	; 0
    4ba4:	85 e2       	ldi	r24, 0x25	; 37
    4ba6:	91 e0       	ldi	r25, 0x01	; 1
    4ba8:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4bac:	2d ec       	ldi	r18, 0xCD	; 205
    4bae:	30 e0       	ldi	r19, 0x00	; 0
    4bb0:	4b e1       	ldi	r20, 0x1B	; 27
    4bb2:	51 e0       	ldi	r21, 0x01	; 1
    4bb4:	65 ed       	ldi	r22, 0xD5	; 213
    4bb6:	70 e0       	ldi	r23, 0x00	; 0
    4bb8:	83 e2       	ldi	r24, 0x23	; 35
    4bba:	91 e0       	ldi	r25, 0x01	; 1
    4bbc:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4bc0:	2c ec       	ldi	r18, 0xCC	; 204
    4bc2:	30 e0       	ldi	r19, 0x00	; 0
    4bc4:	42 ec       	ldi	r20, 0xC2	; 194
    4bc6:	50 e0       	ldi	r21, 0x00	; 0
    4bc8:	64 ed       	ldi	r22, 0xD4	; 212
    4bca:	70 e0       	ldi	r23, 0x00	; 0
    4bcc:	8a eb       	ldi	r24, 0xBA	; 186
    4bce:	90 e0       	ldi	r25, 0x00	; 0
    4bd0:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4bd4:	2b ec       	ldi	r18, 0xCB	; 203
    4bd6:	30 e0       	ldi	r19, 0x00	; 0
    4bd8:	41 ec       	ldi	r20, 0xC1	; 193
    4bda:	50 e0       	ldi	r21, 0x00	; 0
    4bdc:	63 ed       	ldi	r22, 0xD3	; 211
    4bde:	70 e0       	ldi	r23, 0x00	; 0
    4be0:	89 eb       	ldi	r24, 0xB9	; 185
    4be2:	90 e0       	ldi	r25, 0x00	; 0
    4be4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4be8:	2d ec       	ldi	r18, 0xCD	; 205
    4bea:	30 e0       	ldi	r19, 0x00	; 0
    4bec:	43 ec       	ldi	r20, 0xC3	; 195
    4bee:	50 e0       	ldi	r21, 0x00	; 0
    4bf0:	65 ed       	ldi	r22, 0xD5	; 213
    4bf2:	70 e0       	ldi	r23, 0x00	; 0
    4bf4:	8b eb       	ldi	r24, 0xBB	; 187
    4bf6:	90 e0       	ldi	r25, 0x00	; 0
    4bf8:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4bfc:	20 ee       	ldi	r18, 0xE0	; 224
    4bfe:	3f e1       	ldi	r19, 0x1F	; 31
    4c00:	4e e1       	ldi	r20, 0x1E	; 30
    4c02:	50 e0       	ldi	r21, 0x00	; 0
    4c04:	6f e9       	ldi	r22, 0x9F	; 159
    4c06:	70 e0       	ldi	r23, 0x00	; 0
    4c08:	8f ee       	ldi	r24, 0xEF	; 239
    4c0a:	90 e0       	ldi	r25, 0x00	; 0
    4c0c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c10:	20 ee       	ldi	r18, 0xE0	; 224
    4c12:	3f e1       	ldi	r19, 0x1F	; 31
    4c14:	4d e1       	ldi	r20, 0x1D	; 29
    4c16:	50 e0       	ldi	r21, 0x00	; 0
    4c18:	6f e9       	ldi	r22, 0x9F	; 159
    4c1a:	70 e0       	ldi	r23, 0x00	; 0
    4c1c:	8f ee       	ldi	r24, 0xEF	; 239
    4c1e:	90 e0       	ldi	r25, 0x00	; 0
    4c20:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c24:	2f ef       	ldi	r18, 0xFF	; 255
    4c26:	3f ef       	ldi	r19, 0xFF	; 255
    4c28:	4c e1       	ldi	r20, 0x1C	; 28
    4c2a:	50 e0       	ldi	r21, 0x00	; 0
    4c2c:	6f e9       	ldi	r22, 0x9F	; 159
    4c2e:	70 e0       	ldi	r23, 0x00	; 0
    4c30:	8f ee       	ldi	r24, 0xEF	; 239
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c38:	2f ef       	ldi	r18, 0xFF	; 255
    4c3a:	3f ef       	ldi	r19, 0xFF	; 255
    4c3c:	4b e1       	ldi	r20, 0x1B	; 27
    4c3e:	50 e0       	ldi	r21, 0x00	; 0
    4c40:	6f e9       	ldi	r22, 0x9F	; 159
    4c42:	70 e0       	ldi	r23, 0x00	; 0
    4c44:	8f ee       	ldi	r24, 0xEF	; 239
    4c46:	90 e0       	ldi	r25, 0x00	; 0
    4c48:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c4c:	2f ef       	ldi	r18, 0xFF	; 255
    4c4e:	3f ef       	ldi	r19, 0xFF	; 255
    4c50:	4a e0       	ldi	r20, 0x0A	; 10
    4c52:	50 e0       	ldi	r21, 0x00	; 0
    4c54:	6f e9       	ldi	r22, 0x9F	; 159
    4c56:	70 e0       	ldi	r23, 0x00	; 0
    4c58:	8f ee       	ldi	r24, 0xEF	; 239
    4c5a:	90 e0       	ldi	r25, 0x00	; 0
    4c5c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c60:	2f ef       	ldi	r18, 0xFF	; 255
    4c62:	3f ef       	ldi	r19, 0xFF	; 255
    4c64:	49 e0       	ldi	r20, 0x09	; 9
    4c66:	50 e0       	ldi	r21, 0x00	; 0
    4c68:	6f e9       	ldi	r22, 0x9F	; 159
    4c6a:	70 e0       	ldi	r23, 0x00	; 0
    4c6c:	8f ee       	ldi	r24, 0xEF	; 239
    4c6e:	90 e0       	ldi	r25, 0x00	; 0
    4c70:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ILI9486_Draw_Circle>
    4c74:	20 ee       	ldi	r18, 0xE0	; 224
    4c76:	3f e1       	ldi	r19, 0x1F	; 31
    4c78:	48 e0       	ldi	r20, 0x08	; 8
    4c7a:	50 e0       	ldi	r21, 0x00	; 0
    4c7c:	6f e9       	ldi	r22, 0x9F	; 159
    4c7e:	70 e0       	ldi	r23, 0x00	; 0
    4c80:	8f ee       	ldi	r24, 0xEF	; 239
    4c82:	90 e0       	ldi	r25, 0x00	; 0
    4c84:	0e 94 6a 07 	call	0xed4	; 0xed4 <ILI9486_fillCircle>
    4c88:	25 e9       	ldi	r18, 0x95	; 149
    4c8a:	30 e0       	ldi	r19, 0x00	; 0
    4c8c:	4d ee       	ldi	r20, 0xED	; 237
    4c8e:	50 e0       	ldi	r21, 0x00	; 0
    4c90:	61 e8       	ldi	r22, 0x81	; 129
    4c92:	70 e0       	ldi	r23, 0x00	; 0
    4c94:	8f ee       	ldi	r24, 0xEF	; 239
    4c96:	90 e0       	ldi	r25, 0x00	; 0
    4c98:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4c9c:	25 e9       	ldi	r18, 0x95	; 149
    4c9e:	30 e0       	ldi	r19, 0x00	; 0
    4ca0:	41 ef       	ldi	r20, 0xF1	; 241
    4ca2:	50 e0       	ldi	r21, 0x00	; 0
    4ca4:	61 e8       	ldi	r22, 0x81	; 129
    4ca6:	70 e0       	ldi	r23, 0x00	; 0
    4ca8:	8f ee       	ldi	r24, 0xEF	; 239
    4caa:	90 e0       	ldi	r25, 0x00	; 0
    4cac:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4cb0:	2d e9       	ldi	r18, 0x9D	; 157
    4cb2:	30 e0       	ldi	r19, 0x00	; 0
    4cb4:	45 ee       	ldi	r20, 0xE5	; 229
    4cb6:	50 e0       	ldi	r21, 0x00	; 0
    4cb8:	6f e9       	ldi	r22, 0x9F	; 159
    4cba:	70 e0       	ldi	r23, 0x00	; 0
    4cbc:	81 ed       	ldi	r24, 0xD1	; 209
    4cbe:	90 e0       	ldi	r25, 0x00	; 0
    4cc0:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4cc4:	21 ea       	ldi	r18, 0xA1	; 161
    4cc6:	30 e0       	ldi	r19, 0x00	; 0
    4cc8:	45 ee       	ldi	r20, 0xE5	; 229
    4cca:	50 e0       	ldi	r21, 0x00	; 0
    4ccc:	6f e9       	ldi	r22, 0x9F	; 159
    4cce:	70 e0       	ldi	r23, 0x00	; 0
    4cd0:	81 ed       	ldi	r24, 0xD1	; 209
    4cd2:	90 e0       	ldi	r25, 0x00	; 0
    4cd4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4cd8:	2d e9       	ldi	r18, 0x9D	; 157
    4cda:	30 e0       	ldi	r19, 0x00	; 0
    4cdc:	49 ef       	ldi	r20, 0xF9	; 249
    4cde:	50 e0       	ldi	r21, 0x00	; 0
    4ce0:	6f e9       	ldi	r22, 0x9F	; 159
    4ce2:	70 e0       	ldi	r23, 0x00	; 0
    4ce4:	8d e0       	ldi	r24, 0x0D	; 13
    4ce6:	91 e0       	ldi	r25, 0x01	; 1
    4ce8:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4cec:	21 ea       	ldi	r18, 0xA1	; 161
    4cee:	30 e0       	ldi	r19, 0x00	; 0
    4cf0:	49 ef       	ldi	r20, 0xF9	; 249
    4cf2:	50 e0       	ldi	r21, 0x00	; 0
    4cf4:	6f e9       	ldi	r22, 0x9F	; 159
    4cf6:	70 e0       	ldi	r23, 0x00	; 0
    4cf8:	8d e0       	ldi	r24, 0x0D	; 13
    4cfa:	91 e0       	ldi	r25, 0x01	; 1
    4cfc:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4d00:	29 ea       	ldi	r18, 0xA9	; 169
    4d02:	30 e0       	ldi	r19, 0x00	; 0
    4d04:	4d ee       	ldi	r20, 0xED	; 237
    4d06:	50 e0       	ldi	r21, 0x00	; 0
    4d08:	6d eb       	ldi	r22, 0xBD	; 189
    4d0a:	70 e0       	ldi	r23, 0x00	; 0
    4d0c:	8f ee       	ldi	r24, 0xEF	; 239
    4d0e:	90 e0       	ldi	r25, 0x00	; 0
    4d10:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4d14:	29 ea       	ldi	r18, 0xA9	; 169
    4d16:	30 e0       	ldi	r19, 0x00	; 0
    4d18:	41 ef       	ldi	r20, 0xF1	; 241
    4d1a:	50 e0       	ldi	r21, 0x00	; 0
    4d1c:	6d eb       	ldi	r22, 0xBD	; 189
    4d1e:	70 e0       	ldi	r23, 0x00	; 0
    4d20:	8f ee       	ldi	r24, 0xEF	; 239
    4d22:	90 e0       	ldi	r25, 0x00	; 0
    4d24:	0e 94 b5 05 	call	0xb6a	; 0xb6a <ILI9486_Draw_Line>
    4d28:	1f 91       	pop	r17
    4d2a:	0f 91       	pop	r16
    4d2c:	08 95       	ret

00004d2e <Print_Static_Home_Page>:
    4d2e:	80 e0       	ldi	r24, 0x00	; 0
    4d30:	90 e0       	ldi	r25, 0x00	; 0
    4d32:	0e 94 0c 04 	call	0x818	; 0x818 <ILI9486_FillScreen>
    4d36:	81 e0       	ldi	r24, 0x01	; 1
    4d38:	0e 94 7f 01 	call	0x2fe	; 0x2fe <ILI9486_SetRotation>
    4d3c:	0e 94 30 1d 	call	0x3a60	; 0x3a60 <Print_Boards_Main>
    4d40:	0e 94 8e 24 	call	0x491c	; 0x491c <DrawWeatherVane>
    4d44:	60 e0       	ldi	r22, 0x00	; 0
    4d46:	70 e0       	ldi	r23, 0x00	; 0
    4d48:	8f e1       	ldi	r24, 0x1F	; 31
    4d4a:	90 e0       	ldi	r25, 0x00	; 0
    4d4c:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    4d50:	61 ef       	ldi	r22, 0xF1	; 241
    4d52:	70 e0       	ldi	r23, 0x00	; 0
    4d54:	8d ea       	ldi	r24, 0xAD	; 173
    4d56:	90 e0       	ldi	r25, 0x00	; 0
    4d58:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4d5c:	60 e0       	ldi	r22, 0x00	; 0
    4d5e:	82 e5       	ldi	r24, 0x52	; 82
    4d60:	92 e0       	ldi	r25, 0x02	; 2
    4d62:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4d66:	6a ef       	ldi	r22, 0xFA	; 250
    4d68:	70 e0       	ldi	r23, 0x00	; 0
    4d6a:	8a eb       	ldi	r24, 0xBA	; 186
    4d6c:	90 e0       	ldi	r25, 0x00	; 0
    4d6e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4d72:	60 e0       	ldi	r22, 0x00	; 0
    4d74:	86 e4       	ldi	r24, 0x46	; 70
    4d76:	92 e0       	ldi	r25, 0x02	; 2
    4d78:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4d7c:	6f ef       	ldi	r22, 0xFF	; 255
    4d7e:	70 e0       	ldi	r23, 0x00	; 0
    4d80:	86 ec       	ldi	r24, 0xC6	; 198
    4d82:	90 e0       	ldi	r25, 0x00	; 0
    4d84:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4d88:	60 e0       	ldi	r22, 0x00	; 0
    4d8a:	84 e4       	ldi	r24, 0x44	; 68
    4d8c:	92 e0       	ldi	r25, 0x02	; 2
    4d8e:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4d92:	61 e0       	ldi	r22, 0x01	; 1
    4d94:	71 e0       	ldi	r23, 0x01	; 1
    4d96:	87 ed       	ldi	r24, 0xD7	; 215
    4d98:	90 e0       	ldi	r25, 0x00	; 0
    4d9a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4d9e:	60 e0       	ldi	r22, 0x00	; 0
    4da0:	88 e4       	ldi	r24, 0x48	; 72
    4da2:	92 e0       	ldi	r25, 0x02	; 2
    4da4:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4da8:	61 e0       	ldi	r22, 0x01	; 1
    4daa:	71 e0       	ldi	r23, 0x01	; 1
    4dac:	8f ee       	ldi	r24, 0xEF	; 239
    4dae:	90 e0       	ldi	r25, 0x00	; 0
    4db0:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4db4:	60 e0       	ldi	r22, 0x00	; 0
    4db6:	8f e3       	ldi	r24, 0x3F	; 63
    4db8:	91 e0       	ldi	r25, 0x01	; 1
    4dba:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4dbe:	61 e0       	ldi	r22, 0x01	; 1
    4dc0:	71 e0       	ldi	r23, 0x01	; 1
    4dc2:	8d ef       	ldi	r24, 0xFD	; 253
    4dc4:	90 e0       	ldi	r25, 0x00	; 0
    4dc6:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4dca:	60 e0       	ldi	r22, 0x00	; 0
    4dcc:	8a e4       	ldi	r24, 0x4A	; 74
    4dce:	92 e0       	ldi	r25, 0x02	; 2
    4dd0:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4dd4:	6f ef       	ldi	r22, 0xFF	; 255
    4dd6:	70 e0       	ldi	r23, 0x00	; 0
    4dd8:	8b e0       	ldi	r24, 0x0B	; 11
    4dda:	91 e0       	ldi	r25, 0x01	; 1
    4ddc:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4de0:	60 e0       	ldi	r22, 0x00	; 0
    4de2:	8e e4       	ldi	r24, 0x4E	; 78
    4de4:	92 e0       	ldi	r25, 0x02	; 2
    4de6:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4dea:	6a ef       	ldi	r22, 0xFA	; 250
    4dec:	70 e0       	ldi	r23, 0x00	; 0
    4dee:	89 e1       	ldi	r24, 0x19	; 25
    4df0:	91 e0       	ldi	r25, 0x01	; 1
    4df2:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4df6:	60 e0       	ldi	r22, 0x00	; 0
    4df8:	8e e4       	ldi	r24, 0x4E	; 78
    4dfa:	92 e0       	ldi	r25, 0x02	; 2
    4dfc:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4e00:	60 ef       	ldi	r22, 0xF0	; 240
    4e02:	70 e0       	ldi	r23, 0x00	; 0
    4e04:	87 e2       	ldi	r24, 0x27	; 39
    4e06:	91 e0       	ldi	r25, 0x01	; 1
    4e08:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    4e0c:	60 e0       	ldi	r22, 0x00	; 0
    4e0e:	88 e4       	ldi	r24, 0x48	; 72
    4e10:	92 e0       	ldi	r25, 0x02	; 2
    4e12:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    4e16:	08 95       	ret

00004e18 <DrawWindDirect>:
    4e18:	cf 92       	push	r12
    4e1a:	df 92       	push	r13
    4e1c:	ef 92       	push	r14
    4e1e:	ff 92       	push	r15
    4e20:	0f 93       	push	r16
    4e22:	1f 93       	push	r17
    4e24:	8e e4       	ldi	r24, 0x4E	; 78
    4e26:	90 e0       	ldi	r25, 0x00	; 0
    4e28:	90 93 78 03 	sts	0x0378, r25	; 0x800378 <wind_direction+0x1>
    4e2c:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <wind_direction>
    4e30:	64 e4       	ldi	r22, 0x44	; 68
    4e32:	72 e0       	ldi	r23, 0x02	; 2
    4e34:	87 e7       	ldi	r24, 0x77	; 119
    4e36:	93 e0       	ldi	r25, 0x03	; 3
    4e38:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    4e3c:	89 2b       	or	r24, r25
    4e3e:	49 f5       	brne	.+82     	; 0x4e92 <DrawWindDirect+0x7a>
    4e40:	0f 2e       	mov	r0, r31
    4e42:	f0 ee       	ldi	r31, 0xE0	; 224
    4e44:	cf 2e       	mov	r12, r31
    4e46:	ff e1       	ldi	r31, 0x1F	; 31
    4e48:	df 2e       	mov	r13, r31
    4e4a:	f0 2d       	mov	r31, r0
    4e4c:	0f 2e       	mov	r0, r31
    4e4e:	f3 e7       	ldi	r31, 0x73	; 115
    4e50:	ef 2e       	mov	r14, r31
    4e52:	f1 2c       	mov	r15, r1
    4e54:	f0 2d       	mov	r31, r0
    4e56:	0f ee       	ldi	r16, 0xEF	; 239
    4e58:	10 e0       	ldi	r17, 0x00	; 0
    4e5a:	2c e7       	ldi	r18, 0x7C	; 124
    4e5c:	30 e0       	ldi	r19, 0x00	; 0
    4e5e:	49 ee       	ldi	r20, 0xE9	; 233
    4e60:	50 e0       	ldi	r21, 0x00	; 0
    4e62:	63 e6       	ldi	r22, 0x63	; 99
    4e64:	70 e0       	ldi	r23, 0x00	; 0
    4e66:	8f ee       	ldi	r24, 0xEF	; 239
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4e6e:	0f 2e       	mov	r0, r31
    4e70:	fc e7       	ldi	r31, 0x7C	; 124
    4e72:	ef 2e       	mov	r14, r31
    4e74:	f1 2c       	mov	r15, r1
    4e76:	f0 2d       	mov	r31, r0
    4e78:	05 ef       	ldi	r16, 0xF5	; 245
    4e7a:	10 e0       	ldi	r17, 0x00	; 0
    4e7c:	23 e7       	ldi	r18, 0x73	; 115
    4e7e:	30 e0       	ldi	r19, 0x00	; 0
    4e80:	4f ee       	ldi	r20, 0xEF	; 239
    4e82:	50 e0       	ldi	r21, 0x00	; 0
    4e84:	63 e6       	ldi	r22, 0x63	; 99
    4e86:	70 e0       	ldi	r23, 0x00	; 0
    4e88:	8f ee       	ldi	r24, 0xEF	; 239
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4e90:	42 c1       	rjmp	.+644    	; 0x5116 <DrawWindDirect+0x2fe>
    4e92:	6f e3       	ldi	r22, 0x3F	; 63
    4e94:	71 e0       	ldi	r23, 0x01	; 1
    4e96:	87 e7       	ldi	r24, 0x77	; 119
    4e98:	93 e0       	ldi	r25, 0x03	; 3
    4e9a:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    4e9e:	89 2b       	or	r24, r25
    4ea0:	49 f5       	brne	.+82     	; 0x4ef4 <DrawWindDirect+0xdc>
    4ea2:	0f 2e       	mov	r0, r31
    4ea4:	f0 ee       	ldi	r31, 0xE0	; 224
    4ea6:	cf 2e       	mov	r12, r31
    4ea8:	ff e1       	ldi	r31, 0x1F	; 31
    4eaa:	df 2e       	mov	r13, r31
    4eac:	f0 2d       	mov	r31, r0
    4eae:	0f 2e       	mov	r0, r31
    4eb0:	fd ec       	ldi	r31, 0xCD	; 205
    4eb2:	ef 2e       	mov	r14, r31
    4eb4:	f1 2c       	mov	r15, r1
    4eb6:	f0 2d       	mov	r31, r0
    4eb8:	0f ee       	ldi	r16, 0xEF	; 239
    4eba:	10 e0       	ldi	r17, 0x00	; 0
    4ebc:	2d ed       	ldi	r18, 0xDD	; 221
    4ebe:	30 e0       	ldi	r19, 0x00	; 0
    4ec0:	4f ee       	ldi	r20, 0xEF	; 239
    4ec2:	50 e0       	ldi	r21, 0x00	; 0
    4ec4:	64 ec       	ldi	r22, 0xC4	; 196
    4ec6:	70 e0       	ldi	r23, 0x00	; 0
    4ec8:	89 ee       	ldi	r24, 0xE9	; 233
    4eca:	90 e0       	ldi	r25, 0x00	; 0
    4ecc:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4ed0:	0f 2e       	mov	r0, r31
    4ed2:	f4 ec       	ldi	r31, 0xC4	; 196
    4ed4:	ef 2e       	mov	r14, r31
    4ed6:	f1 2c       	mov	r15, r1
    4ed8:	f0 2d       	mov	r31, r0
    4eda:	05 ef       	ldi	r16, 0xF5	; 245
    4edc:	10 e0       	ldi	r17, 0x00	; 0
    4ede:	2d ec       	ldi	r18, 0xCD	; 205
    4ee0:	30 e0       	ldi	r19, 0x00	; 0
    4ee2:	4f ee       	ldi	r20, 0xEF	; 239
    4ee4:	50 e0       	ldi	r21, 0x00	; 0
    4ee6:	6d ed       	ldi	r22, 0xDD	; 221
    4ee8:	70 e0       	ldi	r23, 0x00	; 0
    4eea:	8f ee       	ldi	r24, 0xEF	; 239
    4eec:	90 e0       	ldi	r25, 0x00	; 0
    4eee:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4ef2:	11 c1       	rjmp	.+546    	; 0x5116 <DrawWindDirect+0x2fe>
    4ef4:	6e e4       	ldi	r22, 0x4E	; 78
    4ef6:	72 e0       	ldi	r23, 0x02	; 2
    4ef8:	87 e7       	ldi	r24, 0x77	; 119
    4efa:	93 e0       	ldi	r25, 0x03	; 3
    4efc:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    4f00:	89 2b       	or	r24, r25
    4f02:	39 f5       	brne	.+78     	; 0x4f52 <DrawWindDirect+0x13a>
    4f04:	0f 2e       	mov	r0, r31
    4f06:	f0 ee       	ldi	r31, 0xE0	; 224
    4f08:	cf 2e       	mov	r12, r31
    4f0a:	ff e1       	ldi	r31, 0x1F	; 31
    4f0c:	df 2e       	mov	r13, r31
    4f0e:	f0 2d       	mov	r31, r0
    4f10:	0f 2e       	mov	r0, r31
    4f12:	f9 e9       	ldi	r31, 0x99	; 153
    4f14:	ef 2e       	mov	r14, r31
    4f16:	f1 2c       	mov	r15, r1
    4f18:	f0 2d       	mov	r31, r0
    4f1a:	03 e1       	ldi	r16, 0x13	; 19
    4f1c:	11 e0       	ldi	r17, 0x01	; 1
    4f1e:	2f e9       	ldi	r18, 0x9F	; 159
    4f20:	30 e0       	ldi	r19, 0x00	; 0
    4f22:	4c e1       	ldi	r20, 0x1C	; 28
    4f24:	51 e0       	ldi	r21, 0x01	; 1
    4f26:	6f e9       	ldi	r22, 0x9F	; 159
    4f28:	70 e0       	ldi	r23, 0x00	; 0
    4f2a:	8c e2       	ldi	r24, 0x2C	; 44
    4f2c:	91 e0       	ldi	r25, 0x01	; 1
    4f2e:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4f32:	0f 2e       	mov	r0, r31
    4f34:	f5 ea       	ldi	r31, 0xA5	; 165
    4f36:	ef 2e       	mov	r14, r31
    4f38:	f1 2c       	mov	r15, r1
    4f3a:	f0 2d       	mov	r31, r0
    4f3c:	2f e9       	ldi	r18, 0x9F	; 159
    4f3e:	30 e0       	ldi	r19, 0x00	; 0
    4f40:	4c e1       	ldi	r20, 0x1C	; 28
    4f42:	51 e0       	ldi	r21, 0x01	; 1
    4f44:	6f e9       	ldi	r22, 0x9F	; 159
    4f46:	70 e0       	ldi	r23, 0x00	; 0
    4f48:	8c e2       	ldi	r24, 0x2C	; 44
    4f4a:	91 e0       	ldi	r25, 0x01	; 1
    4f4c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4f50:	e2 c0       	rjmp	.+452    	; 0x5116 <DrawWindDirect+0x2fe>
    4f52:	62 e5       	ldi	r22, 0x52	; 82
    4f54:	72 e0       	ldi	r23, 0x02	; 2
    4f56:	87 e7       	ldi	r24, 0x77	; 119
    4f58:	93 e0       	ldi	r25, 0x03	; 3
    4f5a:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    4f5e:	89 2b       	or	r24, r25
    4f60:	39 f5       	brne	.+78     	; 0x4fb0 <DrawWindDirect+0x198>
    4f62:	0f 2e       	mov	r0, r31
    4f64:	f0 ee       	ldi	r31, 0xE0	; 224
    4f66:	cf 2e       	mov	r12, r31
    4f68:	ff e1       	ldi	r31, 0x1F	; 31
    4f6a:	df 2e       	mov	r13, r31
    4f6c:	f0 2d       	mov	r31, r0
    4f6e:	0f 2e       	mov	r0, r31
    4f70:	f9 e9       	ldi	r31, 0x99	; 153
    4f72:	ef 2e       	mov	r14, r31
    4f74:	f1 2c       	mov	r15, r1
    4f76:	f0 2d       	mov	r31, r0
    4f78:	0c ec       	ldi	r16, 0xCC	; 204
    4f7a:	10 e0       	ldi	r17, 0x00	; 0
    4f7c:	2f e9       	ldi	r18, 0x9F	; 159
    4f7e:	30 e0       	ldi	r19, 0x00	; 0
    4f80:	43 ec       	ldi	r20, 0xC3	; 195
    4f82:	50 e0       	ldi	r21, 0x00	; 0
    4f84:	6f e9       	ldi	r22, 0x9F	; 159
    4f86:	70 e0       	ldi	r23, 0x00	; 0
    4f88:	83 eb       	ldi	r24, 0xB3	; 179
    4f8a:	90 e0       	ldi	r25, 0x00	; 0
    4f8c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4f90:	0f 2e       	mov	r0, r31
    4f92:	f5 ea       	ldi	r31, 0xA5	; 165
    4f94:	ef 2e       	mov	r14, r31
    4f96:	f1 2c       	mov	r15, r1
    4f98:	f0 2d       	mov	r31, r0
    4f9a:	2f e9       	ldi	r18, 0x9F	; 159
    4f9c:	30 e0       	ldi	r19, 0x00	; 0
    4f9e:	43 ec       	ldi	r20, 0xC3	; 195
    4fa0:	50 e0       	ldi	r21, 0x00	; 0
    4fa2:	6f e9       	ldi	r22, 0x9F	; 159
    4fa4:	70 e0       	ldi	r23, 0x00	; 0
    4fa6:	83 eb       	ldi	r24, 0xB3	; 179
    4fa8:	90 e0       	ldi	r25, 0x00	; 0
    4faa:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4fae:	b3 c0       	rjmp	.+358    	; 0x5116 <DrawWindDirect+0x2fe>
    4fb0:	6c e4       	ldi	r22, 0x4C	; 76
    4fb2:	72 e0       	ldi	r23, 0x02	; 2
    4fb4:	87 e7       	ldi	r24, 0x77	; 119
    4fb6:	93 e0       	ldi	r25, 0x03	; 3
    4fb8:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    4fbc:	89 2b       	or	r24, r25
    4fbe:	09 f5       	brne	.+66     	; 0x5002 <DrawWindDirect+0x1ea>
    4fc0:	0f 2e       	mov	r0, r31
    4fc2:	f0 ee       	ldi	r31, 0xE0	; 224
    4fc4:	cf 2e       	mov	r12, r31
    4fc6:	ff e1       	ldi	r31, 0x1F	; 31
    4fc8:	df 2e       	mov	r13, r31
    4fca:	f0 2d       	mov	r31, r0
    4fcc:	68 94       	set
    4fce:	ee 24       	eor	r14, r14
    4fd0:	e7 f8       	bld	r14, 7
    4fd2:	f1 2c       	mov	r15, r1
    4fd4:	0e e0       	ldi	r16, 0x0E	; 14
    4fd6:	11 e0       	ldi	r17, 0x01	; 1
    4fd8:	22 e8       	ldi	r18, 0x82	; 130
    4fda:	30 e0       	ldi	r19, 0x00	; 0
    4fdc:	43 e0       	ldi	r20, 0x03	; 3
    4fde:	51 e0       	ldi	r21, 0x01	; 1
    4fe0:	65 e7       	ldi	r22, 0x75	; 117
    4fe2:	70 e0       	ldi	r23, 0x00	; 0
    4fe4:	89 e1       	ldi	r24, 0x19	; 25
    4fe6:	91 e0       	ldi	r25, 0x01	; 1
    4fe8:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    4fec:	2b e8       	ldi	r18, 0x8B	; 139
    4fee:	30 e0       	ldi	r19, 0x00	; 0
    4ff0:	4c e0       	ldi	r20, 0x0C	; 12
    4ff2:	51 e0       	ldi	r21, 0x01	; 1
    4ff4:	65 e7       	ldi	r22, 0x75	; 117
    4ff6:	70 e0       	ldi	r23, 0x00	; 0
    4ff8:	89 e1       	ldi	r24, 0x19	; 25
    4ffa:	91 e0       	ldi	r25, 0x01	; 1
    4ffc:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    5000:	8a c0       	rjmp	.+276    	; 0x5116 <DrawWindDirect+0x2fe>
    5002:	60 e5       	ldi	r22, 0x50	; 80
    5004:	72 e0       	ldi	r23, 0x02	; 2
    5006:	87 e7       	ldi	r24, 0x77	; 119
    5008:	93 e0       	ldi	r25, 0x03	; 3
    500a:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    500e:	89 2b       	or	r24, r25
    5010:	41 f5       	brne	.+80     	; 0x5062 <DrawWindDirect+0x24a>
    5012:	0f 2e       	mov	r0, r31
    5014:	f0 ee       	ldi	r31, 0xE0	; 224
    5016:	cf 2e       	mov	r12, r31
    5018:	ff e1       	ldi	r31, 0x1F	; 31
    501a:	df 2e       	mov	r13, r31
    501c:	f0 2d       	mov	r31, r0
    501e:	68 94       	set
    5020:	ee 24       	eor	r14, r14
    5022:	e7 f8       	bld	r14, 7
    5024:	f1 2c       	mov	r15, r1
    5026:	00 ed       	ldi	r16, 0xD0	; 208
    5028:	10 e0       	ldi	r17, 0x00	; 0
    502a:	2b e8       	ldi	r18, 0x8B	; 139
    502c:	30 e0       	ldi	r19, 0x00	; 0
    502e:	42 ed       	ldi	r20, 0xD2	; 210
    5030:	50 e0       	ldi	r21, 0x00	; 0
    5032:	65 e7       	ldi	r22, 0x75	; 117
    5034:	70 e0       	ldi	r23, 0x00	; 0
    5036:	85 ec       	ldi	r24, 0xC5	; 197
    5038:	90 e0       	ldi	r25, 0x00	; 0
    503a:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    503e:	0f 2e       	mov	r0, r31
    5040:	f2 e8       	ldi	r31, 0x82	; 130
    5042:	ef 2e       	mov	r14, r31
    5044:	f1 2c       	mov	r15, r1
    5046:	f0 2d       	mov	r31, r0
    5048:	0b ed       	ldi	r16, 0xDB	; 219
    504a:	10 e0       	ldi	r17, 0x00	; 0
    504c:	20 e8       	ldi	r18, 0x80	; 128
    504e:	30 e0       	ldi	r19, 0x00	; 0
    5050:	40 ed       	ldi	r20, 0xD0	; 208
    5052:	50 e0       	ldi	r21, 0x00	; 0
    5054:	65 e7       	ldi	r22, 0x75	; 117
    5056:	70 e0       	ldi	r23, 0x00	; 0
    5058:	85 ec       	ldi	r24, 0xC5	; 197
    505a:	90 e0       	ldi	r25, 0x00	; 0
    505c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    5060:	5a c0       	rjmp	.+180    	; 0x5116 <DrawWindDirect+0x2fe>
    5062:	64 e5       	ldi	r22, 0x54	; 84
    5064:	72 e0       	ldi	r23, 0x02	; 2
    5066:	87 e7       	ldi	r24, 0x77	; 119
    5068:	93 e0       	ldi	r25, 0x03	; 3
    506a:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    506e:	89 2b       	or	r24, r25
    5070:	49 f5       	brne	.+82     	; 0x50c4 <DrawWindDirect+0x2ac>
    5072:	0f 2e       	mov	r0, r31
    5074:	f0 ee       	ldi	r31, 0xE0	; 224
    5076:	cf 2e       	mov	r12, r31
    5078:	ff e1       	ldi	r31, 0x1F	; 31
    507a:	df 2e       	mov	r13, r31
    507c:	f0 2d       	mov	r31, r0
    507e:	0f 2e       	mov	r0, r31
    5080:	fe eb       	ldi	r31, 0xBE	; 190
    5082:	ef 2e       	mov	r14, r31
    5084:	f1 2c       	mov	r15, r1
    5086:	f0 2d       	mov	r31, r0
    5088:	0e e0       	ldi	r16, 0x0E	; 14
    508a:	11 e0       	ldi	r17, 0x01	; 1
    508c:	2c eb       	ldi	r18, 0xBC	; 188
    508e:	30 e0       	ldi	r19, 0x00	; 0
    5090:	43 e0       	ldi	r20, 0x03	; 3
    5092:	51 e0       	ldi	r21, 0x01	; 1
    5094:	69 ec       	ldi	r22, 0xC9	; 201
    5096:	70 e0       	ldi	r23, 0x00	; 0
    5098:	89 e1       	ldi	r24, 0x19	; 25
    509a:	91 e0       	ldi	r25, 0x01	; 1
    509c:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    50a0:	0f 2e       	mov	r0, r31
    50a2:	f3 eb       	ldi	r31, 0xB3	; 179
    50a4:	ef 2e       	mov	r14, r31
    50a6:	f1 2c       	mov	r15, r1
    50a8:	f0 2d       	mov	r31, r0
    50aa:	0c e0       	ldi	r16, 0x0C	; 12
    50ac:	11 e0       	ldi	r17, 0x01	; 1
    50ae:	2e eb       	ldi	r18, 0xBE	; 190
    50b0:	30 e0       	ldi	r19, 0x00	; 0
    50b2:	4e e0       	ldi	r20, 0x0E	; 14
    50b4:	51 e0       	ldi	r21, 0x01	; 1
    50b6:	69 ec       	ldi	r22, 0xC9	; 201
    50b8:	70 e0       	ldi	r23, 0x00	; 0
    50ba:	89 e1       	ldi	r24, 0x19	; 25
    50bc:	91 e0       	ldi	r25, 0x01	; 1
    50be:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    50c2:	29 c0       	rjmp	.+82     	; 0x5116 <DrawWindDirect+0x2fe>
    50c4:	68 e5       	ldi	r22, 0x58	; 88
    50c6:	72 e0       	ldi	r23, 0x02	; 2
    50c8:	87 e7       	ldi	r24, 0x77	; 119
    50ca:	93 e0       	ldi	r25, 0x03	; 3
    50cc:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <strcmp>
    50d0:	89 2b       	or	r24, r25
    50d2:	09 f5       	brne	.+66     	; 0x5116 <DrawWindDirect+0x2fe>
    50d4:	0f 2e       	mov	r0, r31
    50d6:	f0 ee       	ldi	r31, 0xE0	; 224
    50d8:	cf 2e       	mov	r12, r31
    50da:	ff e1       	ldi	r31, 0x1F	; 31
    50dc:	df 2e       	mov	r13, r31
    50de:	f0 2d       	mov	r31, r0
    50e0:	0f 2e       	mov	r0, r31
    50e2:	fe eb       	ldi	r31, 0xBE	; 190
    50e4:	ef 2e       	mov	r14, r31
    50e6:	f1 2c       	mov	r15, r1
    50e8:	f0 2d       	mov	r31, r0
    50ea:	00 ed       	ldi	r16, 0xD0	; 208
    50ec:	10 e0       	ldi	r17, 0x00	; 0
    50ee:	2c eb       	ldi	r18, 0xBC	; 188
    50f0:	30 e0       	ldi	r19, 0x00	; 0
    50f2:	4b ed       	ldi	r20, 0xDB	; 219
    50f4:	50 e0       	ldi	r21, 0x00	; 0
    50f6:	69 ec       	ldi	r22, 0xC9	; 201
    50f8:	70 e0       	ldi	r23, 0x00	; 0
    50fa:	85 ec       	ldi	r24, 0xC5	; 197
    50fc:	90 e0       	ldi	r25, 0x00	; 0
    50fe:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    5102:	23 eb       	ldi	r18, 0xB3	; 179
    5104:	30 e0       	ldi	r19, 0x00	; 0
    5106:	42 ed       	ldi	r20, 0xD2	; 210
    5108:	50 e0       	ldi	r21, 0x00	; 0
    510a:	69 ec       	ldi	r22, 0xC9	; 201
    510c:	70 e0       	ldi	r23, 0x00	; 0
    510e:	85 ec       	ldi	r24, 0xC5	; 197
    5110:	90 e0       	ldi	r25, 0x00	; 0
    5112:	0e 94 c8 07 	call	0xf90	; 0xf90 <ILI9486_fillTriangle>
    5116:	1f 91       	pop	r17
    5118:	0f 91       	pop	r16
    511a:	ff 90       	pop	r15
    511c:	ef 90       	pop	r14
    511e:	df 90       	pop	r13
    5120:	cf 90       	pop	r12
    5122:	08 95       	ret

00005124 <Print_Home_Page_Out>:
    5124:	0f 93       	push	r16
    5126:	1f 93       	push	r17
    5128:	cf 93       	push	r28
    512a:	df 93       	push	r29
    512c:	cd b7       	in	r28, 0x3d	; 61
    512e:	de b7       	in	r29, 0x3e	; 62
    5130:	2a 97       	sbiw	r28, 0x0a	; 10
    5132:	0f b6       	in	r0, 0x3f	; 63
    5134:	f8 94       	cli
    5136:	de bf       	out	0x3e, r29	; 62
    5138:	0f be       	out	0x3f, r0	; 63
    513a:	cd bf       	out	0x3d, r28	; 61
    513c:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <DrawWindDirect>
    5140:	60 e0       	ldi	r22, 0x00	; 0
    5142:	70 e0       	ldi	r23, 0x00	; 0
    5144:	80 ee       	ldi	r24, 0xE0	; 224
    5146:	9f ef       	ldi	r25, 0xFF	; 255
    5148:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    514c:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <street_temp_sign>
    5150:	88 23       	and	r24, r24
    5152:	09 f4       	brne	.+2      	; 0x5156 <Print_Home_Page_Out+0x32>
    5154:	80 c0       	rjmp	.+256    	; 0x5256 <Print_Home_Page_Out+0x132>
    5156:	6a ef       	ldi	r22, 0xFA	; 250
    5158:	70 e0       	ldi	r23, 0x00	; 0
    515a:	8b e8       	ldi	r24, 0x8B	; 139
    515c:	91 e0       	ldi	r25, 0x01	; 1
    515e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5162:	60 e0       	ldi	r22, 0x00	; 0
    5164:	89 e0       	ldi	r24, 0x09	; 9
    5166:	91 e0       	ldi	r25, 0x01	; 1
    5168:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    516c:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <street_temp_integer>
    5170:	8a 30       	cpi	r24, 0x0A	; 10
    5172:	48 f5       	brcc	.+82     	; 0x51c6 <Print_Home_Page_Out+0xa2>
    5174:	1f 92       	push	r1
    5176:	8f 93       	push	r24
    5178:	8c e5       	ldi	r24, 0x5C	; 92
    517a:	92 e0       	ldi	r25, 0x02	; 2
    517c:	9f 93       	push	r25
    517e:	8f 93       	push	r24
    5180:	8e 01       	movw	r16, r28
    5182:	0f 5f       	subi	r16, 0xFF	; 255
    5184:	1f 4f       	sbci	r17, 0xFF	; 255
    5186:	1f 93       	push	r17
    5188:	0f 93       	push	r16
    518a:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    518e:	6a ef       	ldi	r22, 0xFA	; 250
    5190:	70 e0       	ldi	r23, 0x00	; 0
    5192:	8e e4       	ldi	r24, 0x4E	; 78
    5194:	91 e0       	ldi	r25, 0x01	; 1
    5196:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    519a:	60 e0       	ldi	r22, 0x00	; 0
    519c:	c8 01       	movw	r24, r16
    519e:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    51a2:	6f ef       	ldi	r22, 0xFF	; 255
    51a4:	70 e0       	ldi	r23, 0x00	; 0
    51a6:	8a e5       	ldi	r24, 0x5A	; 90
    51a8:	91 e0       	ldi	r25, 0x01	; 1
    51aa:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    51ae:	60 e0       	ldi	r22, 0x00	; 0
    51b0:	85 e9       	ldi	r24, 0x95	; 149
    51b2:	91 e0       	ldi	r25, 0x01	; 1
    51b4:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    51b8:	0f 90       	pop	r0
    51ba:	0f 90       	pop	r0
    51bc:	0f 90       	pop	r0
    51be:	0f 90       	pop	r0
    51c0:	0f 90       	pop	r0
    51c2:	0f 90       	pop	r0
    51c4:	28 c0       	rjmp	.+80     	; 0x5216 <Print_Home_Page_Out+0xf2>
    51c6:	1f 92       	push	r1
    51c8:	8f 93       	push	r24
    51ca:	8d e5       	ldi	r24, 0x5D	; 93
    51cc:	92 e0       	ldi	r25, 0x02	; 2
    51ce:	9f 93       	push	r25
    51d0:	8f 93       	push	r24
    51d2:	8e 01       	movw	r16, r28
    51d4:	0f 5f       	subi	r16, 0xFF	; 255
    51d6:	1f 4f       	sbci	r17, 0xFF	; 255
    51d8:	1f 93       	push	r17
    51da:	0f 93       	push	r16
    51dc:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    51e0:	6f ef       	ldi	r22, 0xFF	; 255
    51e2:	70 e0       	ldi	r23, 0x00	; 0
    51e4:	8d e3       	ldi	r24, 0x3D	; 61
    51e6:	91 e0       	ldi	r25, 0x01	; 1
    51e8:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    51ec:	60 e0       	ldi	r22, 0x00	; 0
    51ee:	85 e9       	ldi	r24, 0x95	; 149
    51f0:	91 e0       	ldi	r25, 0x01	; 1
    51f2:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    51f6:	6a ef       	ldi	r22, 0xFA	; 250
    51f8:	70 e0       	ldi	r23, 0x00	; 0
    51fa:	8e e4       	ldi	r24, 0x4E	; 78
    51fc:	91 e0       	ldi	r25, 0x01	; 1
    51fe:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5202:	60 e0       	ldi	r22, 0x00	; 0
    5204:	c8 01       	movw	r24, r16
    5206:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    520a:	0f 90       	pop	r0
    520c:	0f 90       	pop	r0
    520e:	0f 90       	pop	r0
    5210:	0f 90       	pop	r0
    5212:	0f 90       	pop	r0
    5214:	0f 90       	pop	r0
    5216:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <street_temp_fraction>
    521a:	1f 92       	push	r1
    521c:	8f 93       	push	r24
    521e:	8d e5       	ldi	r24, 0x5D	; 93
    5220:	92 e0       	ldi	r25, 0x02	; 2
    5222:	9f 93       	push	r25
    5224:	8f 93       	push	r24
    5226:	8e 01       	movw	r16, r28
    5228:	0f 5f       	subi	r16, 0xFF	; 255
    522a:	1f 4f       	sbci	r17, 0xFF	; 255
    522c:	1f 93       	push	r17
    522e:	0f 93       	push	r16
    5230:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5234:	6a ef       	ldi	r22, 0xFA	; 250
    5236:	70 e0       	ldi	r23, 0x00	; 0
    5238:	88 ea       	ldi	r24, 0xA8	; 168
    523a:	91 e0       	ldi	r25, 0x01	; 1
    523c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5240:	60 e0       	ldi	r22, 0x00	; 0
    5242:	c8 01       	movw	r24, r16
    5244:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5248:	0f 90       	pop	r0
    524a:	0f 90       	pop	r0
    524c:	0f 90       	pop	r0
    524e:	0f 90       	pop	r0
    5250:	0f 90       	pop	r0
    5252:	0f 90       	pop	r0
    5254:	69 c0       	rjmp	.+210    	; 0x5328 <Print_Home_Page_Out+0x204>
    5256:	6a ef       	ldi	r22, 0xFA	; 250
    5258:	70 e0       	ldi	r23, 0x00	; 0
    525a:	8b e8       	ldi	r24, 0x8B	; 139
    525c:	91 e0       	ldi	r25, 0x01	; 1
    525e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5262:	60 e0       	ldi	r22, 0x00	; 0
    5264:	89 e0       	ldi	r24, 0x09	; 9
    5266:	91 e0       	ldi	r25, 0x01	; 1
    5268:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    526c:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <street_temp_integer>
    5270:	8a 30       	cpi	r24, 0x0A	; 10
    5272:	f0 f4       	brcc	.+60     	; 0x52b0 <Print_Home_Page_Out+0x18c>
    5274:	1f 92       	push	r1
    5276:	8f 93       	push	r24
    5278:	8c e5       	ldi	r24, 0x5C	; 92
    527a:	92 e0       	ldi	r25, 0x02	; 2
    527c:	9f 93       	push	r25
    527e:	8f 93       	push	r24
    5280:	8e 01       	movw	r16, r28
    5282:	0f 5f       	subi	r16, 0xFF	; 255
    5284:	1f 4f       	sbci	r17, 0xFF	; 255
    5286:	1f 93       	push	r17
    5288:	0f 93       	push	r16
    528a:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    528e:	6a ef       	ldi	r22, 0xFA	; 250
    5290:	70 e0       	ldi	r23, 0x00	; 0
    5292:	8e e4       	ldi	r24, 0x4E	; 78
    5294:	91 e0       	ldi	r25, 0x01	; 1
    5296:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    529a:	60 e0       	ldi	r22, 0x00	; 0
    529c:	c8 01       	movw	r24, r16
    529e:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    52a2:	0f 90       	pop	r0
    52a4:	0f 90       	pop	r0
    52a6:	0f 90       	pop	r0
    52a8:	0f 90       	pop	r0
    52aa:	0f 90       	pop	r0
    52ac:	0f 90       	pop	r0
    52ae:	1d c0       	rjmp	.+58     	; 0x52ea <Print_Home_Page_Out+0x1c6>
    52b0:	1f 92       	push	r1
    52b2:	8f 93       	push	r24
    52b4:	8d e5       	ldi	r24, 0x5D	; 93
    52b6:	92 e0       	ldi	r25, 0x02	; 2
    52b8:	9f 93       	push	r25
    52ba:	8f 93       	push	r24
    52bc:	8e 01       	movw	r16, r28
    52be:	0f 5f       	subi	r16, 0xFF	; 255
    52c0:	1f 4f       	sbci	r17, 0xFF	; 255
    52c2:	1f 93       	push	r17
    52c4:	0f 93       	push	r16
    52c6:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    52ca:	6a ef       	ldi	r22, 0xFA	; 250
    52cc:	70 e0       	ldi	r23, 0x00	; 0
    52ce:	8e e4       	ldi	r24, 0x4E	; 78
    52d0:	91 e0       	ldi	r25, 0x01	; 1
    52d2:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    52d6:	60 e0       	ldi	r22, 0x00	; 0
    52d8:	c8 01       	movw	r24, r16
    52da:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    52de:	0f 90       	pop	r0
    52e0:	0f 90       	pop	r0
    52e2:	0f 90       	pop	r0
    52e4:	0f 90       	pop	r0
    52e6:	0f 90       	pop	r0
    52e8:	0f 90       	pop	r0
    52ea:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <street_temp_fraction>
    52ee:	1f 92       	push	r1
    52f0:	8f 93       	push	r24
    52f2:	8d e5       	ldi	r24, 0x5D	; 93
    52f4:	92 e0       	ldi	r25, 0x02	; 2
    52f6:	9f 93       	push	r25
    52f8:	8f 93       	push	r24
    52fa:	8e 01       	movw	r16, r28
    52fc:	0f 5f       	subi	r16, 0xFF	; 255
    52fe:	1f 4f       	sbci	r17, 0xFF	; 255
    5300:	1f 93       	push	r17
    5302:	0f 93       	push	r16
    5304:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5308:	6a ef       	ldi	r22, 0xFA	; 250
    530a:	70 e0       	ldi	r23, 0x00	; 0
    530c:	88 ea       	ldi	r24, 0xA8	; 168
    530e:	91 e0       	ldi	r25, 0x01	; 1
    5310:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5314:	60 e0       	ldi	r22, 0x00	; 0
    5316:	c8 01       	movw	r24, r16
    5318:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    531c:	0f 90       	pop	r0
    531e:	0f 90       	pop	r0
    5320:	0f 90       	pop	r0
    5322:	0f 90       	pop	r0
    5324:	0f 90       	pop	r0
    5326:	0f 90       	pop	r0
    5328:	6c e0       	ldi	r22, 0x0C	; 12
    532a:	71 e0       	ldi	r23, 0x01	; 1
    532c:	89 ec       	ldi	r24, 0xC9	; 201
    532e:	91 e0       	ldi	r25, 0x01	; 1
    5330:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5334:	60 e0       	ldi	r22, 0x00	; 0
    5336:	80 e6       	ldi	r24, 0x60	; 96
    5338:	92 e0       	ldi	r25, 0x02	; 2
    533a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    533e:	66 e9       	ldi	r22, 0x96	; 150
    5340:	70 e0       	ldi	r23, 0x00	; 0
    5342:	89 e6       	ldi	r24, 0x69	; 105
    5344:	91 e0       	ldi	r25, 0x01	; 1
    5346:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    534a:	60 e0       	ldi	r22, 0x00	; 0
    534c:	82 e6       	ldi	r24, 0x62	; 98
    534e:	92 e0       	ldi	r25, 0x02	; 2
    5350:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5354:	65 ea       	ldi	r22, 0xA5	; 165
    5356:	70 e0       	ldi	r23, 0x00	; 0
    5358:	8d ea       	ldi	r24, 0xAD	; 173
    535a:	91 e0       	ldi	r25, 0x01	; 1
    535c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5360:	60 e0       	ldi	r22, 0x00	; 0
    5362:	85 e6       	ldi	r24, 0x65	; 101
    5364:	92 e0       	ldi	r25, 0x02	; 2
    5366:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    536a:	60 e0       	ldi	r22, 0x00	; 0
    536c:	70 e0       	ldi	r23, 0x00	; 0
    536e:	8f e9       	ldi	r24, 0x9F	; 159
    5370:	9d e3       	ldi	r25, 0x3D	; 61
    5372:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    5376:	89 e0       	ldi	r24, 0x09	; 9
    5378:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <wind_speed_integer>
    537c:	9c e2       	ldi	r25, 0x2C	; 44
    537e:	90 93 6d 03 	sts	0x036D, r25	; 0x80036d <wind_speed_fraction>
    5382:	1f 92       	push	r1
    5384:	8f 93       	push	r24
    5386:	8c e5       	ldi	r24, 0x5C	; 92
    5388:	92 e0       	ldi	r25, 0x02	; 2
    538a:	9f 93       	push	r25
    538c:	8f 93       	push	r24
    538e:	8e 01       	movw	r16, r28
    5390:	0f 5f       	subi	r16, 0xFF	; 255
    5392:	1f 4f       	sbci	r17, 0xFF	; 255
    5394:	1f 93       	push	r17
    5396:	0f 93       	push	r16
    5398:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    539c:	68 e1       	ldi	r22, 0x18	; 24
    539e:	71 e0       	ldi	r23, 0x01	; 1
    53a0:	8b ea       	ldi	r24, 0xAB	; 171
    53a2:	90 e0       	ldi	r25, 0x00	; 0
    53a4:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    53a8:	60 e0       	ldi	r22, 0x00	; 0
    53aa:	c8 01       	movw	r24, r16
    53ac:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    53b0:	68 e1       	ldi	r22, 0x18	; 24
    53b2:	71 e0       	ldi	r23, 0x01	; 1
    53b4:	8d ec       	ldi	r24, 0xCD	; 205
    53b6:	90 e0       	ldi	r25, 0x00	; 0
    53b8:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    53bc:	60 e0       	ldi	r22, 0x00	; 0
    53be:	89 e0       	ldi	r24, 0x09	; 9
    53c0:	91 e0       	ldi	r25, 0x01	; 1
    53c2:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    53c6:	68 e1       	ldi	r22, 0x18	; 24
    53c8:	71 e0       	ldi	r23, 0x01	; 1
    53ca:	8e ed       	ldi	r24, 0xDE	; 222
    53cc:	90 e0       	ldi	r25, 0x00	; 0
    53ce:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    53d2:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <wind_speed_fraction>
    53d6:	1f 92       	push	r1
    53d8:	8f 93       	push	r24
    53da:	8d e5       	ldi	r24, 0x5D	; 93
    53dc:	92 e0       	ldi	r25, 0x02	; 2
    53de:	9f 93       	push	r25
    53e0:	8f 93       	push	r24
    53e2:	1f 93       	push	r17
    53e4:	0f 93       	push	r16
    53e6:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    53ea:	60 e0       	ldi	r22, 0x00	; 0
    53ec:	c8 01       	movw	r24, r16
    53ee:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    53f2:	68 e1       	ldi	r22, 0x18	; 24
    53f4:	71 e0       	ldi	r23, 0x01	; 1
    53f6:	82 e0       	ldi	r24, 0x02	; 2
    53f8:	91 e0       	ldi	r25, 0x01	; 1
    53fa:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    53fe:	60 e0       	ldi	r22, 0x00	; 0
    5400:	87 e6       	ldi	r24, 0x67	; 103
    5402:	92 e0       	ldi	r25, 0x02	; 2
    5404:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5408:	68 e1       	ldi	r22, 0x18	; 24
    540a:	71 e0       	ldi	r23, 0x01	; 1
    540c:	84 e2       	ldi	r24, 0x24	; 36
    540e:	91 e0       	ldi	r25, 0x01	; 1
    5410:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5414:	60 e0       	ldi	r22, 0x00	; 0
    5416:	80 ea       	ldi	r24, 0xA0	; 160
    5418:	90 e0       	ldi	r25, 0x00	; 0
    541a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    541e:	0f b6       	in	r0, 0x3f	; 63
    5420:	f8 94       	cli
    5422:	de bf       	out	0x3e, r29	; 62
    5424:	0f be       	out	0x3f, r0	; 63
    5426:	cd bf       	out	0x3d, r28	; 61
    5428:	2a 96       	adiw	r28, 0x0a	; 10
    542a:	0f b6       	in	r0, 0x3f	; 63
    542c:	f8 94       	cli
    542e:	de bf       	out	0x3e, r29	; 62
    5430:	0f be       	out	0x3f, r0	; 63
    5432:	cd bf       	out	0x3d, r28	; 61
    5434:	df 91       	pop	r29
    5436:	cf 91       	pop	r28
    5438:	1f 91       	pop	r17
    543a:	0f 91       	pop	r16
    543c:	08 95       	ret

0000543e <Convert_to_string_Clock>:
    543e:	e6 e8       	ldi	r30, 0x86	; 134
    5440:	f3 e0       	ldi	r31, 0x03	; 3
    5442:	01 90       	ld	r0, Z+
    5444:	00 20       	and	r0, r0
    5446:	e9 f7       	brne	.-6      	; 0x5442 <Convert_to_string_Clock+0x4>
    5448:	af 01       	movw	r20, r30
    544a:	47 58       	subi	r20, 0x87	; 135
    544c:	53 40       	sbci	r21, 0x03	; 3
    544e:	60 e0       	ldi	r22, 0x00	; 0
    5450:	70 e0       	ldi	r23, 0x00	; 0
    5452:	86 e8       	ldi	r24, 0x86	; 134
    5454:	93 e0       	ldi	r25, 0x03	; 3
    5456:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    545a:	e2 e8       	ldi	r30, 0x82	; 130
    545c:	f3 e0       	ldi	r31, 0x03	; 3
    545e:	01 90       	ld	r0, Z+
    5460:	00 20       	and	r0, r0
    5462:	e9 f7       	brne	.-6      	; 0x545e <Convert_to_string_Clock+0x20>
    5464:	af 01       	movw	r20, r30
    5466:	43 58       	subi	r20, 0x83	; 131
    5468:	53 40       	sbci	r21, 0x03	; 3
    546a:	60 e0       	ldi	r22, 0x00	; 0
    546c:	70 e0       	ldi	r23, 0x00	; 0
    546e:	82 e8       	ldi	r24, 0x82	; 130
    5470:	93 e0       	ldi	r25, 0x03	; 3
    5472:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    5476:	ee e7       	ldi	r30, 0x7E	; 126
    5478:	f3 e0       	ldi	r31, 0x03	; 3
    547a:	01 90       	ld	r0, Z+
    547c:	00 20       	and	r0, r0
    547e:	e9 f7       	brne	.-6      	; 0x547a <Convert_to_string_Clock+0x3c>
    5480:	31 97       	sbiw	r30, 0x01	; 1
    5482:	af 01       	movw	r20, r30
    5484:	4e 57       	subi	r20, 0x7E	; 126
    5486:	53 40       	sbci	r21, 0x03	; 3
    5488:	60 e0       	ldi	r22, 0x00	; 0
    548a:	70 e0       	ldi	r23, 0x00	; 0
    548c:	8e e7       	ldi	r24, 0x7E	; 126
    548e:	93 e0       	ldi	r25, 0x03	; 3
    5490:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    5494:	e4 e9       	ldi	r30, 0x94	; 148
    5496:	f3 e0       	ldi	r31, 0x03	; 3
    5498:	01 90       	ld	r0, Z+
    549a:	00 20       	and	r0, r0
    549c:	e9 f7       	brne	.-6      	; 0x5498 <Convert_to_string_Clock+0x5a>
    549e:	af 01       	movw	r20, r30
    54a0:	45 59       	subi	r20, 0x95	; 149
    54a2:	53 40       	sbci	r21, 0x03	; 3
    54a4:	60 e0       	ldi	r22, 0x00	; 0
    54a6:	70 e0       	ldi	r23, 0x00	; 0
    54a8:	84 e9       	ldi	r24, 0x94	; 148
    54aa:	93 e0       	ldi	r25, 0x03	; 3
    54ac:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    54b0:	ec e9       	ldi	r30, 0x9C	; 156
    54b2:	f3 e0       	ldi	r31, 0x03	; 3
    54b4:	01 90       	ld	r0, Z+
    54b6:	00 20       	and	r0, r0
    54b8:	e9 f7       	brne	.-6      	; 0x54b4 <Convert_to_string_Clock+0x76>
    54ba:	af 01       	movw	r20, r30
    54bc:	4d 59       	subi	r20, 0x9D	; 157
    54be:	53 40       	sbci	r21, 0x03	; 3
    54c0:	60 e0       	ldi	r22, 0x00	; 0
    54c2:	70 e0       	ldi	r23, 0x00	; 0
    54c4:	8c e9       	ldi	r24, 0x9C	; 156
    54c6:	93 e0       	ldi	r25, 0x03	; 3
    54c8:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    54cc:	ea e8       	ldi	r30, 0x8A	; 138
    54ce:	f3 e0       	ldi	r31, 0x03	; 3
    54d0:	01 90       	ld	r0, Z+
    54d2:	00 20       	and	r0, r0
    54d4:	e9 f7       	brne	.-6      	; 0x54d0 <Convert_to_string_Clock+0x92>
    54d6:	af 01       	movw	r20, r30
    54d8:	4b 58       	subi	r20, 0x8B	; 139
    54da:	53 40       	sbci	r21, 0x03	; 3
    54dc:	60 e0       	ldi	r22, 0x00	; 0
    54de:	70 e0       	ldi	r23, 0x00	; 0
    54e0:	8a e8       	ldi	r24, 0x8A	; 138
    54e2:	93 e0       	ldi	r25, 0x03	; 3
    54e4:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    54e8:	e8 e9       	ldi	r30, 0x98	; 152
    54ea:	f3 e0       	ldi	r31, 0x03	; 3
    54ec:	01 90       	ld	r0, Z+
    54ee:	00 20       	and	r0, r0
    54f0:	e9 f7       	brne	.-6      	; 0x54ec <Convert_to_string_Clock+0xae>
    54f2:	af 01       	movw	r20, r30
    54f4:	49 59       	subi	r20, 0x99	; 153
    54f6:	53 40       	sbci	r21, 0x03	; 3
    54f8:	60 e0       	ldi	r22, 0x00	; 0
    54fa:	70 e0       	ldi	r23, 0x00	; 0
    54fc:	88 e9       	ldi	r24, 0x98	; 152
    54fe:	93 e0       	ldi	r25, 0x03	; 3
    5500:	0e 94 92 2e 	call	0x5d24	; 0x5d24 <memset>
    5504:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <sec>
    5508:	8a 30       	cpi	r24, 0x0A	; 10
    550a:	98 f4       	brcc	.+38     	; 0x5532 <Convert_to_string_Clock+0xf4>
    550c:	1f 92       	push	r1
    550e:	8f 93       	push	r24
    5510:	8a e6       	ldi	r24, 0x6A	; 106
    5512:	92 e0       	ldi	r25, 0x02	; 2
    5514:	9f 93       	push	r25
    5516:	8f 93       	push	r24
    5518:	86 e8       	ldi	r24, 0x86	; 134
    551a:	93 e0       	ldi	r25, 0x03	; 3
    551c:	9f 93       	push	r25
    551e:	8f 93       	push	r24
    5520:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5524:	0f 90       	pop	r0
    5526:	0f 90       	pop	r0
    5528:	0f 90       	pop	r0
    552a:	0f 90       	pop	r0
    552c:	0f 90       	pop	r0
    552e:	0f 90       	pop	r0
    5530:	12 c0       	rjmp	.+36     	; 0x5556 <Convert_to_string_Clock+0x118>
    5532:	1f 92       	push	r1
    5534:	8f 93       	push	r24
    5536:	8d e5       	ldi	r24, 0x5D	; 93
    5538:	92 e0       	ldi	r25, 0x02	; 2
    553a:	9f 93       	push	r25
    553c:	8f 93       	push	r24
    553e:	86 e8       	ldi	r24, 0x86	; 134
    5540:	93 e0       	ldi	r25, 0x03	; 3
    5542:	9f 93       	push	r25
    5544:	8f 93       	push	r24
    5546:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    554a:	0f 90       	pop	r0
    554c:	0f 90       	pop	r0
    554e:	0f 90       	pop	r0
    5550:	0f 90       	pop	r0
    5552:	0f 90       	pop	r0
    5554:	0f 90       	pop	r0
    5556:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <min>
    555a:	8a 30       	cpi	r24, 0x0A	; 10
    555c:	98 f4       	brcc	.+38     	; 0x5584 <Convert_to_string_Clock+0x146>
    555e:	1f 92       	push	r1
    5560:	8f 93       	push	r24
    5562:	8a e6       	ldi	r24, 0x6A	; 106
    5564:	92 e0       	ldi	r25, 0x02	; 2
    5566:	9f 93       	push	r25
    5568:	8f 93       	push	r24
    556a:	82 e8       	ldi	r24, 0x82	; 130
    556c:	93 e0       	ldi	r25, 0x03	; 3
    556e:	9f 93       	push	r25
    5570:	8f 93       	push	r24
    5572:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5576:	0f 90       	pop	r0
    5578:	0f 90       	pop	r0
    557a:	0f 90       	pop	r0
    557c:	0f 90       	pop	r0
    557e:	0f 90       	pop	r0
    5580:	0f 90       	pop	r0
    5582:	12 c0       	rjmp	.+36     	; 0x55a8 <Convert_to_string_Clock+0x16a>
    5584:	1f 92       	push	r1
    5586:	8f 93       	push	r24
    5588:	8d e5       	ldi	r24, 0x5D	; 93
    558a:	92 e0       	ldi	r25, 0x02	; 2
    558c:	9f 93       	push	r25
    558e:	8f 93       	push	r24
    5590:	82 e8       	ldi	r24, 0x82	; 130
    5592:	93 e0       	ldi	r25, 0x03	; 3
    5594:	9f 93       	push	r25
    5596:	8f 93       	push	r24
    5598:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    559c:	0f 90       	pop	r0
    559e:	0f 90       	pop	r0
    55a0:	0f 90       	pop	r0
    55a2:	0f 90       	pop	r0
    55a4:	0f 90       	pop	r0
    55a6:	0f 90       	pop	r0
    55a8:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <hour>
    55ac:	8a 30       	cpi	r24, 0x0A	; 10
    55ae:	98 f4       	brcc	.+38     	; 0x55d6 <Convert_to_string_Clock+0x198>
    55b0:	1f 92       	push	r1
    55b2:	8f 93       	push	r24
    55b4:	8a e6       	ldi	r24, 0x6A	; 106
    55b6:	92 e0       	ldi	r25, 0x02	; 2
    55b8:	9f 93       	push	r25
    55ba:	8f 93       	push	r24
    55bc:	8e e7       	ldi	r24, 0x7E	; 126
    55be:	93 e0       	ldi	r25, 0x03	; 3
    55c0:	9f 93       	push	r25
    55c2:	8f 93       	push	r24
    55c4:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    55c8:	0f 90       	pop	r0
    55ca:	0f 90       	pop	r0
    55cc:	0f 90       	pop	r0
    55ce:	0f 90       	pop	r0
    55d0:	0f 90       	pop	r0
    55d2:	0f 90       	pop	r0
    55d4:	12 c0       	rjmp	.+36     	; 0x55fa <Convert_to_string_Clock+0x1bc>
    55d6:	1f 92       	push	r1
    55d8:	8f 93       	push	r24
    55da:	8d e5       	ldi	r24, 0x5D	; 93
    55dc:	92 e0       	ldi	r25, 0x02	; 2
    55de:	9f 93       	push	r25
    55e0:	8f 93       	push	r24
    55e2:	8e e7       	ldi	r24, 0x7E	; 126
    55e4:	93 e0       	ldi	r25, 0x03	; 3
    55e6:	9f 93       	push	r25
    55e8:	8f 93       	push	r24
    55ea:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    55ee:	0f 90       	pop	r0
    55f0:	0f 90       	pop	r0
    55f2:	0f 90       	pop	r0
    55f4:	0f 90       	pop	r0
    55f6:	0f 90       	pop	r0
    55f8:	0f 90       	pop	r0
    55fa:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <date>
    55fe:	8a 30       	cpi	r24, 0x0A	; 10
    5600:	98 f4       	brcc	.+38     	; 0x5628 <Convert_to_string_Clock+0x1ea>
    5602:	1f 92       	push	r1
    5604:	8f 93       	push	r24
    5606:	8a e6       	ldi	r24, 0x6A	; 106
    5608:	92 e0       	ldi	r25, 0x02	; 2
    560a:	9f 93       	push	r25
    560c:	8f 93       	push	r24
    560e:	84 e9       	ldi	r24, 0x94	; 148
    5610:	93 e0       	ldi	r25, 0x03	; 3
    5612:	9f 93       	push	r25
    5614:	8f 93       	push	r24
    5616:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    561a:	0f 90       	pop	r0
    561c:	0f 90       	pop	r0
    561e:	0f 90       	pop	r0
    5620:	0f 90       	pop	r0
    5622:	0f 90       	pop	r0
    5624:	0f 90       	pop	r0
    5626:	12 c0       	rjmp	.+36     	; 0x564c <Convert_to_string_Clock+0x20e>
    5628:	1f 92       	push	r1
    562a:	8f 93       	push	r24
    562c:	8d e5       	ldi	r24, 0x5D	; 93
    562e:	92 e0       	ldi	r25, 0x02	; 2
    5630:	9f 93       	push	r25
    5632:	8f 93       	push	r24
    5634:	84 e9       	ldi	r24, 0x94	; 148
    5636:	93 e0       	ldi	r25, 0x03	; 3
    5638:	9f 93       	push	r25
    563a:	8f 93       	push	r24
    563c:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5640:	0f 90       	pop	r0
    5642:	0f 90       	pop	r0
    5644:	0f 90       	pop	r0
    5646:	0f 90       	pop	r0
    5648:	0f 90       	pop	r0
    564a:	0f 90       	pop	r0
    564c:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <year>
    5650:	8a 30       	cpi	r24, 0x0A	; 10
    5652:	98 f4       	brcc	.+38     	; 0x567a <Convert_to_string_Clock+0x23c>
    5654:	1f 92       	push	r1
    5656:	8f 93       	push	r24
    5658:	8a e6       	ldi	r24, 0x6A	; 106
    565a:	92 e0       	ldi	r25, 0x02	; 2
    565c:	9f 93       	push	r25
    565e:	8f 93       	push	r24
    5660:	8c e9       	ldi	r24, 0x9C	; 156
    5662:	93 e0       	ldi	r25, 0x03	; 3
    5664:	9f 93       	push	r25
    5666:	8f 93       	push	r24
    5668:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    566c:	0f 90       	pop	r0
    566e:	0f 90       	pop	r0
    5670:	0f 90       	pop	r0
    5672:	0f 90       	pop	r0
    5674:	0f 90       	pop	r0
    5676:	0f 90       	pop	r0
    5678:	12 c0       	rjmp	.+36     	; 0x569e <Convert_to_string_Clock+0x260>
    567a:	1f 92       	push	r1
    567c:	8f 93       	push	r24
    567e:	8d e5       	ldi	r24, 0x5D	; 93
    5680:	92 e0       	ldi	r25, 0x02	; 2
    5682:	9f 93       	push	r25
    5684:	8f 93       	push	r24
    5686:	8c e9       	ldi	r24, 0x9C	; 156
    5688:	93 e0       	ldi	r25, 0x03	; 3
    568a:	9f 93       	push	r25
    568c:	8f 93       	push	r24
    568e:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5692:	0f 90       	pop	r0
    5694:	0f 90       	pop	r0
    5696:	0f 90       	pop	r0
    5698:	0f 90       	pop	r0
    569a:	0f 90       	pop	r0
    569c:	0f 90       	pop	r0
    569e:	e0 91 5f 03 	lds	r30, 0x035F	; 0x80035f <day>
    56a2:	8e 2f       	mov	r24, r30
    56a4:	90 e0       	ldi	r25, 0x00	; 0
    56a6:	fc 01       	movw	r30, r24
    56a8:	31 97       	sbiw	r30, 0x01	; 1
    56aa:	e7 30       	cpi	r30, 0x07	; 7
    56ac:	f1 05       	cpc	r31, r1
    56ae:	08 f0       	brcs	.+2      	; 0x56b2 <Convert_to_string_Clock+0x274>
    56b0:	49 c0       	rjmp	.+146    	; 0x5744 <Convert_to_string_Clock+0x306>
    56b2:	e6 5d       	subi	r30, 0xD6	; 214
    56b4:	ff 4f       	sbci	r31, 0xFF	; 255
    56b6:	0c 94 6a 2e 	jmp	0x5cd4	; 0x5cd4 <__tablejump2__>
    56ba:	8a e0       	ldi	r24, 0x0A	; 10
    56bc:	ee e6       	ldi	r30, 0x6E	; 110
    56be:	f2 e0       	ldi	r31, 0x02	; 2
    56c0:	aa e8       	ldi	r26, 0x8A	; 138
    56c2:	b3 e0       	ldi	r27, 0x03	; 3
    56c4:	01 90       	ld	r0, Z+
    56c6:	0d 92       	st	X+, r0
    56c8:	8a 95       	dec	r24
    56ca:	e1 f7       	brne	.-8      	; 0x56c4 <Convert_to_string_Clock+0x286>
    56cc:	3b c0       	rjmp	.+118    	; 0x5744 <Convert_to_string_Clock+0x306>
    56ce:	8a e0       	ldi	r24, 0x0A	; 10
    56d0:	e8 e7       	ldi	r30, 0x78	; 120
    56d2:	f2 e0       	ldi	r31, 0x02	; 2
    56d4:	aa e8       	ldi	r26, 0x8A	; 138
    56d6:	b3 e0       	ldi	r27, 0x03	; 3
    56d8:	01 90       	ld	r0, Z+
    56da:	0d 92       	st	X+, r0
    56dc:	8a 95       	dec	r24
    56de:	e1 f7       	brne	.-8      	; 0x56d8 <Convert_to_string_Clock+0x29a>
    56e0:	31 c0       	rjmp	.+98     	; 0x5744 <Convert_to_string_Clock+0x306>
    56e2:	8a e0       	ldi	r24, 0x0A	; 10
    56e4:	e2 e8       	ldi	r30, 0x82	; 130
    56e6:	f2 e0       	ldi	r31, 0x02	; 2
    56e8:	aa e8       	ldi	r26, 0x8A	; 138
    56ea:	b3 e0       	ldi	r27, 0x03	; 3
    56ec:	01 90       	ld	r0, Z+
    56ee:	0d 92       	st	X+, r0
    56f0:	8a 95       	dec	r24
    56f2:	e1 f7       	brne	.-8      	; 0x56ec <Convert_to_string_Clock+0x2ae>
    56f4:	27 c0       	rjmp	.+78     	; 0x5744 <Convert_to_string_Clock+0x306>
    56f6:	8a e0       	ldi	r24, 0x0A	; 10
    56f8:	ec e8       	ldi	r30, 0x8C	; 140
    56fa:	f2 e0       	ldi	r31, 0x02	; 2
    56fc:	aa e8       	ldi	r26, 0x8A	; 138
    56fe:	b3 e0       	ldi	r27, 0x03	; 3
    5700:	01 90       	ld	r0, Z+
    5702:	0d 92       	st	X+, r0
    5704:	8a 95       	dec	r24
    5706:	e1 f7       	brne	.-8      	; 0x5700 <Convert_to_string_Clock+0x2c2>
    5708:	1d c0       	rjmp	.+58     	; 0x5744 <Convert_to_string_Clock+0x306>
    570a:	8a e0       	ldi	r24, 0x0A	; 10
    570c:	e6 e9       	ldi	r30, 0x96	; 150
    570e:	f2 e0       	ldi	r31, 0x02	; 2
    5710:	aa e8       	ldi	r26, 0x8A	; 138
    5712:	b3 e0       	ldi	r27, 0x03	; 3
    5714:	01 90       	ld	r0, Z+
    5716:	0d 92       	st	X+, r0
    5718:	8a 95       	dec	r24
    571a:	e1 f7       	brne	.-8      	; 0x5714 <Convert_to_string_Clock+0x2d6>
    571c:	13 c0       	rjmp	.+38     	; 0x5744 <Convert_to_string_Clock+0x306>
    571e:	8a e0       	ldi	r24, 0x0A	; 10
    5720:	e0 ea       	ldi	r30, 0xA0	; 160
    5722:	f2 e0       	ldi	r31, 0x02	; 2
    5724:	aa e8       	ldi	r26, 0x8A	; 138
    5726:	b3 e0       	ldi	r27, 0x03	; 3
    5728:	01 90       	ld	r0, Z+
    572a:	0d 92       	st	X+, r0
    572c:	8a 95       	dec	r24
    572e:	e1 f7       	brne	.-8      	; 0x5728 <Convert_to_string_Clock+0x2ea>
    5730:	09 c0       	rjmp	.+18     	; 0x5744 <Convert_to_string_Clock+0x306>
    5732:	8a e0       	ldi	r24, 0x0A	; 10
    5734:	ea ea       	ldi	r30, 0xAA	; 170
    5736:	f2 e0       	ldi	r31, 0x02	; 2
    5738:	aa e8       	ldi	r26, 0x8A	; 138
    573a:	b3 e0       	ldi	r27, 0x03	; 3
    573c:	01 90       	ld	r0, Z+
    573e:	0d 92       	st	X+, r0
    5740:	8a 95       	dec	r24
    5742:	e1 f7       	brne	.-8      	; 0x573c <Convert_to_string_Clock+0x2fe>
    5744:	e0 91 57 03 	lds	r30, 0x0357	; 0x800357 <month>
    5748:	8e 2f       	mov	r24, r30
    574a:	90 e0       	ldi	r25, 0x00	; 0
    574c:	fc 01       	movw	r30, r24
    574e:	31 97       	sbiw	r30, 0x01	; 1
    5750:	ec 30       	cpi	r30, 0x0C	; 12
    5752:	f1 05       	cpc	r31, r1
    5754:	08 f0       	brcs	.+2      	; 0x5758 <Convert_to_string_Clock+0x31a>
    5756:	63 c0       	rjmp	.+198    	; 0x581e <Convert_to_string_Clock+0x3e0>
    5758:	ef 5c       	subi	r30, 0xCF	; 207
    575a:	ff 4f       	sbci	r31, 0xFF	; 255
    575c:	0c 94 6a 2e 	jmp	0x5cd4	; 0x5cd4 <__tablejump2__>
    5760:	e8 e9       	ldi	r30, 0x98	; 152
    5762:	f3 e0       	ldi	r31, 0x03	; 3
    5764:	80 e3       	ldi	r24, 0x30	; 48
    5766:	91 e3       	ldi	r25, 0x31	; 49
    5768:	91 83       	std	Z+1, r25	; 0x01
    576a:	80 83       	st	Z, r24
    576c:	12 82       	std	Z+2, r1	; 0x02
    576e:	08 95       	ret
    5770:	e8 e9       	ldi	r30, 0x98	; 152
    5772:	f3 e0       	ldi	r31, 0x03	; 3
    5774:	80 e3       	ldi	r24, 0x30	; 48
    5776:	92 e3       	ldi	r25, 0x32	; 50
    5778:	91 83       	std	Z+1, r25	; 0x01
    577a:	80 83       	st	Z, r24
    577c:	12 82       	std	Z+2, r1	; 0x02
    577e:	08 95       	ret
    5780:	e8 e9       	ldi	r30, 0x98	; 152
    5782:	f3 e0       	ldi	r31, 0x03	; 3
    5784:	80 e3       	ldi	r24, 0x30	; 48
    5786:	93 e3       	ldi	r25, 0x33	; 51
    5788:	91 83       	std	Z+1, r25	; 0x01
    578a:	80 83       	st	Z, r24
    578c:	12 82       	std	Z+2, r1	; 0x02
    578e:	08 95       	ret
    5790:	e8 e9       	ldi	r30, 0x98	; 152
    5792:	f3 e0       	ldi	r31, 0x03	; 3
    5794:	80 e3       	ldi	r24, 0x30	; 48
    5796:	94 e3       	ldi	r25, 0x34	; 52
    5798:	91 83       	std	Z+1, r25	; 0x01
    579a:	80 83       	st	Z, r24
    579c:	12 82       	std	Z+2, r1	; 0x02
    579e:	08 95       	ret
    57a0:	e8 e9       	ldi	r30, 0x98	; 152
    57a2:	f3 e0       	ldi	r31, 0x03	; 3
    57a4:	80 e3       	ldi	r24, 0x30	; 48
    57a6:	95 e3       	ldi	r25, 0x35	; 53
    57a8:	91 83       	std	Z+1, r25	; 0x01
    57aa:	80 83       	st	Z, r24
    57ac:	12 82       	std	Z+2, r1	; 0x02
    57ae:	08 95       	ret
    57b0:	e8 e9       	ldi	r30, 0x98	; 152
    57b2:	f3 e0       	ldi	r31, 0x03	; 3
    57b4:	80 e3       	ldi	r24, 0x30	; 48
    57b6:	96 e3       	ldi	r25, 0x36	; 54
    57b8:	91 83       	std	Z+1, r25	; 0x01
    57ba:	80 83       	st	Z, r24
    57bc:	12 82       	std	Z+2, r1	; 0x02
    57be:	08 95       	ret
    57c0:	e8 e9       	ldi	r30, 0x98	; 152
    57c2:	f3 e0       	ldi	r31, 0x03	; 3
    57c4:	80 e3       	ldi	r24, 0x30	; 48
    57c6:	97 e3       	ldi	r25, 0x37	; 55
    57c8:	91 83       	std	Z+1, r25	; 0x01
    57ca:	80 83       	st	Z, r24
    57cc:	12 82       	std	Z+2, r1	; 0x02
    57ce:	08 95       	ret
    57d0:	e8 e9       	ldi	r30, 0x98	; 152
    57d2:	f3 e0       	ldi	r31, 0x03	; 3
    57d4:	80 e3       	ldi	r24, 0x30	; 48
    57d6:	98 e3       	ldi	r25, 0x38	; 56
    57d8:	91 83       	std	Z+1, r25	; 0x01
    57da:	80 83       	st	Z, r24
    57dc:	12 82       	std	Z+2, r1	; 0x02
    57de:	08 95       	ret
    57e0:	e8 e9       	ldi	r30, 0x98	; 152
    57e2:	f3 e0       	ldi	r31, 0x03	; 3
    57e4:	80 e3       	ldi	r24, 0x30	; 48
    57e6:	99 e3       	ldi	r25, 0x39	; 57
    57e8:	91 83       	std	Z+1, r25	; 0x01
    57ea:	80 83       	st	Z, r24
    57ec:	12 82       	std	Z+2, r1	; 0x02
    57ee:	08 95       	ret
    57f0:	e8 e9       	ldi	r30, 0x98	; 152
    57f2:	f3 e0       	ldi	r31, 0x03	; 3
    57f4:	81 e3       	ldi	r24, 0x31	; 49
    57f6:	90 e3       	ldi	r25, 0x30	; 48
    57f8:	91 83       	std	Z+1, r25	; 0x01
    57fa:	80 83       	st	Z, r24
    57fc:	12 82       	std	Z+2, r1	; 0x02
    57fe:	08 95       	ret
    5800:	e8 e9       	ldi	r30, 0x98	; 152
    5802:	f3 e0       	ldi	r31, 0x03	; 3
    5804:	81 e3       	ldi	r24, 0x31	; 49
    5806:	91 e3       	ldi	r25, 0x31	; 49
    5808:	91 83       	std	Z+1, r25	; 0x01
    580a:	80 83       	st	Z, r24
    580c:	12 82       	std	Z+2, r1	; 0x02
    580e:	08 95       	ret
    5810:	e8 e9       	ldi	r30, 0x98	; 152
    5812:	f3 e0       	ldi	r31, 0x03	; 3
    5814:	81 e3       	ldi	r24, 0x31	; 49
    5816:	92 e3       	ldi	r25, 0x32	; 50
    5818:	91 83       	std	Z+1, r25	; 0x01
    581a:	80 83       	st	Z, r24
    581c:	12 82       	std	Z+2, r1	; 0x02
    581e:	08 95       	ret

00005820 <Clock>:
    5820:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <I2C_StartCondition>
    5824:	80 ed       	ldi	r24, 0xD0	; 208
    5826:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
    582a:	80 e0       	ldi	r24, 0x00	; 0
    582c:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
    5830:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <I2C_StopCondition>
    5834:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <I2C_StartCondition>
    5838:	81 ed       	ldi	r24, 0xD1	; 209
    583a:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <I2C_SendByte>
    583e:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    5842:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    5846:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <sec>
    584a:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    584e:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    5852:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <min>
    5856:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    585a:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    585e:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <hour>
    5862:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    5866:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    586a:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <day>
    586e:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    5872:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    5876:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <date>
    587a:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <I2C_ReadByte>
    587e:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    5882:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <month>
    5886:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <I2C_ReadLastByte>
    588a:	0e 94 e7 1c 	call	0x39ce	; 0x39ce <RTC_ConvertFromDec>
    588e:	80 93 5d 03 	sts	0x035D, r24	; 0x80035d <year>
    5892:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <I2C_StopCondition>
    5896:	0e 94 1f 2a 	call	0x543e	; 0x543e <Convert_to_string_Clock>
    589a:	08 95       	ret

0000589c <Print_Home_Page_In>:
    589c:	ef 92       	push	r14
    589e:	ff 92       	push	r15
    58a0:	0f 93       	push	r16
    58a2:	1f 93       	push	r17
    58a4:	cf 93       	push	r28
    58a6:	df 93       	push	r29
    58a8:	cd b7       	in	r28, 0x3d	; 61
    58aa:	de b7       	in	r29, 0x3e	; 62
    58ac:	6e 97       	sbiw	r28, 0x1e	; 30
    58ae:	0f b6       	in	r0, 0x3f	; 63
    58b0:	f8 94       	cli
    58b2:	de bf       	out	0x3e, r29	; 62
    58b4:	0f be       	out	0x3f, r0	; 63
    58b6:	cd bf       	out	0x3d, r28	; 61
    58b8:	8a e0       	ldi	r24, 0x0A	; 10
    58ba:	7e 01       	movw	r14, r28
    58bc:	2b e0       	ldi	r18, 0x0B	; 11
    58be:	e2 0e       	add	r14, r18
    58c0:	f1 1c       	adc	r15, r1
    58c2:	f7 01       	movw	r30, r14
    58c4:	28 2f       	mov	r18, r24
    58c6:	11 92       	st	Z+, r1
    58c8:	2a 95       	dec	r18
    58ca:	e9 f7       	brne	.-6      	; 0x58c6 <Print_Home_Page_In+0x2a>
    58cc:	8e 01       	movw	r16, r28
    58ce:	0b 5e       	subi	r16, 0xEB	; 235
    58d0:	1f 4f       	sbci	r17, 0xFF	; 255
    58d2:	f8 01       	movw	r30, r16
    58d4:	11 92       	st	Z+, r1
    58d6:	8a 95       	dec	r24
    58d8:	e9 f7       	brne	.-6      	; 0x58d4 <Print_Home_Page_In+0x38>
    58da:	0e 94 10 2c 	call	0x5820	; 0x5820 <Clock>
    58de:	82 e8       	ldi	r24, 0x82	; 130
    58e0:	93 e0       	ldi	r25, 0x03	; 3
    58e2:	9f 93       	push	r25
    58e4:	8f 93       	push	r24
    58e6:	8e e7       	ldi	r24, 0x7E	; 126
    58e8:	93 e0       	ldi	r25, 0x03	; 3
    58ea:	9f 93       	push	r25
    58ec:	8f 93       	push	r24
    58ee:	8e ec       	ldi	r24, 0xCE	; 206
    58f0:	92 e0       	ldi	r25, 0x02	; 2
    58f2:	9f 93       	push	r25
    58f4:	8f 93       	push	r24
    58f6:	ff 92       	push	r15
    58f8:	ef 92       	push	r14
    58fa:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    58fe:	8c e9       	ldi	r24, 0x9C	; 156
    5900:	93 e0       	ldi	r25, 0x03	; 3
    5902:	9f 93       	push	r25
    5904:	8f 93       	push	r24
    5906:	88 e9       	ldi	r24, 0x98	; 152
    5908:	93 e0       	ldi	r25, 0x03	; 3
    590a:	9f 93       	push	r25
    590c:	8f 93       	push	r24
    590e:	84 e9       	ldi	r24, 0x94	; 148
    5910:	93 e0       	ldi	r25, 0x03	; 3
    5912:	9f 93       	push	r25
    5914:	8f 93       	push	r24
    5916:	89 e9       	ldi	r24, 0x99	; 153
    5918:	90 e0       	ldi	r25, 0x00	; 0
    591a:	9f 93       	push	r25
    591c:	8f 93       	push	r24
    591e:	1f 93       	push	r17
    5920:	0f 93       	push	r16
    5922:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5926:	60 e0       	ldi	r22, 0x00	; 0
    5928:	70 e0       	ldi	r23, 0x00	; 0
    592a:	8f ef       	ldi	r24, 0xFF	; 255
    592c:	9f ef       	ldi	r25, 0xFF	; 255
    592e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    5932:	6f e0       	ldi	r22, 0x0F	; 15
    5934:	70 e0       	ldi	r23, 0x00	; 0
    5936:	8a e0       	ldi	r24, 0x0A	; 10
    5938:	90 e0       	ldi	r25, 0x00	; 0
    593a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    593e:	60 e0       	ldi	r22, 0x00	; 0
    5940:	c7 01       	movw	r24, r14
    5942:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <ILI9486_Print_String24x32>
    5946:	67 e3       	ldi	r22, 0x37	; 55
    5948:	70 e0       	ldi	r23, 0x00	; 0
    594a:	8c e0       	ldi	r24, 0x0C	; 12
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5952:	60 e0       	ldi	r22, 0x00	; 0
    5954:	8a e8       	ldi	r24, 0x8A	; 138
    5956:	93 e0       	ldi	r25, 0x03	; 3
    5958:	0e 94 19 10 	call	0x2032	; 0x2032 <ILI9486_Print_String14x24>
    595c:	60 e5       	ldi	r22, 0x50	; 80
    595e:	70 e0       	ldi	r23, 0x00	; 0
    5960:	89 e0       	ldi	r24, 0x09	; 9
    5962:	90 e0       	ldi	r25, 0x00	; 0
    5964:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5968:	60 e0       	ldi	r22, 0x00	; 0
    596a:	c8 01       	movw	r24, r16
    596c:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5970:	a8 95       	wdr
    5972:	60 e0       	ldi	r22, 0x00	; 0
    5974:	70 e0       	ldi	r23, 0x00	; 0
    5976:	82 ea       	ldi	r24, 0xA2	; 162
    5978:	9b ef       	ldi	r25, 0xFB	; 251
    597a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <ILI9486_SetTextColor>
    597e:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <home_temp_sign>
    5982:	0f b6       	in	r0, 0x3f	; 63
    5984:	f8 94       	cli
    5986:	de bf       	out	0x3e, r29	; 62
    5988:	0f be       	out	0x3f, r0	; 63
    598a:	cd bf       	out	0x3d, r28	; 61
    598c:	88 23       	and	r24, r24
    598e:	09 f4       	brne	.+2      	; 0x5992 <Print_Home_Page_In+0xf6>
    5990:	8a c0       	rjmp	.+276    	; 0x5aa6 <Print_Home_Page_In+0x20a>
    5992:	6a ef       	ldi	r22, 0xFA	; 250
    5994:	70 e0       	ldi	r23, 0x00	; 0
    5996:	8f e4       	ldi	r24, 0x4F	; 79
    5998:	90 e0       	ldi	r25, 0x00	; 0
    599a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    599e:	60 e0       	ldi	r22, 0x00	; 0
    59a0:	89 e0       	ldi	r24, 0x09	; 9
    59a2:	91 e0       	ldi	r25, 0x01	; 1
    59a4:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    59a8:	80 91 7d 03 	lds	r24, 0x037D	; 0x80037d <home_temp_integer>
    59ac:	8a 30       	cpi	r24, 0x0A	; 10
    59ae:	98 f5       	brcc	.+102    	; 0x5a16 <Print_Home_Page_In+0x17a>
    59b0:	1f 92       	push	r1
    59b2:	8f 93       	push	r24
    59b4:	8c e5       	ldi	r24, 0x5C	; 92
    59b6:	92 e0       	ldi	r25, 0x02	; 2
    59b8:	9f 93       	push	r25
    59ba:	8f 93       	push	r24
    59bc:	04 51       	subi	r16, 0x14	; 20
    59be:	11 09       	sbc	r17, r1
    59c0:	1f 93       	push	r17
    59c2:	0f 93       	push	r16
    59c4:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    59c8:	6a ef       	ldi	r22, 0xFA	; 250
    59ca:	70 e0       	ldi	r23, 0x00	; 0
    59cc:	83 e1       	ldi	r24, 0x13	; 19
    59ce:	90 e0       	ldi	r25, 0x00	; 0
    59d0:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    59d4:	60 e0       	ldi	r22, 0x00	; 0
    59d6:	c8 01       	movw	r24, r16
    59d8:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    59dc:	6f ef       	ldi	r22, 0xFF	; 255
    59de:	70 e0       	ldi	r23, 0x00	; 0
    59e0:	83 e0       	ldi	r24, 0x03	; 3
    59e2:	90 e0       	ldi	r25, 0x00	; 0
    59e4:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    59e8:	60 e0       	ldi	r22, 0x00	; 0
    59ea:	8e e9       	ldi	r24, 0x9E	; 158
    59ec:	92 e0       	ldi	r25, 0x02	; 2
    59ee:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    59f2:	6f ef       	ldi	r22, 0xFF	; 255
    59f4:	70 e0       	ldi	r23, 0x00	; 0
    59f6:	8e e1       	ldi	r24, 0x1E	; 30
    59f8:	90 e0       	ldi	r25, 0x00	; 0
    59fa:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    59fe:	60 e0       	ldi	r22, 0x00	; 0
    5a00:	85 e9       	ldi	r24, 0x95	; 149
    5a02:	91 e0       	ldi	r25, 0x01	; 1
    5a04:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5a08:	0f 90       	pop	r0
    5a0a:	0f 90       	pop	r0
    5a0c:	0f 90       	pop	r0
    5a0e:	0f 90       	pop	r0
    5a10:	0f 90       	pop	r0
    5a12:	0f 90       	pop	r0
    5a14:	28 c0       	rjmp	.+80     	; 0x5a66 <Print_Home_Page_In+0x1ca>
    5a16:	1f 92       	push	r1
    5a18:	8f 93       	push	r24
    5a1a:	8d e5       	ldi	r24, 0x5D	; 93
    5a1c:	92 e0       	ldi	r25, 0x02	; 2
    5a1e:	9f 93       	push	r25
    5a20:	8f 93       	push	r24
    5a22:	8e 01       	movw	r16, r28
    5a24:	0f 5f       	subi	r16, 0xFF	; 255
    5a26:	1f 4f       	sbci	r17, 0xFF	; 255
    5a28:	1f 93       	push	r17
    5a2a:	0f 93       	push	r16
    5a2c:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5a30:	6f ef       	ldi	r22, 0xFF	; 255
    5a32:	70 e0       	ldi	r23, 0x00	; 0
    5a34:	83 e0       	ldi	r24, 0x03	; 3
    5a36:	90 e0       	ldi	r25, 0x00	; 0
    5a38:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5a3c:	60 e0       	ldi	r22, 0x00	; 0
    5a3e:	85 e9       	ldi	r24, 0x95	; 149
    5a40:	91 e0       	ldi	r25, 0x01	; 1
    5a42:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5a46:	6a ef       	ldi	r22, 0xFA	; 250
    5a48:	70 e0       	ldi	r23, 0x00	; 0
    5a4a:	83 e1       	ldi	r24, 0x13	; 19
    5a4c:	90 e0       	ldi	r25, 0x00	; 0
    5a4e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5a52:	60 e0       	ldi	r22, 0x00	; 0
    5a54:	c8 01       	movw	r24, r16
    5a56:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5a5a:	0f 90       	pop	r0
    5a5c:	0f 90       	pop	r0
    5a5e:	0f 90       	pop	r0
    5a60:	0f 90       	pop	r0
    5a62:	0f 90       	pop	r0
    5a64:	0f 90       	pop	r0
    5a66:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <home_temp_fraction>
    5a6a:	1f 92       	push	r1
    5a6c:	8f 93       	push	r24
    5a6e:	8d e5       	ldi	r24, 0x5D	; 93
    5a70:	92 e0       	ldi	r25, 0x02	; 2
    5a72:	9f 93       	push	r25
    5a74:	8f 93       	push	r24
    5a76:	8e 01       	movw	r16, r28
    5a78:	0f 5f       	subi	r16, 0xFF	; 255
    5a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    5a7c:	1f 93       	push	r17
    5a7e:	0f 93       	push	r16
    5a80:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5a84:	6a ef       	ldi	r22, 0xFA	; 250
    5a86:	70 e0       	ldi	r23, 0x00	; 0
    5a88:	8e e6       	ldi	r24, 0x6E	; 110
    5a8a:	90 e0       	ldi	r25, 0x00	; 0
    5a8c:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5a90:	60 e0       	ldi	r22, 0x00	; 0
    5a92:	c8 01       	movw	r24, r16
    5a94:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5a98:	0f 90       	pop	r0
    5a9a:	0f 90       	pop	r0
    5a9c:	0f 90       	pop	r0
    5a9e:	0f 90       	pop	r0
    5aa0:	0f 90       	pop	r0
    5aa2:	0f 90       	pop	r0
    5aa4:	69 c0       	rjmp	.+210    	; 0x5b78 <Print_Home_Page_In+0x2dc>
    5aa6:	6a ef       	ldi	r22, 0xFA	; 250
    5aa8:	70 e0       	ldi	r23, 0x00	; 0
    5aaa:	8f e4       	ldi	r24, 0x4F	; 79
    5aac:	90 e0       	ldi	r25, 0x00	; 0
    5aae:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5ab2:	60 e0       	ldi	r22, 0x00	; 0
    5ab4:	89 e0       	ldi	r24, 0x09	; 9
    5ab6:	91 e0       	ldi	r25, 0x01	; 1
    5ab8:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5abc:	80 91 7d 03 	lds	r24, 0x037D	; 0x80037d <home_temp_integer>
    5ac0:	8a 30       	cpi	r24, 0x0A	; 10
    5ac2:	f0 f4       	brcc	.+60     	; 0x5b00 <Print_Home_Page_In+0x264>
    5ac4:	1f 92       	push	r1
    5ac6:	8f 93       	push	r24
    5ac8:	8c e5       	ldi	r24, 0x5C	; 92
    5aca:	92 e0       	ldi	r25, 0x02	; 2
    5acc:	9f 93       	push	r25
    5ace:	8f 93       	push	r24
    5ad0:	8e 01       	movw	r16, r28
    5ad2:	0f 5f       	subi	r16, 0xFF	; 255
    5ad4:	1f 4f       	sbci	r17, 0xFF	; 255
    5ad6:	1f 93       	push	r17
    5ad8:	0f 93       	push	r16
    5ada:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5ade:	6a ef       	ldi	r22, 0xFA	; 250
    5ae0:	70 e0       	ldi	r23, 0x00	; 0
    5ae2:	83 e1       	ldi	r24, 0x13	; 19
    5ae4:	90 e0       	ldi	r25, 0x00	; 0
    5ae6:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5aea:	60 e0       	ldi	r22, 0x00	; 0
    5aec:	c8 01       	movw	r24, r16
    5aee:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5af2:	0f 90       	pop	r0
    5af4:	0f 90       	pop	r0
    5af6:	0f 90       	pop	r0
    5af8:	0f 90       	pop	r0
    5afa:	0f 90       	pop	r0
    5afc:	0f 90       	pop	r0
    5afe:	1d c0       	rjmp	.+58     	; 0x5b3a <Print_Home_Page_In+0x29e>
    5b00:	1f 92       	push	r1
    5b02:	8f 93       	push	r24
    5b04:	8d e5       	ldi	r24, 0x5D	; 93
    5b06:	92 e0       	ldi	r25, 0x02	; 2
    5b08:	9f 93       	push	r25
    5b0a:	8f 93       	push	r24
    5b0c:	8e 01       	movw	r16, r28
    5b0e:	0f 5f       	subi	r16, 0xFF	; 255
    5b10:	1f 4f       	sbci	r17, 0xFF	; 255
    5b12:	1f 93       	push	r17
    5b14:	0f 93       	push	r16
    5b16:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5b1a:	6a ef       	ldi	r22, 0xFA	; 250
    5b1c:	70 e0       	ldi	r23, 0x00	; 0
    5b1e:	83 e1       	ldi	r24, 0x13	; 19
    5b20:	90 e0       	ldi	r25, 0x00	; 0
    5b22:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5b26:	60 e0       	ldi	r22, 0x00	; 0
    5b28:	c8 01       	movw	r24, r16
    5b2a:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5b2e:	0f 90       	pop	r0
    5b30:	0f 90       	pop	r0
    5b32:	0f 90       	pop	r0
    5b34:	0f 90       	pop	r0
    5b36:	0f 90       	pop	r0
    5b38:	0f 90       	pop	r0
    5b3a:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <home_temp_fraction>
    5b3e:	1f 92       	push	r1
    5b40:	8f 93       	push	r24
    5b42:	8d e5       	ldi	r24, 0x5D	; 93
    5b44:	92 e0       	ldi	r25, 0x02	; 2
    5b46:	9f 93       	push	r25
    5b48:	8f 93       	push	r24
    5b4a:	8e 01       	movw	r16, r28
    5b4c:	0f 5f       	subi	r16, 0xFF	; 255
    5b4e:	1f 4f       	sbci	r17, 0xFF	; 255
    5b50:	1f 93       	push	r17
    5b52:	0f 93       	push	r16
    5b54:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <sprintf>
    5b58:	6a ef       	ldi	r22, 0xFA	; 250
    5b5a:	70 e0       	ldi	r23, 0x00	; 0
    5b5c:	8e e6       	ldi	r24, 0x6E	; 110
    5b5e:	90 e0       	ldi	r25, 0x00	; 0
    5b60:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5b64:	60 e0       	ldi	r22, 0x00	; 0
    5b66:	c8 01       	movw	r24, r16
    5b68:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5b6c:	0f 90       	pop	r0
    5b6e:	0f 90       	pop	r0
    5b70:	0f 90       	pop	r0
    5b72:	0f 90       	pop	r0
    5b74:	0f 90       	pop	r0
    5b76:	0f 90       	pop	r0
    5b78:	6c e0       	ldi	r22, 0x0C	; 12
    5b7a:	71 e0       	ldi	r23, 0x01	; 1
    5b7c:	8f e8       	ldi	r24, 0x8F	; 143
    5b7e:	90 e0       	ldi	r25, 0x00	; 0
    5b80:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5b84:	60 e0       	ldi	r22, 0x00	; 0
    5b86:	80 e6       	ldi	r24, 0x60	; 96
    5b88:	92 e0       	ldi	r25, 0x02	; 2
    5b8a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5b8e:	66 e9       	ldi	r22, 0x96	; 150
    5b90:	70 e0       	ldi	r23, 0x00	; 0
    5b92:	8f e2       	ldi	r24, 0x2F	; 47
    5b94:	90 e0       	ldi	r25, 0x00	; 0
    5b96:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5b9a:	60 e0       	ldi	r22, 0x00	; 0
    5b9c:	84 ed       	ldi	r24, 0xD4	; 212
    5b9e:	92 e0       	ldi	r25, 0x02	; 2
    5ba0:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ILI9486_Print_String32x48>
    5ba4:	65 ea       	ldi	r22, 0xA5	; 165
    5ba6:	70 e0       	ldi	r23, 0x00	; 0
    5ba8:	83 e7       	ldi	r24, 0x73	; 115
    5baa:	90 e0       	ldi	r25, 0x00	; 0
    5bac:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <ILI9486_SetCursor>
    5bb0:	60 e0       	ldi	r22, 0x00	; 0
    5bb2:	85 e6       	ldi	r24, 0x65	; 101
    5bb4:	92 e0       	ldi	r25, 0x02	; 2
    5bb6:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <ILI9486_Print_String18x32>
    5bba:	6e 96       	adiw	r28, 0x1e	; 30
    5bbc:	0f b6       	in	r0, 0x3f	; 63
    5bbe:	f8 94       	cli
    5bc0:	de bf       	out	0x3e, r29	; 62
    5bc2:	0f be       	out	0x3f, r0	; 63
    5bc4:	cd bf       	out	0x3d, r28	; 61
    5bc6:	df 91       	pop	r29
    5bc8:	cf 91       	pop	r28
    5bca:	1f 91       	pop	r17
    5bcc:	0f 91       	pop	r16
    5bce:	ff 90       	pop	r15
    5bd0:	ef 90       	pop	r14
    5bd2:	08 95       	ret

00005bd4 <sprintf_HOME_Weath_Param>:
void sprintf_HOME_Weath_Param(void)
{
	wdt_reset();
    5bd4:	a8 95       	wdr
	sprintf(hum_home,"%d",home_hum);
	pressure_home = BMP180_calculation()*0.0075;
	sprintf(Press_home,"%d",pressure_home);*/
	
	int tt=0; //переменна§ дл§ хранени§ температуры в сыром виде
	tt = dt_check(); //измер§ем температуру
    5bd6:	0e 94 ed 00 	call	0x1da	; 0x1da <dt_check>

	home_temp_sign = tt>>11;//вычисление знака температуры
    5bda:	29 2f       	mov	r18, r25
    5bdc:	25 95       	asr	r18
    5bde:	25 95       	asr	r18
    5be0:	25 95       	asr	r18
    5be2:	20 93 a0 03 	sts	0x03A0, r18	; 0x8003a0 <home_temp_sign>
	if (home_temp_sign == 0x00)
    5be6:	21 11       	cpse	r18, r1
    5be8:	18 c0       	rjmp	.+48     	; 0x5c1a <sprintf_HOME_Weath_Param+0x46>
	{
		home_temp_fraction = tt & 0xF;
    5bea:	28 2f       	mov	r18, r24
    5bec:	2f 70       	andi	r18, 0x0F	; 15
		home_temp_fraction = (home_temp_fraction<<1) + (home_temp_fraction<<3);// Фмножаем на 10
    5bee:	32 2f       	mov	r19, r18
    5bf0:	33 0f       	add	r19, r19
    5bf2:	22 0f       	add	r18, r18
    5bf4:	22 0f       	add	r18, r18
    5bf6:	22 0f       	add	r18, r18
    5bf8:	23 0f       	add	r18, r19
		home_temp_fraction = (home_temp_fraction>>4);//делим на 16 или умножаем на 0.0625
    5bfa:	22 95       	swap	r18
    5bfc:	2f 70       	andi	r18, 0x0F	; 15
    5bfe:	20 93 76 03 	sts	0x0376, r18	; 0x800376 <home_temp_fraction>
		home_temp_integer = (tt&0x07FF)>>4;
    5c02:	97 70       	andi	r25, 0x07	; 7
    5c04:	95 95       	asr	r25
    5c06:	87 95       	ror	r24
    5c08:	95 95       	asr	r25
    5c0a:	87 95       	ror	r24
    5c0c:	95 95       	asr	r25
    5c0e:	87 95       	ror	r24
    5c10:	95 95       	asr	r25
    5c12:	87 95       	ror	r24
    5c14:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <home_temp_integer>
    5c18:	1a c0       	rjmp	.+52     	; 0x5c4e <sprintf_HOME_Weath_Param+0x7a>
		//sprintf(data,"%d,%d\r",buf[1],buf[0]);
	}
	else
	{
		home_temp_fraction = ((~tt) & 0xF);
    5c1a:	28 2f       	mov	r18, r24
    5c1c:	20 95       	com	r18
    5c1e:	2f 70       	andi	r18, 0x0F	; 15
		home_temp_fraction = (home_temp_fraction<<1) + (home_temp_fraction<<3);// Фмножаем на 10
    5c20:	32 2f       	mov	r19, r18
    5c22:	33 0f       	add	r19, r19
    5c24:	22 0f       	add	r18, r18
    5c26:	22 0f       	add	r18, r18
    5c28:	22 0f       	add	r18, r18
    5c2a:	23 0f       	add	r18, r19
		home_temp_fraction = (home_temp_fraction>>4);//делим на 16 или умножаем на 0.0625
    5c2c:	22 95       	swap	r18
    5c2e:	2f 70       	andi	r18, 0x0F	; 15
    5c30:	20 93 76 03 	sts	0x0376, r18	; 0x800376 <home_temp_fraction>
		home_temp_integer = ((~(tt))&0x07FF)>>4;
    5c34:	80 95       	com	r24
    5c36:	90 95       	com	r25
    5c38:	97 70       	andi	r25, 0x07	; 7
    5c3a:	95 95       	asr	r25
    5c3c:	87 95       	ror	r24
    5c3e:	95 95       	asr	r25
    5c40:	87 95       	ror	r24
    5c42:	95 95       	asr	r25
    5c44:	87 95       	ror	r24
    5c46:	95 95       	asr	r25
    5c48:	87 95       	ror	r24
    5c4a:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <home_temp_integer>
		//sprintf(data,"-%d,%d\r",buf[1],buf[0]);
	}
	wdt_reset();
    5c4e:	a8 95       	wdr
    5c50:	08 95       	ret

00005c52 <__udivmodsi4>:
    5c52:	a1 e2       	ldi	r26, 0x21	; 33
    5c54:	1a 2e       	mov	r1, r26
    5c56:	aa 1b       	sub	r26, r26
    5c58:	bb 1b       	sub	r27, r27
    5c5a:	fd 01       	movw	r30, r26
    5c5c:	0d c0       	rjmp	.+26     	; 0x5c78 <__udivmodsi4_ep>

00005c5e <__udivmodsi4_loop>:
    5c5e:	aa 1f       	adc	r26, r26
    5c60:	bb 1f       	adc	r27, r27
    5c62:	ee 1f       	adc	r30, r30
    5c64:	ff 1f       	adc	r31, r31
    5c66:	a2 17       	cp	r26, r18
    5c68:	b3 07       	cpc	r27, r19
    5c6a:	e4 07       	cpc	r30, r20
    5c6c:	f5 07       	cpc	r31, r21
    5c6e:	20 f0       	brcs	.+8      	; 0x5c78 <__udivmodsi4_ep>
    5c70:	a2 1b       	sub	r26, r18
    5c72:	b3 0b       	sbc	r27, r19
    5c74:	e4 0b       	sbc	r30, r20
    5c76:	f5 0b       	sbc	r31, r21

00005c78 <__udivmodsi4_ep>:
    5c78:	66 1f       	adc	r22, r22
    5c7a:	77 1f       	adc	r23, r23
    5c7c:	88 1f       	adc	r24, r24
    5c7e:	99 1f       	adc	r25, r25
    5c80:	1a 94       	dec	r1
    5c82:	69 f7       	brne	.-38     	; 0x5c5e <__udivmodsi4_loop>
    5c84:	60 95       	com	r22
    5c86:	70 95       	com	r23
    5c88:	80 95       	com	r24
    5c8a:	90 95       	com	r25
    5c8c:	9b 01       	movw	r18, r22
    5c8e:	ac 01       	movw	r20, r24
    5c90:	bd 01       	movw	r22, r26
    5c92:	cf 01       	movw	r24, r30
    5c94:	08 95       	ret

00005c96 <__divmodsi4>:
    5c96:	05 2e       	mov	r0, r21
    5c98:	97 fb       	bst	r25, 7
    5c9a:	1e f4       	brtc	.+6      	; 0x5ca2 <__divmodsi4+0xc>
    5c9c:	00 94       	com	r0
    5c9e:	0e 94 62 2e 	call	0x5cc4	; 0x5cc4 <__negsi2>
    5ca2:	57 fd       	sbrc	r21, 7
    5ca4:	07 d0       	rcall	.+14     	; 0x5cb4 <__divmodsi4_neg2>
    5ca6:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <__udivmodsi4>
    5caa:	07 fc       	sbrc	r0, 7
    5cac:	03 d0       	rcall	.+6      	; 0x5cb4 <__divmodsi4_neg2>
    5cae:	4e f4       	brtc	.+18     	; 0x5cc2 <__divmodsi4_exit>
    5cb0:	0c 94 62 2e 	jmp	0x5cc4	; 0x5cc4 <__negsi2>

00005cb4 <__divmodsi4_neg2>:
    5cb4:	50 95       	com	r21
    5cb6:	40 95       	com	r20
    5cb8:	30 95       	com	r19
    5cba:	21 95       	neg	r18
    5cbc:	3f 4f       	sbci	r19, 0xFF	; 255
    5cbe:	4f 4f       	sbci	r20, 0xFF	; 255
    5cc0:	5f 4f       	sbci	r21, 0xFF	; 255

00005cc2 <__divmodsi4_exit>:
    5cc2:	08 95       	ret

00005cc4 <__negsi2>:
    5cc4:	90 95       	com	r25
    5cc6:	80 95       	com	r24
    5cc8:	70 95       	com	r23
    5cca:	61 95       	neg	r22
    5ccc:	7f 4f       	sbci	r23, 0xFF	; 255
    5cce:	8f 4f       	sbci	r24, 0xFF	; 255
    5cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    5cd2:	08 95       	ret

00005cd4 <__tablejump2__>:
    5cd4:	ee 0f       	add	r30, r30
    5cd6:	ff 1f       	adc	r31, r31
    5cd8:	05 90       	lpm	r0, Z+
    5cda:	f4 91       	lpm	r31, Z
    5cdc:	e0 2d       	mov	r30, r0
    5cde:	09 94       	ijmp

00005ce0 <__umulhisi3>:
    5ce0:	a2 9f       	mul	r26, r18
    5ce2:	b0 01       	movw	r22, r0
    5ce4:	b3 9f       	mul	r27, r19
    5ce6:	c0 01       	movw	r24, r0
    5ce8:	a3 9f       	mul	r26, r19
    5cea:	70 0d       	add	r23, r0
    5cec:	81 1d       	adc	r24, r1
    5cee:	11 24       	eor	r1, r1
    5cf0:	91 1d       	adc	r25, r1
    5cf2:	b2 9f       	mul	r27, r18
    5cf4:	70 0d       	add	r23, r0
    5cf6:	81 1d       	adc	r24, r1
    5cf8:	11 24       	eor	r1, r1
    5cfa:	91 1d       	adc	r25, r1
    5cfc:	08 95       	ret

00005cfe <__muluhisi3>:
    5cfe:	0e 94 70 2e 	call	0x5ce0	; 0x5ce0 <__umulhisi3>
    5d02:	a5 9f       	mul	r26, r21
    5d04:	90 0d       	add	r25, r0
    5d06:	b4 9f       	mul	r27, r20
    5d08:	90 0d       	add	r25, r0
    5d0a:	a4 9f       	mul	r26, r20
    5d0c:	80 0d       	add	r24, r0
    5d0e:	91 1d       	adc	r25, r1
    5d10:	11 24       	eor	r1, r1
    5d12:	08 95       	ret

00005d14 <__mulshisi3>:
    5d14:	b7 ff       	sbrs	r27, 7
    5d16:	0c 94 7f 2e 	jmp	0x5cfe	; 0x5cfe <__muluhisi3>

00005d1a <__mulohisi3>:
    5d1a:	0e 94 7f 2e 	call	0x5cfe	; 0x5cfe <__muluhisi3>
    5d1e:	82 1b       	sub	r24, r18
    5d20:	93 0b       	sbc	r25, r19
    5d22:	08 95       	ret

00005d24 <memset>:
    5d24:	dc 01       	movw	r26, r24
    5d26:	01 c0       	rjmp	.+2      	; 0x5d2a <memset+0x6>
    5d28:	6d 93       	st	X+, r22
    5d2a:	41 50       	subi	r20, 0x01	; 1
    5d2c:	50 40       	sbci	r21, 0x00	; 0
    5d2e:	e0 f7       	brcc	.-8      	; 0x5d28 <memset+0x4>
    5d30:	08 95       	ret

00005d32 <strcmp>:
    5d32:	fb 01       	movw	r30, r22
    5d34:	dc 01       	movw	r26, r24
    5d36:	8d 91       	ld	r24, X+
    5d38:	01 90       	ld	r0, Z+
    5d3a:	80 19       	sub	r24, r0
    5d3c:	01 10       	cpse	r0, r1
    5d3e:	d9 f3       	breq	.-10     	; 0x5d36 <strcmp+0x4>
    5d40:	99 0b       	sbc	r25, r25
    5d42:	08 95       	ret

00005d44 <sprintf>:
    5d44:	ae e0       	ldi	r26, 0x0E	; 14
    5d46:	b0 e0       	ldi	r27, 0x00	; 0
    5d48:	e8 ea       	ldi	r30, 0xA8	; 168
    5d4a:	fe e2       	ldi	r31, 0x2E	; 46
    5d4c:	0c 94 97 34 	jmp	0x692e	; 0x692e <__prologue_saves__+0x1c>
    5d50:	0d 89       	ldd	r16, Y+21	; 0x15
    5d52:	1e 89       	ldd	r17, Y+22	; 0x16
    5d54:	86 e0       	ldi	r24, 0x06	; 6
    5d56:	8c 83       	std	Y+4, r24	; 0x04
    5d58:	1a 83       	std	Y+2, r17	; 0x02
    5d5a:	09 83       	std	Y+1, r16	; 0x01
    5d5c:	8f ef       	ldi	r24, 0xFF	; 255
    5d5e:	9f e7       	ldi	r25, 0x7F	; 127
    5d60:	9e 83       	std	Y+6, r25	; 0x06
    5d62:	8d 83       	std	Y+5, r24	; 0x05
    5d64:	ae 01       	movw	r20, r28
    5d66:	47 5e       	subi	r20, 0xE7	; 231
    5d68:	5f 4f       	sbci	r21, 0xFF	; 255
    5d6a:	6f 89       	ldd	r22, Y+23	; 0x17
    5d6c:	78 8d       	ldd	r23, Y+24	; 0x18
    5d6e:	ce 01       	movw	r24, r28
    5d70:	01 96       	adiw	r24, 0x01	; 1
    5d72:	0e 94 dd 2e 	call	0x5dba	; 0x5dba <vfprintf>
    5d76:	ef 81       	ldd	r30, Y+7	; 0x07
    5d78:	f8 85       	ldd	r31, Y+8	; 0x08
    5d7a:	e0 0f       	add	r30, r16
    5d7c:	f1 1f       	adc	r31, r17
    5d7e:	10 82       	st	Z, r1
    5d80:	2e 96       	adiw	r28, 0x0e	; 14
    5d82:	e4 e0       	ldi	r30, 0x04	; 4
    5d84:	0c 94 b3 34 	jmp	0x6966	; 0x6966 <__epilogue_restores__+0x1c>

00005d88 <sscanf>:
    5d88:	ae e0       	ldi	r26, 0x0E	; 14
    5d8a:	b0 e0       	ldi	r27, 0x00	; 0
    5d8c:	ea ec       	ldi	r30, 0xCA	; 202
    5d8e:	fe e2       	ldi	r31, 0x2E	; 46
    5d90:	0c 94 99 34 	jmp	0x6932	; 0x6932 <__prologue_saves__+0x20>
    5d94:	85 e0       	ldi	r24, 0x05	; 5
    5d96:	8c 83       	std	Y+4, r24	; 0x04
    5d98:	8b 89       	ldd	r24, Y+19	; 0x13
    5d9a:	9c 89       	ldd	r25, Y+20	; 0x14
    5d9c:	9a 83       	std	Y+2, r25	; 0x02
    5d9e:	89 83       	std	Y+1, r24	; 0x01
    5da0:	ae 01       	movw	r20, r28
    5da2:	49 5e       	subi	r20, 0xE9	; 233
    5da4:	5f 4f       	sbci	r21, 0xFF	; 255
    5da6:	6d 89       	ldd	r22, Y+21	; 0x15
    5da8:	7e 89       	ldd	r23, Y+22	; 0x16
    5daa:	ce 01       	movw	r24, r28
    5dac:	01 96       	adiw	r24, 0x01	; 1
    5dae:	0e 94 5a 32 	call	0x64b4	; 0x64b4 <vfscanf>
    5db2:	2e 96       	adiw	r28, 0x0e	; 14
    5db4:	e2 e0       	ldi	r30, 0x02	; 2
    5db6:	0c 94 b5 34 	jmp	0x696a	; 0x696a <__epilogue_restores__+0x20>

00005dba <vfprintf>:
    5dba:	ab e0       	ldi	r26, 0x0B	; 11
    5dbc:	b0 e0       	ldi	r27, 0x00	; 0
    5dbe:	e3 ee       	ldi	r30, 0xE3	; 227
    5dc0:	fe e2       	ldi	r31, 0x2E	; 46
    5dc2:	0c 94 89 34 	jmp	0x6912	; 0x6912 <__prologue_saves__>
    5dc6:	6c 01       	movw	r12, r24
    5dc8:	7b 01       	movw	r14, r22
    5dca:	8a 01       	movw	r16, r20
    5dcc:	fc 01       	movw	r30, r24
    5dce:	17 82       	std	Z+7, r1	; 0x07
    5dd0:	16 82       	std	Z+6, r1	; 0x06
    5dd2:	83 81       	ldd	r24, Z+3	; 0x03
    5dd4:	81 ff       	sbrs	r24, 1
    5dd6:	cc c1       	rjmp	.+920    	; 0x6170 <vfprintf+0x3b6>
    5dd8:	ce 01       	movw	r24, r28
    5dda:	01 96       	adiw	r24, 0x01	; 1
    5ddc:	3c 01       	movw	r6, r24
    5dde:	f6 01       	movw	r30, r12
    5de0:	93 81       	ldd	r25, Z+3	; 0x03
    5de2:	f7 01       	movw	r30, r14
    5de4:	93 fd       	sbrc	r25, 3
    5de6:	85 91       	lpm	r24, Z+
    5de8:	93 ff       	sbrs	r25, 3
    5dea:	81 91       	ld	r24, Z+
    5dec:	7f 01       	movw	r14, r30
    5dee:	88 23       	and	r24, r24
    5df0:	09 f4       	brne	.+2      	; 0x5df4 <vfprintf+0x3a>
    5df2:	ba c1       	rjmp	.+884    	; 0x6168 <vfprintf+0x3ae>
    5df4:	85 32       	cpi	r24, 0x25	; 37
    5df6:	39 f4       	brne	.+14     	; 0x5e06 <vfprintf+0x4c>
    5df8:	93 fd       	sbrc	r25, 3
    5dfa:	85 91       	lpm	r24, Z+
    5dfc:	93 ff       	sbrs	r25, 3
    5dfe:	81 91       	ld	r24, Z+
    5e00:	7f 01       	movw	r14, r30
    5e02:	85 32       	cpi	r24, 0x25	; 37
    5e04:	29 f4       	brne	.+10     	; 0x5e10 <vfprintf+0x56>
    5e06:	b6 01       	movw	r22, r12
    5e08:	90 e0       	ldi	r25, 0x00	; 0
    5e0a:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    5e0e:	e7 cf       	rjmp	.-50     	; 0x5dde <vfprintf+0x24>
    5e10:	91 2c       	mov	r9, r1
    5e12:	21 2c       	mov	r2, r1
    5e14:	31 2c       	mov	r3, r1
    5e16:	ff e1       	ldi	r31, 0x1F	; 31
    5e18:	f3 15       	cp	r31, r3
    5e1a:	d8 f0       	brcs	.+54     	; 0x5e52 <vfprintf+0x98>
    5e1c:	8b 32       	cpi	r24, 0x2B	; 43
    5e1e:	79 f0       	breq	.+30     	; 0x5e3e <vfprintf+0x84>
    5e20:	38 f4       	brcc	.+14     	; 0x5e30 <vfprintf+0x76>
    5e22:	80 32       	cpi	r24, 0x20	; 32
    5e24:	79 f0       	breq	.+30     	; 0x5e44 <vfprintf+0x8a>
    5e26:	83 32       	cpi	r24, 0x23	; 35
    5e28:	a1 f4       	brne	.+40     	; 0x5e52 <vfprintf+0x98>
    5e2a:	23 2d       	mov	r18, r3
    5e2c:	20 61       	ori	r18, 0x10	; 16
    5e2e:	1d c0       	rjmp	.+58     	; 0x5e6a <vfprintf+0xb0>
    5e30:	8d 32       	cpi	r24, 0x2D	; 45
    5e32:	61 f0       	breq	.+24     	; 0x5e4c <vfprintf+0x92>
    5e34:	80 33       	cpi	r24, 0x30	; 48
    5e36:	69 f4       	brne	.+26     	; 0x5e52 <vfprintf+0x98>
    5e38:	23 2d       	mov	r18, r3
    5e3a:	21 60       	ori	r18, 0x01	; 1
    5e3c:	16 c0       	rjmp	.+44     	; 0x5e6a <vfprintf+0xb0>
    5e3e:	83 2d       	mov	r24, r3
    5e40:	82 60       	ori	r24, 0x02	; 2
    5e42:	38 2e       	mov	r3, r24
    5e44:	e3 2d       	mov	r30, r3
    5e46:	e4 60       	ori	r30, 0x04	; 4
    5e48:	3e 2e       	mov	r3, r30
    5e4a:	2a c0       	rjmp	.+84     	; 0x5ea0 <vfprintf+0xe6>
    5e4c:	f3 2d       	mov	r31, r3
    5e4e:	f8 60       	ori	r31, 0x08	; 8
    5e50:	1d c0       	rjmp	.+58     	; 0x5e8c <vfprintf+0xd2>
    5e52:	37 fc       	sbrc	r3, 7
    5e54:	2d c0       	rjmp	.+90     	; 0x5eb0 <vfprintf+0xf6>
    5e56:	20 ed       	ldi	r18, 0xD0	; 208
    5e58:	28 0f       	add	r18, r24
    5e5a:	2a 30       	cpi	r18, 0x0A	; 10
    5e5c:	40 f0       	brcs	.+16     	; 0x5e6e <vfprintf+0xb4>
    5e5e:	8e 32       	cpi	r24, 0x2E	; 46
    5e60:	b9 f4       	brne	.+46     	; 0x5e90 <vfprintf+0xd6>
    5e62:	36 fc       	sbrc	r3, 6
    5e64:	81 c1       	rjmp	.+770    	; 0x6168 <vfprintf+0x3ae>
    5e66:	23 2d       	mov	r18, r3
    5e68:	20 64       	ori	r18, 0x40	; 64
    5e6a:	32 2e       	mov	r3, r18
    5e6c:	19 c0       	rjmp	.+50     	; 0x5ea0 <vfprintf+0xe6>
    5e6e:	36 fe       	sbrs	r3, 6
    5e70:	06 c0       	rjmp	.+12     	; 0x5e7e <vfprintf+0xc4>
    5e72:	8a e0       	ldi	r24, 0x0A	; 10
    5e74:	98 9e       	mul	r9, r24
    5e76:	20 0d       	add	r18, r0
    5e78:	11 24       	eor	r1, r1
    5e7a:	92 2e       	mov	r9, r18
    5e7c:	11 c0       	rjmp	.+34     	; 0x5ea0 <vfprintf+0xe6>
    5e7e:	ea e0       	ldi	r30, 0x0A	; 10
    5e80:	2e 9e       	mul	r2, r30
    5e82:	20 0d       	add	r18, r0
    5e84:	11 24       	eor	r1, r1
    5e86:	22 2e       	mov	r2, r18
    5e88:	f3 2d       	mov	r31, r3
    5e8a:	f0 62       	ori	r31, 0x20	; 32
    5e8c:	3f 2e       	mov	r3, r31
    5e8e:	08 c0       	rjmp	.+16     	; 0x5ea0 <vfprintf+0xe6>
    5e90:	8c 36       	cpi	r24, 0x6C	; 108
    5e92:	21 f4       	brne	.+8      	; 0x5e9c <vfprintf+0xe2>
    5e94:	83 2d       	mov	r24, r3
    5e96:	80 68       	ori	r24, 0x80	; 128
    5e98:	38 2e       	mov	r3, r24
    5e9a:	02 c0       	rjmp	.+4      	; 0x5ea0 <vfprintf+0xe6>
    5e9c:	88 36       	cpi	r24, 0x68	; 104
    5e9e:	41 f4       	brne	.+16     	; 0x5eb0 <vfprintf+0xf6>
    5ea0:	f7 01       	movw	r30, r14
    5ea2:	93 fd       	sbrc	r25, 3
    5ea4:	85 91       	lpm	r24, Z+
    5ea6:	93 ff       	sbrs	r25, 3
    5ea8:	81 91       	ld	r24, Z+
    5eaa:	7f 01       	movw	r14, r30
    5eac:	81 11       	cpse	r24, r1
    5eae:	b3 cf       	rjmp	.-154    	; 0x5e16 <vfprintf+0x5c>
    5eb0:	98 2f       	mov	r25, r24
    5eb2:	9f 7d       	andi	r25, 0xDF	; 223
    5eb4:	95 54       	subi	r25, 0x45	; 69
    5eb6:	93 30       	cpi	r25, 0x03	; 3
    5eb8:	28 f4       	brcc	.+10     	; 0x5ec4 <vfprintf+0x10a>
    5eba:	0c 5f       	subi	r16, 0xFC	; 252
    5ebc:	1f 4f       	sbci	r17, 0xFF	; 255
    5ebe:	9f e3       	ldi	r25, 0x3F	; 63
    5ec0:	99 83       	std	Y+1, r25	; 0x01
    5ec2:	0d c0       	rjmp	.+26     	; 0x5ede <vfprintf+0x124>
    5ec4:	83 36       	cpi	r24, 0x63	; 99
    5ec6:	31 f0       	breq	.+12     	; 0x5ed4 <vfprintf+0x11a>
    5ec8:	83 37       	cpi	r24, 0x73	; 115
    5eca:	71 f0       	breq	.+28     	; 0x5ee8 <vfprintf+0x12e>
    5ecc:	83 35       	cpi	r24, 0x53	; 83
    5ece:	09 f0       	breq	.+2      	; 0x5ed2 <vfprintf+0x118>
    5ed0:	59 c0       	rjmp	.+178    	; 0x5f84 <vfprintf+0x1ca>
    5ed2:	21 c0       	rjmp	.+66     	; 0x5f16 <vfprintf+0x15c>
    5ed4:	f8 01       	movw	r30, r16
    5ed6:	80 81       	ld	r24, Z
    5ed8:	89 83       	std	Y+1, r24	; 0x01
    5eda:	0e 5f       	subi	r16, 0xFE	; 254
    5edc:	1f 4f       	sbci	r17, 0xFF	; 255
    5ede:	88 24       	eor	r8, r8
    5ee0:	83 94       	inc	r8
    5ee2:	91 2c       	mov	r9, r1
    5ee4:	53 01       	movw	r10, r6
    5ee6:	13 c0       	rjmp	.+38     	; 0x5f0e <vfprintf+0x154>
    5ee8:	28 01       	movw	r4, r16
    5eea:	f2 e0       	ldi	r31, 0x02	; 2
    5eec:	4f 0e       	add	r4, r31
    5eee:	51 1c       	adc	r5, r1
    5ef0:	f8 01       	movw	r30, r16
    5ef2:	a0 80       	ld	r10, Z
    5ef4:	b1 80       	ldd	r11, Z+1	; 0x01
    5ef6:	36 fe       	sbrs	r3, 6
    5ef8:	03 c0       	rjmp	.+6      	; 0x5f00 <vfprintf+0x146>
    5efa:	69 2d       	mov	r22, r9
    5efc:	70 e0       	ldi	r23, 0x00	; 0
    5efe:	02 c0       	rjmp	.+4      	; 0x5f04 <vfprintf+0x14a>
    5f00:	6f ef       	ldi	r22, 0xFF	; 255
    5f02:	7f ef       	ldi	r23, 0xFF	; 255
    5f04:	c5 01       	movw	r24, r10
    5f06:	0e 94 8a 33 	call	0x6714	; 0x6714 <strnlen>
    5f0a:	4c 01       	movw	r8, r24
    5f0c:	82 01       	movw	r16, r4
    5f0e:	f3 2d       	mov	r31, r3
    5f10:	ff 77       	andi	r31, 0x7F	; 127
    5f12:	3f 2e       	mov	r3, r31
    5f14:	16 c0       	rjmp	.+44     	; 0x5f42 <vfprintf+0x188>
    5f16:	28 01       	movw	r4, r16
    5f18:	22 e0       	ldi	r18, 0x02	; 2
    5f1a:	42 0e       	add	r4, r18
    5f1c:	51 1c       	adc	r5, r1
    5f1e:	f8 01       	movw	r30, r16
    5f20:	a0 80       	ld	r10, Z
    5f22:	b1 80       	ldd	r11, Z+1	; 0x01
    5f24:	36 fe       	sbrs	r3, 6
    5f26:	03 c0       	rjmp	.+6      	; 0x5f2e <vfprintf+0x174>
    5f28:	69 2d       	mov	r22, r9
    5f2a:	70 e0       	ldi	r23, 0x00	; 0
    5f2c:	02 c0       	rjmp	.+4      	; 0x5f32 <vfprintf+0x178>
    5f2e:	6f ef       	ldi	r22, 0xFF	; 255
    5f30:	7f ef       	ldi	r23, 0xFF	; 255
    5f32:	c5 01       	movw	r24, r10
    5f34:	0e 94 7f 33 	call	0x66fe	; 0x66fe <strnlen_P>
    5f38:	4c 01       	movw	r8, r24
    5f3a:	f3 2d       	mov	r31, r3
    5f3c:	f0 68       	ori	r31, 0x80	; 128
    5f3e:	3f 2e       	mov	r3, r31
    5f40:	82 01       	movw	r16, r4
    5f42:	33 fc       	sbrc	r3, 3
    5f44:	1b c0       	rjmp	.+54     	; 0x5f7c <vfprintf+0x1c2>
    5f46:	82 2d       	mov	r24, r2
    5f48:	90 e0       	ldi	r25, 0x00	; 0
    5f4a:	88 16       	cp	r8, r24
    5f4c:	99 06       	cpc	r9, r25
    5f4e:	b0 f4       	brcc	.+44     	; 0x5f7c <vfprintf+0x1c2>
    5f50:	b6 01       	movw	r22, r12
    5f52:	80 e2       	ldi	r24, 0x20	; 32
    5f54:	90 e0       	ldi	r25, 0x00	; 0
    5f56:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    5f5a:	2a 94       	dec	r2
    5f5c:	f4 cf       	rjmp	.-24     	; 0x5f46 <vfprintf+0x18c>
    5f5e:	f5 01       	movw	r30, r10
    5f60:	37 fc       	sbrc	r3, 7
    5f62:	85 91       	lpm	r24, Z+
    5f64:	37 fe       	sbrs	r3, 7
    5f66:	81 91       	ld	r24, Z+
    5f68:	5f 01       	movw	r10, r30
    5f6a:	b6 01       	movw	r22, r12
    5f6c:	90 e0       	ldi	r25, 0x00	; 0
    5f6e:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    5f72:	21 10       	cpse	r2, r1
    5f74:	2a 94       	dec	r2
    5f76:	21 e0       	ldi	r18, 0x01	; 1
    5f78:	82 1a       	sub	r8, r18
    5f7a:	91 08       	sbc	r9, r1
    5f7c:	81 14       	cp	r8, r1
    5f7e:	91 04       	cpc	r9, r1
    5f80:	71 f7       	brne	.-36     	; 0x5f5e <vfprintf+0x1a4>
    5f82:	e8 c0       	rjmp	.+464    	; 0x6154 <vfprintf+0x39a>
    5f84:	84 36       	cpi	r24, 0x64	; 100
    5f86:	11 f0       	breq	.+4      	; 0x5f8c <vfprintf+0x1d2>
    5f88:	89 36       	cpi	r24, 0x69	; 105
    5f8a:	41 f5       	brne	.+80     	; 0x5fdc <vfprintf+0x222>
    5f8c:	f8 01       	movw	r30, r16
    5f8e:	37 fe       	sbrs	r3, 7
    5f90:	07 c0       	rjmp	.+14     	; 0x5fa0 <vfprintf+0x1e6>
    5f92:	60 81       	ld	r22, Z
    5f94:	71 81       	ldd	r23, Z+1	; 0x01
    5f96:	82 81       	ldd	r24, Z+2	; 0x02
    5f98:	93 81       	ldd	r25, Z+3	; 0x03
    5f9a:	0c 5f       	subi	r16, 0xFC	; 252
    5f9c:	1f 4f       	sbci	r17, 0xFF	; 255
    5f9e:	08 c0       	rjmp	.+16     	; 0x5fb0 <vfprintf+0x1f6>
    5fa0:	60 81       	ld	r22, Z
    5fa2:	71 81       	ldd	r23, Z+1	; 0x01
    5fa4:	07 2e       	mov	r0, r23
    5fa6:	00 0c       	add	r0, r0
    5fa8:	88 0b       	sbc	r24, r24
    5faa:	99 0b       	sbc	r25, r25
    5fac:	0e 5f       	subi	r16, 0xFE	; 254
    5fae:	1f 4f       	sbci	r17, 0xFF	; 255
    5fb0:	f3 2d       	mov	r31, r3
    5fb2:	ff 76       	andi	r31, 0x6F	; 111
    5fb4:	3f 2e       	mov	r3, r31
    5fb6:	97 ff       	sbrs	r25, 7
    5fb8:	09 c0       	rjmp	.+18     	; 0x5fcc <vfprintf+0x212>
    5fba:	90 95       	com	r25
    5fbc:	80 95       	com	r24
    5fbe:	70 95       	com	r23
    5fc0:	61 95       	neg	r22
    5fc2:	7f 4f       	sbci	r23, 0xFF	; 255
    5fc4:	8f 4f       	sbci	r24, 0xFF	; 255
    5fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    5fc8:	f0 68       	ori	r31, 0x80	; 128
    5fca:	3f 2e       	mov	r3, r31
    5fcc:	2a e0       	ldi	r18, 0x0A	; 10
    5fce:	30 e0       	ldi	r19, 0x00	; 0
    5fd0:	a3 01       	movw	r20, r6
    5fd2:	0e 94 28 34 	call	0x6850	; 0x6850 <__ultoa_invert>
    5fd6:	88 2e       	mov	r8, r24
    5fd8:	86 18       	sub	r8, r6
    5fda:	45 c0       	rjmp	.+138    	; 0x6066 <vfprintf+0x2ac>
    5fdc:	85 37       	cpi	r24, 0x75	; 117
    5fde:	31 f4       	brne	.+12     	; 0x5fec <vfprintf+0x232>
    5fe0:	23 2d       	mov	r18, r3
    5fe2:	2f 7e       	andi	r18, 0xEF	; 239
    5fe4:	b2 2e       	mov	r11, r18
    5fe6:	2a e0       	ldi	r18, 0x0A	; 10
    5fe8:	30 e0       	ldi	r19, 0x00	; 0
    5fea:	25 c0       	rjmp	.+74     	; 0x6036 <vfprintf+0x27c>
    5fec:	93 2d       	mov	r25, r3
    5fee:	99 7f       	andi	r25, 0xF9	; 249
    5ff0:	b9 2e       	mov	r11, r25
    5ff2:	8f 36       	cpi	r24, 0x6F	; 111
    5ff4:	c1 f0       	breq	.+48     	; 0x6026 <vfprintf+0x26c>
    5ff6:	18 f4       	brcc	.+6      	; 0x5ffe <vfprintf+0x244>
    5ff8:	88 35       	cpi	r24, 0x58	; 88
    5ffa:	79 f0       	breq	.+30     	; 0x601a <vfprintf+0x260>
    5ffc:	b5 c0       	rjmp	.+362    	; 0x6168 <vfprintf+0x3ae>
    5ffe:	80 37       	cpi	r24, 0x70	; 112
    6000:	19 f0       	breq	.+6      	; 0x6008 <vfprintf+0x24e>
    6002:	88 37       	cpi	r24, 0x78	; 120
    6004:	21 f0       	breq	.+8      	; 0x600e <vfprintf+0x254>
    6006:	b0 c0       	rjmp	.+352    	; 0x6168 <vfprintf+0x3ae>
    6008:	e9 2f       	mov	r30, r25
    600a:	e0 61       	ori	r30, 0x10	; 16
    600c:	be 2e       	mov	r11, r30
    600e:	b4 fe       	sbrs	r11, 4
    6010:	0d c0       	rjmp	.+26     	; 0x602c <vfprintf+0x272>
    6012:	fb 2d       	mov	r31, r11
    6014:	f4 60       	ori	r31, 0x04	; 4
    6016:	bf 2e       	mov	r11, r31
    6018:	09 c0       	rjmp	.+18     	; 0x602c <vfprintf+0x272>
    601a:	34 fe       	sbrs	r3, 4
    601c:	0a c0       	rjmp	.+20     	; 0x6032 <vfprintf+0x278>
    601e:	29 2f       	mov	r18, r25
    6020:	26 60       	ori	r18, 0x06	; 6
    6022:	b2 2e       	mov	r11, r18
    6024:	06 c0       	rjmp	.+12     	; 0x6032 <vfprintf+0x278>
    6026:	28 e0       	ldi	r18, 0x08	; 8
    6028:	30 e0       	ldi	r19, 0x00	; 0
    602a:	05 c0       	rjmp	.+10     	; 0x6036 <vfprintf+0x27c>
    602c:	20 e1       	ldi	r18, 0x10	; 16
    602e:	30 e0       	ldi	r19, 0x00	; 0
    6030:	02 c0       	rjmp	.+4      	; 0x6036 <vfprintf+0x27c>
    6032:	20 e1       	ldi	r18, 0x10	; 16
    6034:	32 e0       	ldi	r19, 0x02	; 2
    6036:	f8 01       	movw	r30, r16
    6038:	b7 fe       	sbrs	r11, 7
    603a:	07 c0       	rjmp	.+14     	; 0x604a <vfprintf+0x290>
    603c:	60 81       	ld	r22, Z
    603e:	71 81       	ldd	r23, Z+1	; 0x01
    6040:	82 81       	ldd	r24, Z+2	; 0x02
    6042:	93 81       	ldd	r25, Z+3	; 0x03
    6044:	0c 5f       	subi	r16, 0xFC	; 252
    6046:	1f 4f       	sbci	r17, 0xFF	; 255
    6048:	06 c0       	rjmp	.+12     	; 0x6056 <vfprintf+0x29c>
    604a:	60 81       	ld	r22, Z
    604c:	71 81       	ldd	r23, Z+1	; 0x01
    604e:	80 e0       	ldi	r24, 0x00	; 0
    6050:	90 e0       	ldi	r25, 0x00	; 0
    6052:	0e 5f       	subi	r16, 0xFE	; 254
    6054:	1f 4f       	sbci	r17, 0xFF	; 255
    6056:	a3 01       	movw	r20, r6
    6058:	0e 94 28 34 	call	0x6850	; 0x6850 <__ultoa_invert>
    605c:	88 2e       	mov	r8, r24
    605e:	86 18       	sub	r8, r6
    6060:	fb 2d       	mov	r31, r11
    6062:	ff 77       	andi	r31, 0x7F	; 127
    6064:	3f 2e       	mov	r3, r31
    6066:	36 fe       	sbrs	r3, 6
    6068:	0d c0       	rjmp	.+26     	; 0x6084 <vfprintf+0x2ca>
    606a:	23 2d       	mov	r18, r3
    606c:	2e 7f       	andi	r18, 0xFE	; 254
    606e:	a2 2e       	mov	r10, r18
    6070:	89 14       	cp	r8, r9
    6072:	58 f4       	brcc	.+22     	; 0x608a <vfprintf+0x2d0>
    6074:	34 fe       	sbrs	r3, 4
    6076:	0b c0       	rjmp	.+22     	; 0x608e <vfprintf+0x2d4>
    6078:	32 fc       	sbrc	r3, 2
    607a:	09 c0       	rjmp	.+18     	; 0x608e <vfprintf+0x2d4>
    607c:	83 2d       	mov	r24, r3
    607e:	8e 7e       	andi	r24, 0xEE	; 238
    6080:	a8 2e       	mov	r10, r24
    6082:	05 c0       	rjmp	.+10     	; 0x608e <vfprintf+0x2d4>
    6084:	b8 2c       	mov	r11, r8
    6086:	a3 2c       	mov	r10, r3
    6088:	03 c0       	rjmp	.+6      	; 0x6090 <vfprintf+0x2d6>
    608a:	b8 2c       	mov	r11, r8
    608c:	01 c0       	rjmp	.+2      	; 0x6090 <vfprintf+0x2d6>
    608e:	b9 2c       	mov	r11, r9
    6090:	a4 fe       	sbrs	r10, 4
    6092:	0f c0       	rjmp	.+30     	; 0x60b2 <vfprintf+0x2f8>
    6094:	fe 01       	movw	r30, r28
    6096:	e8 0d       	add	r30, r8
    6098:	f1 1d       	adc	r31, r1
    609a:	80 81       	ld	r24, Z
    609c:	80 33       	cpi	r24, 0x30	; 48
    609e:	21 f4       	brne	.+8      	; 0x60a8 <vfprintf+0x2ee>
    60a0:	9a 2d       	mov	r25, r10
    60a2:	99 7e       	andi	r25, 0xE9	; 233
    60a4:	a9 2e       	mov	r10, r25
    60a6:	09 c0       	rjmp	.+18     	; 0x60ba <vfprintf+0x300>
    60a8:	a2 fe       	sbrs	r10, 2
    60aa:	06 c0       	rjmp	.+12     	; 0x60b8 <vfprintf+0x2fe>
    60ac:	b3 94       	inc	r11
    60ae:	b3 94       	inc	r11
    60b0:	04 c0       	rjmp	.+8      	; 0x60ba <vfprintf+0x300>
    60b2:	8a 2d       	mov	r24, r10
    60b4:	86 78       	andi	r24, 0x86	; 134
    60b6:	09 f0       	breq	.+2      	; 0x60ba <vfprintf+0x300>
    60b8:	b3 94       	inc	r11
    60ba:	a3 fc       	sbrc	r10, 3
    60bc:	11 c0       	rjmp	.+34     	; 0x60e0 <vfprintf+0x326>
    60be:	a0 fe       	sbrs	r10, 0
    60c0:	06 c0       	rjmp	.+12     	; 0x60ce <vfprintf+0x314>
    60c2:	b2 14       	cp	r11, r2
    60c4:	88 f4       	brcc	.+34     	; 0x60e8 <vfprintf+0x32e>
    60c6:	28 0c       	add	r2, r8
    60c8:	92 2c       	mov	r9, r2
    60ca:	9b 18       	sub	r9, r11
    60cc:	0e c0       	rjmp	.+28     	; 0x60ea <vfprintf+0x330>
    60ce:	b2 14       	cp	r11, r2
    60d0:	60 f4       	brcc	.+24     	; 0x60ea <vfprintf+0x330>
    60d2:	b6 01       	movw	r22, r12
    60d4:	80 e2       	ldi	r24, 0x20	; 32
    60d6:	90 e0       	ldi	r25, 0x00	; 0
    60d8:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    60dc:	b3 94       	inc	r11
    60de:	f7 cf       	rjmp	.-18     	; 0x60ce <vfprintf+0x314>
    60e0:	b2 14       	cp	r11, r2
    60e2:	18 f4       	brcc	.+6      	; 0x60ea <vfprintf+0x330>
    60e4:	2b 18       	sub	r2, r11
    60e6:	02 c0       	rjmp	.+4      	; 0x60ec <vfprintf+0x332>
    60e8:	98 2c       	mov	r9, r8
    60ea:	21 2c       	mov	r2, r1
    60ec:	a4 fe       	sbrs	r10, 4
    60ee:	10 c0       	rjmp	.+32     	; 0x6110 <vfprintf+0x356>
    60f0:	b6 01       	movw	r22, r12
    60f2:	80 e3       	ldi	r24, 0x30	; 48
    60f4:	90 e0       	ldi	r25, 0x00	; 0
    60f6:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    60fa:	a2 fe       	sbrs	r10, 2
    60fc:	17 c0       	rjmp	.+46     	; 0x612c <vfprintf+0x372>
    60fe:	a1 fc       	sbrc	r10, 1
    6100:	03 c0       	rjmp	.+6      	; 0x6108 <vfprintf+0x34e>
    6102:	88 e7       	ldi	r24, 0x78	; 120
    6104:	90 e0       	ldi	r25, 0x00	; 0
    6106:	02 c0       	rjmp	.+4      	; 0x610c <vfprintf+0x352>
    6108:	88 e5       	ldi	r24, 0x58	; 88
    610a:	90 e0       	ldi	r25, 0x00	; 0
    610c:	b6 01       	movw	r22, r12
    610e:	0c c0       	rjmp	.+24     	; 0x6128 <vfprintf+0x36e>
    6110:	8a 2d       	mov	r24, r10
    6112:	86 78       	andi	r24, 0x86	; 134
    6114:	59 f0       	breq	.+22     	; 0x612c <vfprintf+0x372>
    6116:	a1 fe       	sbrs	r10, 1
    6118:	02 c0       	rjmp	.+4      	; 0x611e <vfprintf+0x364>
    611a:	8b e2       	ldi	r24, 0x2B	; 43
    611c:	01 c0       	rjmp	.+2      	; 0x6120 <vfprintf+0x366>
    611e:	80 e2       	ldi	r24, 0x20	; 32
    6120:	a7 fc       	sbrc	r10, 7
    6122:	8d e2       	ldi	r24, 0x2D	; 45
    6124:	b6 01       	movw	r22, r12
    6126:	90 e0       	ldi	r25, 0x00	; 0
    6128:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    612c:	89 14       	cp	r8, r9
    612e:	38 f4       	brcc	.+14     	; 0x613e <vfprintf+0x384>
    6130:	b6 01       	movw	r22, r12
    6132:	80 e3       	ldi	r24, 0x30	; 48
    6134:	90 e0       	ldi	r25, 0x00	; 0
    6136:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    613a:	9a 94       	dec	r9
    613c:	f7 cf       	rjmp	.-18     	; 0x612c <vfprintf+0x372>
    613e:	8a 94       	dec	r8
    6140:	f3 01       	movw	r30, r6
    6142:	e8 0d       	add	r30, r8
    6144:	f1 1d       	adc	r31, r1
    6146:	80 81       	ld	r24, Z
    6148:	b6 01       	movw	r22, r12
    614a:	90 e0       	ldi	r25, 0x00	; 0
    614c:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    6150:	81 10       	cpse	r8, r1
    6152:	f5 cf       	rjmp	.-22     	; 0x613e <vfprintf+0x384>
    6154:	22 20       	and	r2, r2
    6156:	09 f4       	brne	.+2      	; 0x615a <vfprintf+0x3a0>
    6158:	42 ce       	rjmp	.-892    	; 0x5dde <vfprintf+0x24>
    615a:	b6 01       	movw	r22, r12
    615c:	80 e2       	ldi	r24, 0x20	; 32
    615e:	90 e0       	ldi	r25, 0x00	; 0
    6160:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <fputc>
    6164:	2a 94       	dec	r2
    6166:	f6 cf       	rjmp	.-20     	; 0x6154 <vfprintf+0x39a>
    6168:	f6 01       	movw	r30, r12
    616a:	86 81       	ldd	r24, Z+6	; 0x06
    616c:	97 81       	ldd	r25, Z+7	; 0x07
    616e:	02 c0       	rjmp	.+4      	; 0x6174 <vfprintf+0x3ba>
    6170:	8f ef       	ldi	r24, 0xFF	; 255
    6172:	9f ef       	ldi	r25, 0xFF	; 255
    6174:	2b 96       	adiw	r28, 0x0b	; 11
    6176:	e2 e1       	ldi	r30, 0x12	; 18
    6178:	0c 94 a5 34 	jmp	0x694a	; 0x694a <__epilogue_restores__>

0000617c <putval>:
    617c:	20 fd       	sbrc	r18, 0
    617e:	09 c0       	rjmp	.+18     	; 0x6192 <putval+0x16>
    6180:	fc 01       	movw	r30, r24
    6182:	23 fd       	sbrc	r18, 3
    6184:	05 c0       	rjmp	.+10     	; 0x6190 <putval+0x14>
    6186:	22 ff       	sbrs	r18, 2
    6188:	02 c0       	rjmp	.+4      	; 0x618e <putval+0x12>
    618a:	73 83       	std	Z+3, r23	; 0x03
    618c:	62 83       	std	Z+2, r22	; 0x02
    618e:	51 83       	std	Z+1, r21	; 0x01
    6190:	40 83       	st	Z, r20
    6192:	08 95       	ret

00006194 <mulacc>:
    6194:	44 fd       	sbrc	r20, 4
    6196:	17 c0       	rjmp	.+46     	; 0x61c6 <mulacc+0x32>
    6198:	46 fd       	sbrc	r20, 6
    619a:	17 c0       	rjmp	.+46     	; 0x61ca <mulacc+0x36>
    619c:	ab 01       	movw	r20, r22
    619e:	bc 01       	movw	r22, r24
    61a0:	da 01       	movw	r26, r20
    61a2:	fb 01       	movw	r30, r22
    61a4:	aa 0f       	add	r26, r26
    61a6:	bb 1f       	adc	r27, r27
    61a8:	ee 1f       	adc	r30, r30
    61aa:	ff 1f       	adc	r31, r31
    61ac:	10 94       	com	r1
    61ae:	d1 f7       	brne	.-12     	; 0x61a4 <mulacc+0x10>
    61b0:	4a 0f       	add	r20, r26
    61b2:	5b 1f       	adc	r21, r27
    61b4:	6e 1f       	adc	r22, r30
    61b6:	7f 1f       	adc	r23, r31
    61b8:	cb 01       	movw	r24, r22
    61ba:	ba 01       	movw	r22, r20
    61bc:	66 0f       	add	r22, r22
    61be:	77 1f       	adc	r23, r23
    61c0:	88 1f       	adc	r24, r24
    61c2:	99 1f       	adc	r25, r25
    61c4:	09 c0       	rjmp	.+18     	; 0x61d8 <mulacc+0x44>
    61c6:	33 e0       	ldi	r19, 0x03	; 3
    61c8:	01 c0       	rjmp	.+2      	; 0x61cc <mulacc+0x38>
    61ca:	34 e0       	ldi	r19, 0x04	; 4
    61cc:	66 0f       	add	r22, r22
    61ce:	77 1f       	adc	r23, r23
    61d0:	88 1f       	adc	r24, r24
    61d2:	99 1f       	adc	r25, r25
    61d4:	31 50       	subi	r19, 0x01	; 1
    61d6:	d1 f7       	brne	.-12     	; 0x61cc <mulacc+0x38>
    61d8:	62 0f       	add	r22, r18
    61da:	71 1d       	adc	r23, r1
    61dc:	81 1d       	adc	r24, r1
    61de:	91 1d       	adc	r25, r1
    61e0:	08 95       	ret

000061e2 <skip_spaces>:
    61e2:	0f 93       	push	r16
    61e4:	1f 93       	push	r17
    61e6:	cf 93       	push	r28
    61e8:	df 93       	push	r29
    61ea:	8c 01       	movw	r16, r24
    61ec:	c8 01       	movw	r24, r16
    61ee:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    61f2:	ec 01       	movw	r28, r24
    61f4:	97 fd       	sbrc	r25, 7
    61f6:	08 c0       	rjmp	.+16     	; 0x6208 <skip_spaces+0x26>
    61f8:	0e 94 6b 33 	call	0x66d6	; 0x66d6 <isspace>
    61fc:	89 2b       	or	r24, r25
    61fe:	b1 f7       	brne	.-20     	; 0x61ec <skip_spaces+0xa>
    6200:	b8 01       	movw	r22, r16
    6202:	ce 01       	movw	r24, r28
    6204:	0e 94 0f 34 	call	0x681e	; 0x681e <ungetc>
    6208:	ce 01       	movw	r24, r28
    620a:	df 91       	pop	r29
    620c:	cf 91       	pop	r28
    620e:	1f 91       	pop	r17
    6210:	0f 91       	pop	r16
    6212:	08 95       	ret

00006214 <conv_int>:
    6214:	8f 92       	push	r8
    6216:	9f 92       	push	r9
    6218:	af 92       	push	r10
    621a:	bf 92       	push	r11
    621c:	ef 92       	push	r14
    621e:	ff 92       	push	r15
    6220:	0f 93       	push	r16
    6222:	1f 93       	push	r17
    6224:	cf 93       	push	r28
    6226:	df 93       	push	r29
    6228:	8c 01       	movw	r16, r24
    622a:	d6 2f       	mov	r29, r22
    622c:	7a 01       	movw	r14, r20
    622e:	b2 2e       	mov	r11, r18
    6230:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    6234:	9c 01       	movw	r18, r24
    6236:	33 27       	eor	r19, r19
    6238:	2b 32       	cpi	r18, 0x2B	; 43
    623a:	31 05       	cpc	r19, r1
    623c:	31 f0       	breq	.+12     	; 0x624a <conv_int+0x36>
    623e:	2d 32       	cpi	r18, 0x2D	; 45
    6240:	31 05       	cpc	r19, r1
    6242:	61 f4       	brne	.+24     	; 0x625c <conv_int+0x48>
    6244:	8b 2d       	mov	r24, r11
    6246:	80 68       	ori	r24, 0x80	; 128
    6248:	b8 2e       	mov	r11, r24
    624a:	d1 50       	subi	r29, 0x01	; 1
    624c:	11 f4       	brne	.+4      	; 0x6252 <conv_int+0x3e>
    624e:	80 e0       	ldi	r24, 0x00	; 0
    6250:	68 c0       	rjmp	.+208    	; 0x6322 <conv_int+0x10e>
    6252:	c8 01       	movw	r24, r16
    6254:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    6258:	97 fd       	sbrc	r25, 7
    625a:	f9 cf       	rjmp	.-14     	; 0x624e <conv_int+0x3a>
    625c:	cb 2d       	mov	r28, r11
    625e:	cd 7f       	andi	r28, 0xFD	; 253
    6260:	2b 2d       	mov	r18, r11
    6262:	20 73       	andi	r18, 0x30	; 48
    6264:	09 f5       	brne	.+66     	; 0x62a8 <conv_int+0x94>
    6266:	80 33       	cpi	r24, 0x30	; 48
    6268:	f9 f4       	brne	.+62     	; 0x62a8 <conv_int+0x94>
    626a:	aa 24       	eor	r10, r10
    626c:	aa 94       	dec	r10
    626e:	ad 0e       	add	r10, r29
    6270:	09 f4       	brne	.+2      	; 0x6274 <conv_int+0x60>
    6272:	43 c0       	rjmp	.+134    	; 0x62fa <conv_int+0xe6>
    6274:	c8 01       	movw	r24, r16
    6276:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    627a:	97 fd       	sbrc	r25, 7
    627c:	3e c0       	rjmp	.+124    	; 0x62fa <conv_int+0xe6>
    627e:	9c 01       	movw	r18, r24
    6280:	2f 7d       	andi	r18, 0xDF	; 223
    6282:	33 27       	eor	r19, r19
    6284:	28 35       	cpi	r18, 0x58	; 88
    6286:	31 05       	cpc	r19, r1
    6288:	49 f4       	brne	.+18     	; 0x629c <conv_int+0x88>
    628a:	c2 64       	ori	r28, 0x42	; 66
    628c:	d2 50       	subi	r29, 0x02	; 2
    628e:	a9 f1       	breq	.+106    	; 0x62fa <conv_int+0xe6>
    6290:	c8 01       	movw	r24, r16
    6292:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    6296:	97 ff       	sbrs	r25, 7
    6298:	07 c0       	rjmp	.+14     	; 0x62a8 <conv_int+0x94>
    629a:	2f c0       	rjmp	.+94     	; 0x62fa <conv_int+0xe6>
    629c:	b6 fe       	sbrs	r11, 6
    629e:	02 c0       	rjmp	.+4      	; 0x62a4 <conv_int+0x90>
    62a0:	c2 60       	ori	r28, 0x02	; 2
    62a2:	01 c0       	rjmp	.+2      	; 0x62a6 <conv_int+0x92>
    62a4:	c2 61       	ori	r28, 0x12	; 18
    62a6:	da 2d       	mov	r29, r10
    62a8:	81 2c       	mov	r8, r1
    62aa:	91 2c       	mov	r9, r1
    62ac:	54 01       	movw	r10, r8
    62ae:	20 ed       	ldi	r18, 0xD0	; 208
    62b0:	28 0f       	add	r18, r24
    62b2:	28 30       	cpi	r18, 0x08	; 8
    62b4:	80 f0       	brcs	.+32     	; 0x62d6 <conv_int+0xc2>
    62b6:	c4 ff       	sbrs	r28, 4
    62b8:	04 c0       	rjmp	.+8      	; 0x62c2 <conv_int+0xae>
    62ba:	b8 01       	movw	r22, r16
    62bc:	0e 94 0f 34 	call	0x681e	; 0x681e <ungetc>
    62c0:	19 c0       	rjmp	.+50     	; 0x62f4 <conv_int+0xe0>
    62c2:	2a 30       	cpi	r18, 0x0A	; 10
    62c4:	40 f0       	brcs	.+16     	; 0x62d6 <conv_int+0xc2>
    62c6:	c6 ff       	sbrs	r28, 6
    62c8:	f8 cf       	rjmp	.-16     	; 0x62ba <conv_int+0xa6>
    62ca:	2f 7d       	andi	r18, 0xDF	; 223
    62cc:	3f ee       	ldi	r19, 0xEF	; 239
    62ce:	32 0f       	add	r19, r18
    62d0:	36 30       	cpi	r19, 0x06	; 6
    62d2:	98 f7       	brcc	.-26     	; 0x62ba <conv_int+0xa6>
    62d4:	27 50       	subi	r18, 0x07	; 7
    62d6:	4c 2f       	mov	r20, r28
    62d8:	c5 01       	movw	r24, r10
    62da:	b4 01       	movw	r22, r8
    62dc:	0e 94 ca 30 	call	0x6194	; 0x6194 <mulacc>
    62e0:	4b 01       	movw	r8, r22
    62e2:	5c 01       	movw	r10, r24
    62e4:	c2 60       	ori	r28, 0x02	; 2
    62e6:	d1 50       	subi	r29, 0x01	; 1
    62e8:	59 f0       	breq	.+22     	; 0x6300 <conv_int+0xec>
    62ea:	c8 01       	movw	r24, r16
    62ec:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    62f0:	97 ff       	sbrs	r25, 7
    62f2:	dd cf       	rjmp	.-70     	; 0x62ae <conv_int+0x9a>
    62f4:	c1 fd       	sbrc	r28, 1
    62f6:	04 c0       	rjmp	.+8      	; 0x6300 <conv_int+0xec>
    62f8:	aa cf       	rjmp	.-172    	; 0x624e <conv_int+0x3a>
    62fa:	81 2c       	mov	r8, r1
    62fc:	91 2c       	mov	r9, r1
    62fe:	54 01       	movw	r10, r8
    6300:	c7 ff       	sbrs	r28, 7
    6302:	08 c0       	rjmp	.+16     	; 0x6314 <conv_int+0x100>
    6304:	b0 94       	com	r11
    6306:	a0 94       	com	r10
    6308:	90 94       	com	r9
    630a:	80 94       	com	r8
    630c:	81 1c       	adc	r8, r1
    630e:	91 1c       	adc	r9, r1
    6310:	a1 1c       	adc	r10, r1
    6312:	b1 1c       	adc	r11, r1
    6314:	2c 2f       	mov	r18, r28
    6316:	b5 01       	movw	r22, r10
    6318:	a4 01       	movw	r20, r8
    631a:	c7 01       	movw	r24, r14
    631c:	0e 94 be 30 	call	0x617c	; 0x617c <putval>
    6320:	81 e0       	ldi	r24, 0x01	; 1
    6322:	df 91       	pop	r29
    6324:	cf 91       	pop	r28
    6326:	1f 91       	pop	r17
    6328:	0f 91       	pop	r16
    632a:	ff 90       	pop	r15
    632c:	ef 90       	pop	r14
    632e:	bf 90       	pop	r11
    6330:	af 90       	pop	r10
    6332:	9f 90       	pop	r9
    6334:	8f 90       	pop	r8
    6336:	08 95       	ret

00006338 <conv_brk>:
    6338:	a0 e2       	ldi	r26, 0x20	; 32
    633a:	b0 e0       	ldi	r27, 0x00	; 0
    633c:	e2 ea       	ldi	r30, 0xA2	; 162
    633e:	f1 e3       	ldi	r31, 0x31	; 49
    6340:	0c 94 8c 34 	jmp	0x6918	; 0x6918 <__prologue_saves__+0x6>
    6344:	5c 01       	movw	r10, r24
    6346:	96 2e       	mov	r9, r22
    6348:	7a 01       	movw	r14, r20
    634a:	f9 01       	movw	r30, r18
    634c:	8e 01       	movw	r16, r28
    634e:	0f 5f       	subi	r16, 0xFF	; 255
    6350:	1f 4f       	sbci	r17, 0xFF	; 255
    6352:	68 01       	movw	r12, r16
    6354:	80 e2       	ldi	r24, 0x20	; 32
    6356:	d8 01       	movw	r26, r16
    6358:	1d 92       	st	X+, r1
    635a:	8a 95       	dec	r24
    635c:	e9 f7       	brne	.-6      	; 0x6358 <conv_brk+0x20>
    635e:	d5 01       	movw	r26, r10
    6360:	13 96       	adiw	r26, 0x03	; 3
    6362:	8c 90       	ld	r8, X
    6364:	80 e0       	ldi	r24, 0x00	; 0
    6366:	90 e0       	ldi	r25, 0x00	; 0
    6368:	61 2c       	mov	r6, r1
    636a:	71 2c       	mov	r7, r1
    636c:	30 e0       	ldi	r19, 0x00	; 0
    636e:	61 e0       	ldi	r22, 0x01	; 1
    6370:	70 e0       	ldi	r23, 0x00	; 0
    6372:	83 fc       	sbrc	r8, 3
    6374:	25 91       	lpm	r18, Z+
    6376:	83 fe       	sbrs	r8, 3
    6378:	21 91       	ld	r18, Z+
    637a:	8f 01       	movw	r16, r30
    637c:	52 2e       	mov	r5, r18
    637e:	21 11       	cpse	r18, r1
    6380:	03 c0       	rjmp	.+6      	; 0x6388 <conv_brk+0x50>
    6382:	80 e0       	ldi	r24, 0x00	; 0
    6384:	90 e0       	ldi	r25, 0x00	; 0
    6386:	92 c0       	rjmp	.+292    	; 0x64ac <conv_brk+0x174>
    6388:	2e 35       	cpi	r18, 0x5E	; 94
    638a:	11 f4       	brne	.+4      	; 0x6390 <conv_brk+0x58>
    638c:	00 97       	sbiw	r24, 0x00	; 0
    638e:	51 f1       	breq	.+84     	; 0x63e4 <conv_brk+0xac>
    6390:	43 2f       	mov	r20, r19
    6392:	50 e0       	ldi	r21, 0x00	; 0
    6394:	48 17       	cp	r20, r24
    6396:	59 07       	cpc	r21, r25
    6398:	3c f4       	brge	.+14     	; 0x63a8 <conv_brk+0x70>
    639a:	2d 35       	cpi	r18, 0x5D	; 93
    639c:	59 f1       	breq	.+86     	; 0x63f4 <conv_brk+0xbc>
    639e:	2d 32       	cpi	r18, 0x2D	; 45
    63a0:	19 f4       	brne	.+6      	; 0x63a8 <conv_brk+0x70>
    63a2:	77 20       	and	r7, r7
    63a4:	09 f1       	breq	.+66     	; 0x63e8 <conv_brk+0xb0>
    63a6:	03 c0       	rjmp	.+6      	; 0x63ae <conv_brk+0x76>
    63a8:	77 20       	and	r7, r7
    63aa:	09 f4       	brne	.+2      	; 0x63ae <conv_brk+0x76>
    63ac:	6a c0       	rjmp	.+212    	; 0x6482 <conv_brk+0x14a>
    63ae:	45 2d       	mov	r20, r5
    63b0:	46 95       	lsr	r20
    63b2:	46 95       	lsr	r20
    63b4:	46 95       	lsr	r20
    63b6:	d6 01       	movw	r26, r12
    63b8:	a4 0f       	add	r26, r20
    63ba:	b1 1d       	adc	r27, r1
    63bc:	45 2d       	mov	r20, r5
    63be:	47 70       	andi	r20, 0x07	; 7
    63c0:	8b 01       	movw	r16, r22
    63c2:	02 c0       	rjmp	.+4      	; 0x63c8 <conv_brk+0x90>
    63c4:	00 0f       	add	r16, r16
    63c6:	11 1f       	adc	r17, r17
    63c8:	4a 95       	dec	r20
    63ca:	e2 f7       	brpl	.-8      	; 0x63c4 <conv_brk+0x8c>
    63cc:	a8 01       	movw	r20, r16
    63ce:	5c 91       	ld	r21, X
    63d0:	45 2b       	or	r20, r21
    63d2:	4c 93       	st	X, r20
    63d4:	65 14       	cp	r6, r5
    63d6:	59 f0       	breq	.+22     	; 0x63ee <conv_brk+0xb6>
    63d8:	56 14       	cp	r5, r6
    63da:	10 f4       	brcc	.+4      	; 0x63e0 <conv_brk+0xa8>
    63dc:	53 94       	inc	r5
    63de:	e7 cf       	rjmp	.-50     	; 0x63ae <conv_brk+0x76>
    63e0:	5a 94       	dec	r5
    63e2:	e5 cf       	rjmp	.-54     	; 0x63ae <conv_brk+0x76>
    63e4:	31 e0       	ldi	r19, 0x01	; 1
    63e6:	04 c0       	rjmp	.+8      	; 0x63f0 <conv_brk+0xb8>
    63e8:	77 24       	eor	r7, r7
    63ea:	73 94       	inc	r7
    63ec:	01 c0       	rjmp	.+2      	; 0x63f0 <conv_brk+0xb8>
    63ee:	71 2c       	mov	r7, r1
    63f0:	01 96       	adiw	r24, 0x01	; 1
    63f2:	bf cf       	rjmp	.-130    	; 0x6372 <conv_brk+0x3a>
    63f4:	77 20       	and	r7, r7
    63f6:	19 f0       	breq	.+6      	; 0x63fe <conv_brk+0xc6>
    63f8:	8e 81       	ldd	r24, Y+6	; 0x06
    63fa:	80 62       	ori	r24, 0x20	; 32
    63fc:	8e 83       	std	Y+6, r24	; 0x06
    63fe:	31 11       	cpse	r19, r1
    6400:	03 c0       	rjmp	.+6      	; 0x6408 <conv_brk+0xd0>
    6402:	88 24       	eor	r8, r8
    6404:	83 94       	inc	r8
    6406:	17 c0       	rjmp	.+46     	; 0x6436 <conv_brk+0xfe>
    6408:	f6 01       	movw	r30, r12
    640a:	9e 01       	movw	r18, r28
    640c:	2f 5d       	subi	r18, 0xDF	; 223
    640e:	3f 4f       	sbci	r19, 0xFF	; 255
    6410:	80 81       	ld	r24, Z
    6412:	80 95       	com	r24
    6414:	81 93       	st	Z+, r24
    6416:	2e 17       	cp	r18, r30
    6418:	3f 07       	cpc	r19, r31
    641a:	d1 f7       	brne	.-12     	; 0x6410 <conv_brk+0xd8>
    641c:	f2 cf       	rjmp	.-28     	; 0x6402 <conv_brk+0xca>
    641e:	e1 14       	cp	r14, r1
    6420:	f1 04       	cpc	r15, r1
    6422:	29 f0       	breq	.+10     	; 0x642e <conv_brk+0xf6>
    6424:	d7 01       	movw	r26, r14
    6426:	8c 93       	st	X, r24
    6428:	f7 01       	movw	r30, r14
    642a:	31 96       	adiw	r30, 0x01	; 1
    642c:	7f 01       	movw	r14, r30
    642e:	9a 94       	dec	r9
    6430:	81 2c       	mov	r8, r1
    6432:	99 20       	and	r9, r9
    6434:	f9 f0       	breq	.+62     	; 0x6474 <conv_brk+0x13c>
    6436:	c5 01       	movw	r24, r10
    6438:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    643c:	97 fd       	sbrc	r25, 7
    643e:	18 c0       	rjmp	.+48     	; 0x6470 <conv_brk+0x138>
    6440:	fc 01       	movw	r30, r24
    6442:	ff 27       	eor	r31, r31
    6444:	23 e0       	ldi	r18, 0x03	; 3
    6446:	f5 95       	asr	r31
    6448:	e7 95       	ror	r30
    644a:	2a 95       	dec	r18
    644c:	e1 f7       	brne	.-8      	; 0x6446 <conv_brk+0x10e>
    644e:	ec 0d       	add	r30, r12
    6450:	fd 1d       	adc	r31, r13
    6452:	20 81       	ld	r18, Z
    6454:	30 e0       	ldi	r19, 0x00	; 0
    6456:	ac 01       	movw	r20, r24
    6458:	47 70       	andi	r20, 0x07	; 7
    645a:	55 27       	eor	r21, r21
    645c:	02 c0       	rjmp	.+4      	; 0x6462 <conv_brk+0x12a>
    645e:	35 95       	asr	r19
    6460:	27 95       	ror	r18
    6462:	4a 95       	dec	r20
    6464:	e2 f7       	brpl	.-8      	; 0x645e <conv_brk+0x126>
    6466:	20 fd       	sbrc	r18, 0
    6468:	da cf       	rjmp	.-76     	; 0x641e <conv_brk+0xe6>
    646a:	b5 01       	movw	r22, r10
    646c:	0e 94 0f 34 	call	0x681e	; 0x681e <ungetc>
    6470:	81 10       	cpse	r8, r1
    6472:	87 cf       	rjmp	.-242    	; 0x6382 <conv_brk+0x4a>
    6474:	e1 14       	cp	r14, r1
    6476:	f1 04       	cpc	r15, r1
    6478:	11 f0       	breq	.+4      	; 0x647e <conv_brk+0x146>
    647a:	d7 01       	movw	r26, r14
    647c:	1c 92       	st	X, r1
    647e:	c8 01       	movw	r24, r16
    6480:	15 c0       	rjmp	.+42     	; 0x64ac <conv_brk+0x174>
    6482:	42 2f       	mov	r20, r18
    6484:	46 95       	lsr	r20
    6486:	46 95       	lsr	r20
    6488:	46 95       	lsr	r20
    648a:	d6 01       	movw	r26, r12
    648c:	a4 0f       	add	r26, r20
    648e:	b1 1d       	adc	r27, r1
    6490:	42 2f       	mov	r20, r18
    6492:	47 70       	andi	r20, 0x07	; 7
    6494:	8b 01       	movw	r16, r22
    6496:	02 c0       	rjmp	.+4      	; 0x649c <conv_brk+0x164>
    6498:	00 0f       	add	r16, r16
    649a:	11 1f       	adc	r17, r17
    649c:	4a 95       	dec	r20
    649e:	e2 f7       	brpl	.-8      	; 0x6498 <conv_brk+0x160>
    64a0:	a8 01       	movw	r20, r16
    64a2:	5c 91       	ld	r21, X
    64a4:	45 2b       	or	r20, r21
    64a6:	4c 93       	st	X, r20
    64a8:	62 2e       	mov	r6, r18
    64aa:	a2 cf       	rjmp	.-188    	; 0x63f0 <conv_brk+0xb8>
    64ac:	a0 96       	adiw	r28, 0x20	; 32
    64ae:	ef e0       	ldi	r30, 0x0F	; 15
    64b0:	0c 94 a8 34 	jmp	0x6950	; 0x6950 <__epilogue_restores__+0x6>

000064b4 <vfscanf>:
    64b4:	a0 e0       	ldi	r26, 0x00	; 0
    64b6:	b0 e0       	ldi	r27, 0x00	; 0
    64b8:	e0 e6       	ldi	r30, 0x60	; 96
    64ba:	f2 e3       	ldi	r31, 0x32	; 50
    64bc:	0c 94 8c 34 	jmp	0x6918	; 0x6918 <__prologue_saves__+0x6>
    64c0:	6c 01       	movw	r12, r24
    64c2:	eb 01       	movw	r28, r22
    64c4:	5a 01       	movw	r10, r20
    64c6:	fc 01       	movw	r30, r24
    64c8:	17 82       	std	Z+7, r1	; 0x07
    64ca:	16 82       	std	Z+6, r1	; 0x06
    64cc:	51 2c       	mov	r5, r1
    64ce:	f6 01       	movw	r30, r12
    64d0:	e3 80       	ldd	r14, Z+3	; 0x03
    64d2:	fe 01       	movw	r30, r28
    64d4:	e3 fc       	sbrc	r14, 3
    64d6:	85 91       	lpm	r24, Z+
    64d8:	e3 fe       	sbrs	r14, 3
    64da:	81 91       	ld	r24, Z+
    64dc:	18 2f       	mov	r17, r24
    64de:	ef 01       	movw	r28, r30
    64e0:	88 23       	and	r24, r24
    64e2:	09 f4       	brne	.+2      	; 0x64e6 <vfscanf+0x32>
    64e4:	ee c0       	rjmp	.+476    	; 0x66c2 <vfscanf+0x20e>
    64e6:	90 e0       	ldi	r25, 0x00	; 0
    64e8:	0e 94 6b 33 	call	0x66d6	; 0x66d6 <isspace>
    64ec:	89 2b       	or	r24, r25
    64ee:	21 f0       	breq	.+8      	; 0x64f8 <vfscanf+0x44>
    64f0:	c6 01       	movw	r24, r12
    64f2:	0e 94 f1 30 	call	0x61e2	; 0x61e2 <skip_spaces>
    64f6:	eb cf       	rjmp	.-42     	; 0x64ce <vfscanf+0x1a>
    64f8:	15 32       	cpi	r17, 0x25	; 37
    64fa:	41 f4       	brne	.+16     	; 0x650c <vfscanf+0x58>
    64fc:	fe 01       	movw	r30, r28
    64fe:	e3 fc       	sbrc	r14, 3
    6500:	15 91       	lpm	r17, Z+
    6502:	e3 fe       	sbrs	r14, 3
    6504:	11 91       	ld	r17, Z+
    6506:	ef 01       	movw	r28, r30
    6508:	15 32       	cpi	r17, 0x25	; 37
    650a:	81 f4       	brne	.+32     	; 0x652c <vfscanf+0x78>
    650c:	c6 01       	movw	r24, r12
    650e:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    6512:	97 fd       	sbrc	r25, 7
    6514:	d4 c0       	rjmp	.+424    	; 0x66be <vfscanf+0x20a>
    6516:	41 2f       	mov	r20, r17
    6518:	50 e0       	ldi	r21, 0x00	; 0
    651a:	9c 01       	movw	r18, r24
    651c:	33 27       	eor	r19, r19
    651e:	24 17       	cp	r18, r20
    6520:	35 07       	cpc	r19, r21
    6522:	a9 f2       	breq	.-86     	; 0x64ce <vfscanf+0x1a>
    6524:	b6 01       	movw	r22, r12
    6526:	0e 94 0f 34 	call	0x681e	; 0x681e <ungetc>
    652a:	cb c0       	rjmp	.+406    	; 0x66c2 <vfscanf+0x20e>
    652c:	1a 32       	cpi	r17, 0x2A	; 42
    652e:	39 f4       	brne	.+14     	; 0x653e <vfscanf+0x8a>
    6530:	e3 fc       	sbrc	r14, 3
    6532:	15 91       	lpm	r17, Z+
    6534:	e3 fe       	sbrs	r14, 3
    6536:	11 91       	ld	r17, Z+
    6538:	ef 01       	movw	r28, r30
    653a:	01 e0       	ldi	r16, 0x01	; 1
    653c:	01 c0       	rjmp	.+2      	; 0x6540 <vfscanf+0x8c>
    653e:	00 e0       	ldi	r16, 0x00	; 0
    6540:	f1 2c       	mov	r15, r1
    6542:	20 ed       	ldi	r18, 0xD0	; 208
    6544:	21 0f       	add	r18, r17
    6546:	2a 30       	cpi	r18, 0x0A	; 10
    6548:	80 f4       	brcc	.+32     	; 0x656a <vfscanf+0xb6>
    654a:	02 60       	ori	r16, 0x02	; 2
    654c:	6f 2d       	mov	r22, r15
    654e:	70 e0       	ldi	r23, 0x00	; 0
    6550:	80 e0       	ldi	r24, 0x00	; 0
    6552:	90 e0       	ldi	r25, 0x00	; 0
    6554:	40 e2       	ldi	r20, 0x20	; 32
    6556:	0e 94 ca 30 	call	0x6194	; 0x6194 <mulacc>
    655a:	f6 2e       	mov	r15, r22
    655c:	fe 01       	movw	r30, r28
    655e:	e3 fc       	sbrc	r14, 3
    6560:	15 91       	lpm	r17, Z+
    6562:	e3 fe       	sbrs	r14, 3
    6564:	11 91       	ld	r17, Z+
    6566:	ef 01       	movw	r28, r30
    6568:	ec cf       	rjmp	.-40     	; 0x6542 <vfscanf+0x8e>
    656a:	01 ff       	sbrs	r16, 1
    656c:	03 c0       	rjmp	.+6      	; 0x6574 <vfscanf+0xc0>
    656e:	f1 10       	cpse	r15, r1
    6570:	03 c0       	rjmp	.+6      	; 0x6578 <vfscanf+0xc4>
    6572:	a7 c0       	rjmp	.+334    	; 0x66c2 <vfscanf+0x20e>
    6574:	ff 24       	eor	r15, r15
    6576:	fa 94       	dec	r15
    6578:	18 36       	cpi	r17, 0x68	; 104
    657a:	19 f0       	breq	.+6      	; 0x6582 <vfscanf+0xce>
    657c:	1c 36       	cpi	r17, 0x6C	; 108
    657e:	51 f0       	breq	.+20     	; 0x6594 <vfscanf+0xe0>
    6580:	10 c0       	rjmp	.+32     	; 0x65a2 <vfscanf+0xee>
    6582:	fe 01       	movw	r30, r28
    6584:	e3 fc       	sbrc	r14, 3
    6586:	15 91       	lpm	r17, Z+
    6588:	e3 fe       	sbrs	r14, 3
    658a:	11 91       	ld	r17, Z+
    658c:	ef 01       	movw	r28, r30
    658e:	18 36       	cpi	r17, 0x68	; 104
    6590:	41 f4       	brne	.+16     	; 0x65a2 <vfscanf+0xee>
    6592:	08 60       	ori	r16, 0x08	; 8
    6594:	04 60       	ori	r16, 0x04	; 4
    6596:	fe 01       	movw	r30, r28
    6598:	e3 fc       	sbrc	r14, 3
    659a:	15 91       	lpm	r17, Z+
    659c:	e3 fe       	sbrs	r14, 3
    659e:	11 91       	ld	r17, Z+
    65a0:	ef 01       	movw	r28, r30
    65a2:	11 23       	and	r17, r17
    65a4:	09 f4       	brne	.+2      	; 0x65a8 <vfscanf+0xf4>
    65a6:	8d c0       	rjmp	.+282    	; 0x66c2 <vfscanf+0x20e>
    65a8:	61 2f       	mov	r22, r17
    65aa:	70 e0       	ldi	r23, 0x00	; 0
    65ac:	8a e7       	ldi	r24, 0x7A	; 122
    65ae:	90 e0       	ldi	r25, 0x00	; 0
    65b0:	0e 94 74 33 	call	0x66e8	; 0x66e8 <strchr_P>
    65b4:	89 2b       	or	r24, r25
    65b6:	09 f4       	brne	.+2      	; 0x65ba <vfscanf+0x106>
    65b8:	84 c0       	rjmp	.+264    	; 0x66c2 <vfscanf+0x20e>
    65ba:	00 fd       	sbrc	r16, 0
    65bc:	07 c0       	rjmp	.+14     	; 0x65cc <vfscanf+0x118>
    65be:	f5 01       	movw	r30, r10
    65c0:	80 80       	ld	r8, Z
    65c2:	91 80       	ldd	r9, Z+1	; 0x01
    65c4:	c5 01       	movw	r24, r10
    65c6:	02 96       	adiw	r24, 0x02	; 2
    65c8:	5c 01       	movw	r10, r24
    65ca:	02 c0       	rjmp	.+4      	; 0x65d0 <vfscanf+0x11c>
    65cc:	81 2c       	mov	r8, r1
    65ce:	91 2c       	mov	r9, r1
    65d0:	1e 36       	cpi	r17, 0x6E	; 110
    65d2:	51 f4       	brne	.+20     	; 0x65e8 <vfscanf+0x134>
    65d4:	f6 01       	movw	r30, r12
    65d6:	46 81       	ldd	r20, Z+6	; 0x06
    65d8:	57 81       	ldd	r21, Z+7	; 0x07
    65da:	60 e0       	ldi	r22, 0x00	; 0
    65dc:	70 e0       	ldi	r23, 0x00	; 0
    65de:	20 2f       	mov	r18, r16
    65e0:	c4 01       	movw	r24, r8
    65e2:	0e 94 be 30 	call	0x617c	; 0x617c <putval>
    65e6:	73 cf       	rjmp	.-282    	; 0x64ce <vfscanf+0x1a>
    65e8:	13 36       	cpi	r17, 0x63	; 99
    65ea:	a9 f4       	brne	.+42     	; 0x6616 <vfscanf+0x162>
    65ec:	01 fd       	sbrc	r16, 1
    65ee:	02 c0       	rjmp	.+4      	; 0x65f4 <vfscanf+0x140>
    65f0:	ff 24       	eor	r15, r15
    65f2:	f3 94       	inc	r15
    65f4:	c6 01       	movw	r24, r12
    65f6:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    65fa:	97 fd       	sbrc	r25, 7
    65fc:	60 c0       	rjmp	.+192    	; 0x66be <vfscanf+0x20a>
    65fe:	81 14       	cp	r8, r1
    6600:	91 04       	cpc	r9, r1
    6602:	29 f0       	breq	.+10     	; 0x660e <vfscanf+0x15a>
    6604:	f4 01       	movw	r30, r8
    6606:	80 83       	st	Z, r24
    6608:	c4 01       	movw	r24, r8
    660a:	01 96       	adiw	r24, 0x01	; 1
    660c:	4c 01       	movw	r8, r24
    660e:	fa 94       	dec	r15
    6610:	f1 10       	cpse	r15, r1
    6612:	f0 cf       	rjmp	.-32     	; 0x65f4 <vfscanf+0x140>
    6614:	50 c0       	rjmp	.+160    	; 0x66b6 <vfscanf+0x202>
    6616:	1b 35       	cpi	r17, 0x5B	; 91
    6618:	59 f4       	brne	.+22     	; 0x6630 <vfscanf+0x17c>
    661a:	9e 01       	movw	r18, r28
    661c:	a4 01       	movw	r20, r8
    661e:	6f 2d       	mov	r22, r15
    6620:	c6 01       	movw	r24, r12
    6622:	0e 94 9c 31 	call	0x6338	; 0x6338 <conv_brk>
    6626:	ec 01       	movw	r28, r24
    6628:	89 2b       	or	r24, r25
    662a:	09 f0       	breq	.+2      	; 0x662e <vfscanf+0x17a>
    662c:	44 c0       	rjmp	.+136    	; 0x66b6 <vfscanf+0x202>
    662e:	3e c0       	rjmp	.+124    	; 0x66ac <vfscanf+0x1f8>
    6630:	c6 01       	movw	r24, r12
    6632:	0e 94 f1 30 	call	0x61e2	; 0x61e2 <skip_spaces>
    6636:	97 fd       	sbrc	r25, 7
    6638:	42 c0       	rjmp	.+132    	; 0x66be <vfscanf+0x20a>
    663a:	1f 36       	cpi	r17, 0x6F	; 111
    663c:	61 f1       	breq	.+88     	; 0x6696 <vfscanf+0x1e2>
    663e:	28 f4       	brcc	.+10     	; 0x664a <vfscanf+0x196>
    6640:	14 36       	cpi	r17, 0x64	; 100
    6642:	39 f1       	breq	.+78     	; 0x6692 <vfscanf+0x1de>
    6644:	19 36       	cpi	r17, 0x69	; 105
    6646:	51 f1       	breq	.+84     	; 0x669c <vfscanf+0x1e8>
    6648:	28 c0       	rjmp	.+80     	; 0x669a <vfscanf+0x1e6>
    664a:	13 37       	cpi	r17, 0x73	; 115
    664c:	71 f0       	breq	.+28     	; 0x666a <vfscanf+0x1b6>
    664e:	15 37       	cpi	r17, 0x75	; 117
    6650:	01 f1       	breq	.+64     	; 0x6692 <vfscanf+0x1de>
    6652:	23 c0       	rjmp	.+70     	; 0x669a <vfscanf+0x1e6>
    6654:	81 14       	cp	r8, r1
    6656:	91 04       	cpc	r9, r1
    6658:	29 f0       	breq	.+10     	; 0x6664 <vfscanf+0x1b0>
    665a:	f4 01       	movw	r30, r8
    665c:	60 82       	st	Z, r6
    665e:	c4 01       	movw	r24, r8
    6660:	01 96       	adiw	r24, 0x01	; 1
    6662:	4c 01       	movw	r8, r24
    6664:	fa 94       	dec	r15
    6666:	ff 20       	and	r15, r15
    6668:	71 f0       	breq	.+28     	; 0x6686 <vfscanf+0x1d2>
    666a:	c6 01       	movw	r24, r12
    666c:	0e 94 95 33 	call	0x672a	; 0x672a <fgetc>
    6670:	3c 01       	movw	r6, r24
    6672:	97 fd       	sbrc	r25, 7
    6674:	08 c0       	rjmp	.+16     	; 0x6686 <vfscanf+0x1d2>
    6676:	0e 94 6b 33 	call	0x66d6	; 0x66d6 <isspace>
    667a:	89 2b       	or	r24, r25
    667c:	59 f3       	breq	.-42     	; 0x6654 <vfscanf+0x1a0>
    667e:	b6 01       	movw	r22, r12
    6680:	c3 01       	movw	r24, r6
    6682:	0e 94 0f 34 	call	0x681e	; 0x681e <ungetc>
    6686:	81 14       	cp	r8, r1
    6688:	91 04       	cpc	r9, r1
    668a:	a9 f0       	breq	.+42     	; 0x66b6 <vfscanf+0x202>
    668c:	f4 01       	movw	r30, r8
    668e:	10 82       	st	Z, r1
    6690:	12 c0       	rjmp	.+36     	; 0x66b6 <vfscanf+0x202>
    6692:	00 62       	ori	r16, 0x20	; 32
    6694:	03 c0       	rjmp	.+6      	; 0x669c <vfscanf+0x1e8>
    6696:	00 61       	ori	r16, 0x10	; 16
    6698:	01 c0       	rjmp	.+2      	; 0x669c <vfscanf+0x1e8>
    669a:	00 64       	ori	r16, 0x40	; 64
    669c:	20 2f       	mov	r18, r16
    669e:	a4 01       	movw	r20, r8
    66a0:	6f 2d       	mov	r22, r15
    66a2:	c6 01       	movw	r24, r12
    66a4:	0e 94 0a 31 	call	0x6214	; 0x6214 <conv_int>
    66a8:	81 11       	cpse	r24, r1
    66aa:	05 c0       	rjmp	.+10     	; 0x66b6 <vfscanf+0x202>
    66ac:	f6 01       	movw	r30, r12
    66ae:	83 81       	ldd	r24, Z+3	; 0x03
    66b0:	80 73       	andi	r24, 0x30	; 48
    66b2:	29 f4       	brne	.+10     	; 0x66be <vfscanf+0x20a>
    66b4:	06 c0       	rjmp	.+12     	; 0x66c2 <vfscanf+0x20e>
    66b6:	00 fd       	sbrc	r16, 0
    66b8:	0a cf       	rjmp	.-492    	; 0x64ce <vfscanf+0x1a>
    66ba:	53 94       	inc	r5
    66bc:	08 cf       	rjmp	.-496    	; 0x64ce <vfscanf+0x1a>
    66be:	55 20       	and	r5, r5
    66c0:	19 f0       	breq	.+6      	; 0x66c8 <vfscanf+0x214>
    66c2:	85 2d       	mov	r24, r5
    66c4:	90 e0       	ldi	r25, 0x00	; 0
    66c6:	02 c0       	rjmp	.+4      	; 0x66cc <vfscanf+0x218>
    66c8:	8f ef       	ldi	r24, 0xFF	; 255
    66ca:	9f ef       	ldi	r25, 0xFF	; 255
    66cc:	cd b7       	in	r28, 0x3d	; 61
    66ce:	de b7       	in	r29, 0x3e	; 62
    66d0:	ef e0       	ldi	r30, 0x0F	; 15
    66d2:	0c 94 a8 34 	jmp	0x6950	; 0x6950 <__epilogue_restores__+0x6>

000066d6 <isspace>:
    66d6:	91 11       	cpse	r25, r1
    66d8:	0c 94 86 34 	jmp	0x690c	; 0x690c <__ctype_isfalse>
    66dc:	80 32       	cpi	r24, 0x20	; 32
    66de:	19 f0       	breq	.+6      	; 0x66e6 <isspace+0x10>
    66e0:	89 50       	subi	r24, 0x09	; 9
    66e2:	85 50       	subi	r24, 0x05	; 5
    66e4:	c8 f7       	brcc	.-14     	; 0x66d8 <isspace+0x2>
    66e6:	08 95       	ret

000066e8 <strchr_P>:
    66e8:	fc 01       	movw	r30, r24
    66ea:	05 90       	lpm	r0, Z+
    66ec:	06 16       	cp	r0, r22
    66ee:	21 f0       	breq	.+8      	; 0x66f8 <strchr_P+0x10>
    66f0:	00 20       	and	r0, r0
    66f2:	d9 f7       	brne	.-10     	; 0x66ea <strchr_P+0x2>
    66f4:	c0 01       	movw	r24, r0
    66f6:	08 95       	ret
    66f8:	31 97       	sbiw	r30, 0x01	; 1
    66fa:	cf 01       	movw	r24, r30
    66fc:	08 95       	ret

000066fe <strnlen_P>:
    66fe:	fc 01       	movw	r30, r24
    6700:	05 90       	lpm	r0, Z+
    6702:	61 50       	subi	r22, 0x01	; 1
    6704:	70 40       	sbci	r23, 0x00	; 0
    6706:	01 10       	cpse	r0, r1
    6708:	d8 f7       	brcc	.-10     	; 0x6700 <strnlen_P+0x2>
    670a:	80 95       	com	r24
    670c:	90 95       	com	r25
    670e:	8e 0f       	add	r24, r30
    6710:	9f 1f       	adc	r25, r31
    6712:	08 95       	ret

00006714 <strnlen>:
    6714:	fc 01       	movw	r30, r24
    6716:	61 50       	subi	r22, 0x01	; 1
    6718:	70 40       	sbci	r23, 0x00	; 0
    671a:	01 90       	ld	r0, Z+
    671c:	01 10       	cpse	r0, r1
    671e:	d8 f7       	brcc	.-10     	; 0x6716 <strnlen+0x2>
    6720:	80 95       	com	r24
    6722:	90 95       	com	r25
    6724:	8e 0f       	add	r24, r30
    6726:	9f 1f       	adc	r25, r31
    6728:	08 95       	ret

0000672a <fgetc>:
    672a:	cf 93       	push	r28
    672c:	df 93       	push	r29
    672e:	ec 01       	movw	r28, r24
    6730:	2b 81       	ldd	r18, Y+3	; 0x03
    6732:	20 ff       	sbrs	r18, 0
    6734:	33 c0       	rjmp	.+102    	; 0x679c <fgetc+0x72>
    6736:	26 ff       	sbrs	r18, 6
    6738:	0a c0       	rjmp	.+20     	; 0x674e <fgetc+0x24>
    673a:	2f 7b       	andi	r18, 0xBF	; 191
    673c:	2b 83       	std	Y+3, r18	; 0x03
    673e:	8e 81       	ldd	r24, Y+6	; 0x06
    6740:	9f 81       	ldd	r25, Y+7	; 0x07
    6742:	01 96       	adiw	r24, 0x01	; 1
    6744:	9f 83       	std	Y+7, r25	; 0x07
    6746:	8e 83       	std	Y+6, r24	; 0x06
    6748:	8a 81       	ldd	r24, Y+2	; 0x02
    674a:	90 e0       	ldi	r25, 0x00	; 0
    674c:	29 c0       	rjmp	.+82     	; 0x67a0 <fgetc+0x76>
    674e:	22 ff       	sbrs	r18, 2
    6750:	0f c0       	rjmp	.+30     	; 0x6770 <fgetc+0x46>
    6752:	e8 81       	ld	r30, Y
    6754:	f9 81       	ldd	r31, Y+1	; 0x01
    6756:	80 81       	ld	r24, Z
    6758:	08 2e       	mov	r0, r24
    675a:	00 0c       	add	r0, r0
    675c:	99 0b       	sbc	r25, r25
    675e:	00 97       	sbiw	r24, 0x00	; 0
    6760:	19 f4       	brne	.+6      	; 0x6768 <fgetc+0x3e>
    6762:	20 62       	ori	r18, 0x20	; 32
    6764:	2b 83       	std	Y+3, r18	; 0x03
    6766:	1a c0       	rjmp	.+52     	; 0x679c <fgetc+0x72>
    6768:	31 96       	adiw	r30, 0x01	; 1
    676a:	f9 83       	std	Y+1, r31	; 0x01
    676c:	e8 83       	st	Y, r30
    676e:	0e c0       	rjmp	.+28     	; 0x678c <fgetc+0x62>
    6770:	ea 85       	ldd	r30, Y+10	; 0x0a
    6772:	fb 85       	ldd	r31, Y+11	; 0x0b
    6774:	09 95       	icall
    6776:	97 ff       	sbrs	r25, 7
    6778:	09 c0       	rjmp	.+18     	; 0x678c <fgetc+0x62>
    677a:	2b 81       	ldd	r18, Y+3	; 0x03
    677c:	01 96       	adiw	r24, 0x01	; 1
    677e:	11 f0       	breq	.+4      	; 0x6784 <fgetc+0x5a>
    6780:	80 e2       	ldi	r24, 0x20	; 32
    6782:	01 c0       	rjmp	.+2      	; 0x6786 <fgetc+0x5c>
    6784:	80 e1       	ldi	r24, 0x10	; 16
    6786:	82 2b       	or	r24, r18
    6788:	8b 83       	std	Y+3, r24	; 0x03
    678a:	08 c0       	rjmp	.+16     	; 0x679c <fgetc+0x72>
    678c:	2e 81       	ldd	r18, Y+6	; 0x06
    678e:	3f 81       	ldd	r19, Y+7	; 0x07
    6790:	2f 5f       	subi	r18, 0xFF	; 255
    6792:	3f 4f       	sbci	r19, 0xFF	; 255
    6794:	3f 83       	std	Y+7, r19	; 0x07
    6796:	2e 83       	std	Y+6, r18	; 0x06
    6798:	99 27       	eor	r25, r25
    679a:	02 c0       	rjmp	.+4      	; 0x67a0 <fgetc+0x76>
    679c:	8f ef       	ldi	r24, 0xFF	; 255
    679e:	9f ef       	ldi	r25, 0xFF	; 255
    67a0:	df 91       	pop	r29
    67a2:	cf 91       	pop	r28
    67a4:	08 95       	ret

000067a6 <fputc>:
    67a6:	0f 93       	push	r16
    67a8:	1f 93       	push	r17
    67aa:	cf 93       	push	r28
    67ac:	df 93       	push	r29
    67ae:	fb 01       	movw	r30, r22
    67b0:	23 81       	ldd	r18, Z+3	; 0x03
    67b2:	21 fd       	sbrc	r18, 1
    67b4:	03 c0       	rjmp	.+6      	; 0x67bc <fputc+0x16>
    67b6:	8f ef       	ldi	r24, 0xFF	; 255
    67b8:	9f ef       	ldi	r25, 0xFF	; 255
    67ba:	2c c0       	rjmp	.+88     	; 0x6814 <fputc+0x6e>
    67bc:	22 ff       	sbrs	r18, 2
    67be:	16 c0       	rjmp	.+44     	; 0x67ec <fputc+0x46>
    67c0:	46 81       	ldd	r20, Z+6	; 0x06
    67c2:	57 81       	ldd	r21, Z+7	; 0x07
    67c4:	24 81       	ldd	r18, Z+4	; 0x04
    67c6:	35 81       	ldd	r19, Z+5	; 0x05
    67c8:	42 17       	cp	r20, r18
    67ca:	53 07       	cpc	r21, r19
    67cc:	44 f4       	brge	.+16     	; 0x67de <fputc+0x38>
    67ce:	a0 81       	ld	r26, Z
    67d0:	b1 81       	ldd	r27, Z+1	; 0x01
    67d2:	9d 01       	movw	r18, r26
    67d4:	2f 5f       	subi	r18, 0xFF	; 255
    67d6:	3f 4f       	sbci	r19, 0xFF	; 255
    67d8:	31 83       	std	Z+1, r19	; 0x01
    67da:	20 83       	st	Z, r18
    67dc:	8c 93       	st	X, r24
    67de:	26 81       	ldd	r18, Z+6	; 0x06
    67e0:	37 81       	ldd	r19, Z+7	; 0x07
    67e2:	2f 5f       	subi	r18, 0xFF	; 255
    67e4:	3f 4f       	sbci	r19, 0xFF	; 255
    67e6:	37 83       	std	Z+7, r19	; 0x07
    67e8:	26 83       	std	Z+6, r18	; 0x06
    67ea:	14 c0       	rjmp	.+40     	; 0x6814 <fputc+0x6e>
    67ec:	8b 01       	movw	r16, r22
    67ee:	ec 01       	movw	r28, r24
    67f0:	fb 01       	movw	r30, r22
    67f2:	00 84       	ldd	r0, Z+8	; 0x08
    67f4:	f1 85       	ldd	r31, Z+9	; 0x09
    67f6:	e0 2d       	mov	r30, r0
    67f8:	09 95       	icall
    67fa:	89 2b       	or	r24, r25
    67fc:	e1 f6       	brne	.-72     	; 0x67b6 <fputc+0x10>
    67fe:	d8 01       	movw	r26, r16
    6800:	16 96       	adiw	r26, 0x06	; 6
    6802:	8d 91       	ld	r24, X+
    6804:	9c 91       	ld	r25, X
    6806:	17 97       	sbiw	r26, 0x07	; 7
    6808:	01 96       	adiw	r24, 0x01	; 1
    680a:	17 96       	adiw	r26, 0x07	; 7
    680c:	9c 93       	st	X, r25
    680e:	8e 93       	st	-X, r24
    6810:	16 97       	sbiw	r26, 0x06	; 6
    6812:	ce 01       	movw	r24, r28
    6814:	df 91       	pop	r29
    6816:	cf 91       	pop	r28
    6818:	1f 91       	pop	r17
    681a:	0f 91       	pop	r16
    681c:	08 95       	ret

0000681e <ungetc>:
    681e:	fb 01       	movw	r30, r22
    6820:	23 81       	ldd	r18, Z+3	; 0x03
    6822:	20 ff       	sbrs	r18, 0
    6824:	12 c0       	rjmp	.+36     	; 0x684a <ungetc+0x2c>
    6826:	26 fd       	sbrc	r18, 6
    6828:	10 c0       	rjmp	.+32     	; 0x684a <ungetc+0x2c>
    682a:	8f 3f       	cpi	r24, 0xFF	; 255
    682c:	3f ef       	ldi	r19, 0xFF	; 255
    682e:	93 07       	cpc	r25, r19
    6830:	61 f0       	breq	.+24     	; 0x684a <ungetc+0x2c>
    6832:	82 83       	std	Z+2, r24	; 0x02
    6834:	2f 7d       	andi	r18, 0xDF	; 223
    6836:	20 64       	ori	r18, 0x40	; 64
    6838:	23 83       	std	Z+3, r18	; 0x03
    683a:	26 81       	ldd	r18, Z+6	; 0x06
    683c:	37 81       	ldd	r19, Z+7	; 0x07
    683e:	21 50       	subi	r18, 0x01	; 1
    6840:	31 09       	sbc	r19, r1
    6842:	37 83       	std	Z+7, r19	; 0x07
    6844:	26 83       	std	Z+6, r18	; 0x06
    6846:	99 27       	eor	r25, r25
    6848:	08 95       	ret
    684a:	8f ef       	ldi	r24, 0xFF	; 255
    684c:	9f ef       	ldi	r25, 0xFF	; 255
    684e:	08 95       	ret

00006850 <__ultoa_invert>:
    6850:	fa 01       	movw	r30, r20
    6852:	aa 27       	eor	r26, r26
    6854:	28 30       	cpi	r18, 0x08	; 8
    6856:	51 f1       	breq	.+84     	; 0x68ac <__ultoa_invert+0x5c>
    6858:	20 31       	cpi	r18, 0x10	; 16
    685a:	81 f1       	breq	.+96     	; 0x68bc <__ultoa_invert+0x6c>
    685c:	e8 94       	clt
    685e:	6f 93       	push	r22
    6860:	6e 7f       	andi	r22, 0xFE	; 254
    6862:	6e 5f       	subi	r22, 0xFE	; 254
    6864:	7f 4f       	sbci	r23, 0xFF	; 255
    6866:	8f 4f       	sbci	r24, 0xFF	; 255
    6868:	9f 4f       	sbci	r25, 0xFF	; 255
    686a:	af 4f       	sbci	r26, 0xFF	; 255
    686c:	b1 e0       	ldi	r27, 0x01	; 1
    686e:	3e d0       	rcall	.+124    	; 0x68ec <__ultoa_invert+0x9c>
    6870:	b4 e0       	ldi	r27, 0x04	; 4
    6872:	3c d0       	rcall	.+120    	; 0x68ec <__ultoa_invert+0x9c>
    6874:	67 0f       	add	r22, r23
    6876:	78 1f       	adc	r23, r24
    6878:	89 1f       	adc	r24, r25
    687a:	9a 1f       	adc	r25, r26
    687c:	a1 1d       	adc	r26, r1
    687e:	68 0f       	add	r22, r24
    6880:	79 1f       	adc	r23, r25
    6882:	8a 1f       	adc	r24, r26
    6884:	91 1d       	adc	r25, r1
    6886:	a1 1d       	adc	r26, r1
    6888:	6a 0f       	add	r22, r26
    688a:	71 1d       	adc	r23, r1
    688c:	81 1d       	adc	r24, r1
    688e:	91 1d       	adc	r25, r1
    6890:	a1 1d       	adc	r26, r1
    6892:	20 d0       	rcall	.+64     	; 0x68d4 <__ultoa_invert+0x84>
    6894:	09 f4       	brne	.+2      	; 0x6898 <__ultoa_invert+0x48>
    6896:	68 94       	set
    6898:	3f 91       	pop	r19
    689a:	2a e0       	ldi	r18, 0x0A	; 10
    689c:	26 9f       	mul	r18, r22
    689e:	11 24       	eor	r1, r1
    68a0:	30 19       	sub	r19, r0
    68a2:	30 5d       	subi	r19, 0xD0	; 208
    68a4:	31 93       	st	Z+, r19
    68a6:	de f6       	brtc	.-74     	; 0x685e <__ultoa_invert+0xe>
    68a8:	cf 01       	movw	r24, r30
    68aa:	08 95       	ret
    68ac:	46 2f       	mov	r20, r22
    68ae:	47 70       	andi	r20, 0x07	; 7
    68b0:	40 5d       	subi	r20, 0xD0	; 208
    68b2:	41 93       	st	Z+, r20
    68b4:	b3 e0       	ldi	r27, 0x03	; 3
    68b6:	0f d0       	rcall	.+30     	; 0x68d6 <__ultoa_invert+0x86>
    68b8:	c9 f7       	brne	.-14     	; 0x68ac <__ultoa_invert+0x5c>
    68ba:	f6 cf       	rjmp	.-20     	; 0x68a8 <__ultoa_invert+0x58>
    68bc:	46 2f       	mov	r20, r22
    68be:	4f 70       	andi	r20, 0x0F	; 15
    68c0:	40 5d       	subi	r20, 0xD0	; 208
    68c2:	4a 33       	cpi	r20, 0x3A	; 58
    68c4:	18 f0       	brcs	.+6      	; 0x68cc <__ultoa_invert+0x7c>
    68c6:	49 5d       	subi	r20, 0xD9	; 217
    68c8:	31 fd       	sbrc	r19, 1
    68ca:	40 52       	subi	r20, 0x20	; 32
    68cc:	41 93       	st	Z+, r20
    68ce:	02 d0       	rcall	.+4      	; 0x68d4 <__ultoa_invert+0x84>
    68d0:	a9 f7       	brne	.-22     	; 0x68bc <__ultoa_invert+0x6c>
    68d2:	ea cf       	rjmp	.-44     	; 0x68a8 <__ultoa_invert+0x58>
    68d4:	b4 e0       	ldi	r27, 0x04	; 4
    68d6:	a6 95       	lsr	r26
    68d8:	97 95       	ror	r25
    68da:	87 95       	ror	r24
    68dc:	77 95       	ror	r23
    68de:	67 95       	ror	r22
    68e0:	ba 95       	dec	r27
    68e2:	c9 f7       	brne	.-14     	; 0x68d6 <__ultoa_invert+0x86>
    68e4:	00 97       	sbiw	r24, 0x00	; 0
    68e6:	61 05       	cpc	r22, r1
    68e8:	71 05       	cpc	r23, r1
    68ea:	08 95       	ret
    68ec:	9b 01       	movw	r18, r22
    68ee:	ac 01       	movw	r20, r24
    68f0:	0a 2e       	mov	r0, r26
    68f2:	06 94       	lsr	r0
    68f4:	57 95       	ror	r21
    68f6:	47 95       	ror	r20
    68f8:	37 95       	ror	r19
    68fa:	27 95       	ror	r18
    68fc:	ba 95       	dec	r27
    68fe:	c9 f7       	brne	.-14     	; 0x68f2 <__ultoa_invert+0xa2>
    6900:	62 0f       	add	r22, r18
    6902:	73 1f       	adc	r23, r19
    6904:	84 1f       	adc	r24, r20
    6906:	95 1f       	adc	r25, r21
    6908:	a0 1d       	adc	r26, r0
    690a:	08 95       	ret

0000690c <__ctype_isfalse>:
    690c:	99 27       	eor	r25, r25
    690e:	88 27       	eor	r24, r24

00006910 <__ctype_istrue>:
    6910:	08 95       	ret

00006912 <__prologue_saves__>:
    6912:	2f 92       	push	r2
    6914:	3f 92       	push	r3
    6916:	4f 92       	push	r4
    6918:	5f 92       	push	r5
    691a:	6f 92       	push	r6
    691c:	7f 92       	push	r7
    691e:	8f 92       	push	r8
    6920:	9f 92       	push	r9
    6922:	af 92       	push	r10
    6924:	bf 92       	push	r11
    6926:	cf 92       	push	r12
    6928:	df 92       	push	r13
    692a:	ef 92       	push	r14
    692c:	ff 92       	push	r15
    692e:	0f 93       	push	r16
    6930:	1f 93       	push	r17
    6932:	cf 93       	push	r28
    6934:	df 93       	push	r29
    6936:	cd b7       	in	r28, 0x3d	; 61
    6938:	de b7       	in	r29, 0x3e	; 62
    693a:	ca 1b       	sub	r28, r26
    693c:	db 0b       	sbc	r29, r27
    693e:	0f b6       	in	r0, 0x3f	; 63
    6940:	f8 94       	cli
    6942:	de bf       	out	0x3e, r29	; 62
    6944:	0f be       	out	0x3f, r0	; 63
    6946:	cd bf       	out	0x3d, r28	; 61
    6948:	09 94       	ijmp

0000694a <__epilogue_restores__>:
    694a:	2a 88       	ldd	r2, Y+18	; 0x12
    694c:	39 88       	ldd	r3, Y+17	; 0x11
    694e:	48 88       	ldd	r4, Y+16	; 0x10
    6950:	5f 84       	ldd	r5, Y+15	; 0x0f
    6952:	6e 84       	ldd	r6, Y+14	; 0x0e
    6954:	7d 84       	ldd	r7, Y+13	; 0x0d
    6956:	8c 84       	ldd	r8, Y+12	; 0x0c
    6958:	9b 84       	ldd	r9, Y+11	; 0x0b
    695a:	aa 84       	ldd	r10, Y+10	; 0x0a
    695c:	b9 84       	ldd	r11, Y+9	; 0x09
    695e:	c8 84       	ldd	r12, Y+8	; 0x08
    6960:	df 80       	ldd	r13, Y+7	; 0x07
    6962:	ee 80       	ldd	r14, Y+6	; 0x06
    6964:	fd 80       	ldd	r15, Y+5	; 0x05
    6966:	0c 81       	ldd	r16, Y+4	; 0x04
    6968:	1b 81       	ldd	r17, Y+3	; 0x03
    696a:	aa 81       	ldd	r26, Y+2	; 0x02
    696c:	b9 81       	ldd	r27, Y+1	; 0x01
    696e:	ce 0f       	add	r28, r30
    6970:	d1 1d       	adc	r29, r1
    6972:	0f b6       	in	r0, 0x3f	; 63
    6974:	f8 94       	cli
    6976:	de bf       	out	0x3e, r29	; 62
    6978:	0f be       	out	0x3f, r0	; 63
    697a:	cd bf       	out	0x3d, r28	; 61
    697c:	ed 01       	movw	r28, r26
    697e:	08 95       	ret

00006980 <_exit>:
    6980:	f8 94       	cli

00006982 <__stop_program>:
    6982:	ff cf       	rjmp	.-2      	; 0x6982 <__stop_program>
